CREATE SET TABLE BRAND ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      MFG VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'MFG' NOT NULL,      BRAND_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'BRAND_CD' NOT NULL,      BRAND_NAME VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'BRAND_NAME' NOT NULL,      BRAND_PARTY_ID INTEGER TITLE 'BRAND_PARTY_ID', CONSTRAINT BOO_SDRI_1 FOREIGN KEY ( BRAND_PARTY_ID ) REFERENCES BRAND_OWNER_ORG ( BRAND_PARTY_ID ))UNIQUE PRIMARY INDEX BRA_UPI ( BRAND_CD );
CREATE SET TABLE LOCATION_TYPE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      LOCATION_TYPE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'LOCATION_TYPE_CD' NOT NULL,      LOCATION_TYPE_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'LOCATION_TYPE_DESC' NOT NULL)UNIQUE PRIMARY INDEX LOT_UPI ( LOCATION_TYPE_CD )PARTITION BY ((HASHBUCKET(HASHROW(LOCATION_TYPE_CD ))) MOD  10 )+ 1 INDEX LOT_HOSI_1 ( LOCATION_TYPE_CD ,LOCATION_TYPE_DESC ) ORDER BY HASH ( LOCATION_TYPE_CD );
CREATE SET TABLE CHANNEL ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      CHANNEL_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'CHANNEL_CD' NOT NULL,      CHANNEL_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'CHANNEL_DESC')UNIQUE PRIMARY INDEX CHA_UPI ( CHANNEL_CD );
CREATE SET TABLE ALL_DIVISIONS ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      ALL_DIVISIONS_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ALL_DIVISIONS_CD' NOT NULL,      ALL_DIVISIONS_NAME VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ALL_DIVISIONS_NAME')UNIQUE PRIMARY INDEX ALD_UPI ( ALL_DIVISIONS_CD )PARTITION BY ((HASHBUCKET(HASHROW(ALL_DIVISIONS_CD ))) MOD  10 )+ 1 ;
CREATE SET TABLE DIVISION ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      DIVISION_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'DIVISION_CD' NOT NULL,      DIVISION_NAME VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'DIVISION_NAME' NOT NULL,      ALL_DIVISIONS_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ALL_DIVISIONS_CD' NOT NULL,      DIVISION_MGR_ASSOCIATE_ID INTEGER TITLE 'DIVISION_MGR_ASSOCIATE_ID', CONSTRAINT DIV_SDRI_1 FOREIGN KEY ( ALL_DIVISIONS_CD ) REFERENCES ALL_DIVISIONS ( ALL_DIVISIONS_CD ))UNIQUE PRIMARY INDEX DIV_UPI ( DIVISION_CD )PARTITION BY ((HASHBUCKET(HASHROW(DIVISION_CD ))) MOD  10 )+ 1 INDEX DIV_VOSI_1 ( DIVISION_MGR_ASSOCIATE_ID ) ORDER BY VALUES ( DIVISION_MGR_ASSOCIATE_ID );
CREATE SET TABLE REGION ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      REGION_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'REGION_CD' NOT NULL,      REGION_NAME VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'REGION_NAME' NOT NULL,      DIVISION_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'DIVISION_CD' NOT NULL,      REGION_MGR_ASSOCIATE_ID INTEGER TITLE 'REGION_MGR_ASSOCIATE_ID', CONSTRAINT REG_SDRI_1 FOREIGN KEY ( DIVISION_CD ) REFERENCES DIVISION ( DIVISION_CD ))UNIQUE PRIMARY INDEX REG_UPI ( REGION_CD )INDEX REG_HOSI_1 ( REGION_CD ,REGION_NAME ) ORDER BY HASH ( REGION_CD )INDEX REG_HOSI_2 ( REGION_NAME ,DIVISION_CD ) ORDER BY HASH ( DIVISION_CD )INDEX REG_VOSI_1 ( REGION_NAME ,REGION_MGR_ASSOCIATE_ID ) ORDER BY VALUES ( REGION_MGR_ASSOCIATE_ID );
CREATE SET TABLE DISTRICT ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      DISTRICT_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'DISTRICT_CD' NOT NULL,      DISTRICT_NAME VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'DISTRICT_NAME',      REGION_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'REGION_CD' NOT NULL,      DISTRICT_MGR_ASSOCIATE_ID INTEGER TITLE 'DISTRICT_MGR_ASSOCIATE_ID', CONSTRAINT DIS_SDRI_1 FOREIGN KEY ( REGION_CD ) REFERENCES REGION ( REGION_CD ))UNIQUE PRIMARY INDEX DIS_UPI ( DISTRICT_CD )PARTITION BY ((HASHBUCKET(HASHROW(DISTRICT_CD ))) MOD  10 )+ 1 INDEX DIS_HOSI_1 ( REGION_CD ) ORDER BY HASH ( REGION_CD )INDEX DIS_VOSI_1 ( DISTRICT_MGR_ASSOCIATE_ID ) ORDER BY VALUES ( DISTRICT_MGR_ASSOCIATE_ID );
CREATE MULTISET TABLE LOCATION ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      LOCATION_ID INTEGER TITLE 'LOCATION_ID' NOT NULL,      LOCATION_NAME CHAR(40) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'LOCATION_NAME',      LOCATION_OPEN_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'LOCATION_OPEN_DT',      LOCATION_CLOSE_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'LOCATION_CLOSE_DT',      LOCATION_EFFECTIVE_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'LOCATION_EFFECTIVE_DT',      LOCATION_TOTAL_AREA_MEAS DECIMAL(18,4) TITLE 'LOCATION_TOTAL_AREA_MEAS',      CHAIN_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'CHAIN_CD',      CHANNEL_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'CHANNEL_CD',      DISTRICT_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'DISTRICT_CD',      PARENT_LOCATION_ID INTEGER TITLE 'PARENT_LOCATION_ID',      LOCATION_MGR_ASSOCIATE_ID INTEGER TITLE 'LOCATION_MGR_ASSOCIATE_ID',      LOCATION_TYPE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'LOCATION_TYPE_CD', CONSTRAINT LOC_SDRI_1 FOREIGN KEY ( LOCATION_TYPE_CD ) REFERENCES LOCATION_TYPE ( LOCATION_TYPE_CD ),CONSTRAINT LOC_SDRI_2 FOREIGN KEY ( CHANNEL_CD ) REFERENCES CHANNEL ( CHANNEL_CD ),CONSTRAINT LOC_SDRI_3 FOREIGN KEY ( DISTRICT_CD ) REFERENCES DISTRICT ( DISTRICT_CD ))UNIQUE PRIMARY INDEX LOC_UPI ( LOCATION_ID )PARTITION BY (LOCATION_ID  MOD  10 )+ 1 INDEX LOC_HOSI_1 ( LOCATION_ID ,LOCATION_NAME ) ORDER BY HASH ( LOCATION_ID )INDEX LOC_HOSI_2 ( LOCATION_NAME ,CHAIN_CD ) ORDER BY HASH ( CHAIN_CD )INDEX LOC_HOSI_3 ( LOCATION_TOTAL_AREA_MEAS ,CHANNEL_CD ) ORDER BY HASH ( CHANNEL_CD )INDEX LOC_HOSI_4 ( LOCATION_NAME ,DISTRICT_CD ) ORDER BY HASH ( DISTRICT_CD )INDEX LOC_HOSI_5 ( LOCATION_TOTAL_AREA_MEAS ,LOCATION_TYPE_CD ) ORDER BY HASH ( LOCATION_TYPE_CD )INDEX LOC_VOSI_1 ( LOCATION_ID ,LOCATION_NAME ) ORDER BY VALUES ( LOCATION_ID )INDEX LOC_VOSI_2 ( LOCATION_OPEN_DT ,LOCATION_TOTAL_AREA_MEAS ) ORDER BY VALUES ( LOCATION_OPEN_DT )INDEX LOC_VOSI_3 ( LOCATION_NAME ,LOCATION_CLOSE_DT ) ORDER BY VALUES ( LOCATION_CLOSE_DT )INDEX LOC_VOSI_4 ( LOCATION_TOTAL_AREA_MEAS ,PARENT_LOCATION_ID ) ORDER BY VALUES ( PARENT_LOCATION_ID )INDEX LOC_VOSI_5 ( LOCATION_TOTAL_AREA_MEAS ,LOCATION_MGR_ASSOCIATE_ID ) ORDER BY VALUES ( LOCATION_MGR_ASSOCIATE_ID );
CREATE SET TABLE PRICE_CHANGE_REASON ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      PRICE_CHANGE_REASON_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PRICE_CHANGE_REASON_CD' NOT NULL,      PRICE_CHANGE_REASON_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PRICE_CHANGE_REASON_DESC')UNIQUE PRIMARY INDEX PCR_UPI ( PRICE_CHANGE_REASON_CD )PARTITION BY ((HASHBUCKET(HASHROW(PRICE_CHANGE_REASON_CD ))) MOD  10 )+ 1 INDEX PCR_HOSI_1 ( PRICE_CHANGE_REASON_CD ,PRICE_CHANGE_REASON_DESC ) ORDER BY HASH ( PRICE_CHANGE_REASON_CD );
CREATE SET TABLE TRAIT_GROUP ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      TRAIT_GROUP_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_GROUP_CD' NOT NULL,      TRAIT_GROUP_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_GROUP_DESC')UNIQUE PRIMARY INDEX TRG_UPI ( TRAIT_GROUP_CD )PARTITION BY ((HASHBUCKET(HASHROW(TRAIT_GROUP_CD ))) MOD  10 )+ 1 INDEX TRG_HOSI_1 ( TRAIT_GROUP_CD ,TRAIT_GROUP_DESC ) ORDER BY HASH ( TRAIT_GROUP_CD );
CREATE SET TABLE TRAIT ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      TRAIT_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_CD' NOT NULL,      TRAIT_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_DESC',      TRAIT_GROUP_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_GROUP_CD' NOT NULL, CONSTRAINT TRA_SDRI_1 FOREIGN KEY ( TRAIT_GROUP_CD ) REFERENCES TRAIT_GROUP ( TRAIT_GROUP_CD ))UNIQUE PRIMARY INDEX TRA_UPI ( TRAIT_CD )PARTITION BY ((HASHBUCKET(HASHROW(TRAIT_CD ))) MOD  10 )+ 1 INDEX TRA_HOSI_1 ( TRAIT_CD ,TRAIT_DESC ) ORDER BY HASH ( TRAIT_CD )INDEX TRA_HOSI_2 ( TRAIT_DESC ,TRAIT_GROUP_CD ) ORDER BY HASH ( TRAIT_GROUP_CD );
CREATE SET TABLE RETURN_REASON ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      RETURN_REASON_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'RETURN_REASON_CD' NOT NULL,      RETURN_REASON_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'RETURN_REASON_DESC')UNIQUE PRIMARY INDEX RER_UPI ( RETURN_REASON_CD )PARTITION BY ((HASHBUCKET(HASHROW(RETURN_REASON_CD ))) MOD  10 )+ 1 INDEX RER_HOSI_1 ( RETURN_REASON_CD ,RETURN_REASON_DESC ) ORDER BY HASH ( RETURN_REASON_CD );
CREATE SET TABLE COST_TYPE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      COST_TYPE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'COST_TYPE_CD' NOT NULL,      COST_TYPE_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'COST_TYPE_DESC')UNIQUE PRIMARY INDEX COT_UPI ( COST_TYPE_CD )PARTITION BY ((HASHBUCKET(HASHROW(COST_TYPE_CD ))) MOD  10 )+ 1 ;
CREATE SET TABLE PROMO_TYPE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      PROMO_TYPE_NAME VARCHAR(30) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PROMO_TYPE_NAME',      PROMO_TYPE_ID CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PROMO_TYPE_ID' NOT NULL)UNIQUE PRIMARY INDEX PRT_UPI ( PROMO_TYPE_ID )PARTITION BY ((HASHBUCKET(HASHROW(PROMO_TYPE_ID ))) MOD  10 )+ 1 INDEX PRT_HOSI_1 ( PROMO_TYPE_NAME ,PROMO_TYPE_ID ) ORDER BY HASH ( PROMO_TYPE_ID );
CREATE SET TABLE CURRENT_PROMO ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      PROMO_NAME VARCHAR(30) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PROMO_NAME',      PROMO_ID VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PROMO_ID' NOT NULL,      PROMO_TYPE CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PROMO_TYPE',      PROMO_DESC VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PROMO_DESC', CONSTRAINT CUP_SDRI_1 FOREIGN KEY ( PROMO_TYPE ) REFERENCES PROMO_TYPE ( PROMO_TYPE_ID ))UNIQUE PRIMARY INDEX CUP_UPI ( PROMO_ID )INDEX CUP_HOSI_2 ( PROMO_TYPE ) ORDER BY HASH ( PROMO_TYPE );
CREATE SET TABLE COST ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      COST_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'COST_CD' NOT NULL,      COST_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'COST_DESC',      COST_TYPE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'COST_TYPE_CD' NOT NULL, CONSTRAINT COS_SDRI_2 FOREIGN KEY ( COST_TYPE_CD ) REFERENCES COST_TYPE ( COST_TYPE_CD ))UNIQUE PRIMARY INDEX COS_UPI ( COST_CD )PARTITION BY ((HASHBUCKET(HASHROW(COST_CD ))) MOD  10 )+ 1 INDEX COS_HOSI_2 ( COST_TYPE_CD ) ORDER BY HASH ( COST_TYPE_CD );
CREATE SET TABLE WORK_SHIFT ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      WORK_SHIFT_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'WORK_SHIFT_CD' NOT NULL,      WORK_SHIFT_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'WORK_SHIFT_DESC')UNIQUE PRIMARY INDEX WOS_UPI ( WORK_SHIFT_CD )PARTITION BY ((HASHBUCKET(HASHROW(WORK_SHIFT_CD ))) MOD  10 )+ 1 INDEX WOS_HOSI_1 ( WORK_SHIFT_CD ,WORK_SHIFT_DESC ) ORDER BY HASH ( WORK_SHIFT_CD );
CREATE SET TABLE JOB_CLASSIFICATION ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      JOB_CLASSIFICATION_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'JOB_CLASSIFICATION_CD' NOT NULL,      JOB_CLASSIFICATION_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'JOB_CLASSIFICATION_DESC')UNIQUE PRIMARY INDEX JOC_UPI ( JOB_CLASSIFICATION_CD )PARTITION BY ((HASHBUCKET(HASHROW(JOB_CLASSIFICATION_CD ))) MOD  10 )+ 1 ;
CREATE SET TABLE POSITION_GRADE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      POSITION_GRADE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'POSITION_GRADE_CD' NOT NULL,      POSITION_GRADE_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'POSITION_GRADE_DESC' NOT NULL)UNIQUE PRIMARY INDEX POG_UPI ( POSITION_GRADE_CD )PARTITION BY ((HASHBUCKET(HASHROW(POSITION_GRADE_CD ))) MOD  10 )+ 1 INDEX POG_HOSI_1 ( POSITION_GRADE_CD ,POSITION_GRADE_DESC ) ORDER BY HASH ( POSITION_GRADE_CD );
CREATE SET TABLE POSITION_TYPE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      POSITION_TYPE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'POSITION_TYPE_CD' NOT NULL,      POSITION_TYPE_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'POSITION_TYPE_DESC')UNIQUE PRIMARY INDEX POT_UPI ( POSITION_TYPE_CD )PARTITION BY ((HASHBUCKET(HASHROW(POSITION_TYPE_CD ))) MOD  10 )+ 1 INDEX POT_HOSI_1 ( POSITION_TYPE_CD ,POSITION_TYPE_DESC ) ORDER BY HASH ( POSITION_TYPE_CD );
CREATE SET TABLE ASSOCIATE_POSITION ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      POSITION_ID INTEGER TITLE 'POSITION_ID' NOT NULL,      POSITION_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'POSITION_DESC',      WAGE_RATE_AMT DECIMAL(18,4) TITLE 'WAGE_RATE_AMT' NOT NULL,      OVERTIME_RATE_PCT DECIMAL(9,4) TITLE 'OVERTIME_RATE_PCT',      POSITION_GRADE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'POSITION_GRADE_CD',      POSITION_TYPE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'POSITION_TYPE_CD',      JOB_CLASSIFICATION_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'JOB_CLASSIFICATION_CD', CONSTRAINT ASP_SDRI_1 FOREIGN KEY ( POSITION_GRADE_CD ) REFERENCES POSITION_GRADE ( POSITION_GRADE_CD ),CONSTRAINT ASP_SDRI_2 FOREIGN KEY ( POSITION_TYPE_CD ) REFERENCES POSITION_TYPE ( POSITION_TYPE_CD ))UNIQUE PRIMARY INDEX ASP_UPI ( POSITION_ID )PARTITION BY (POSITION_ID  MOD  10 )+ 1 INDEX ASP_VOSI_1 ( POSITION_ID ) ORDER BY VALUES ( POSITION_ID )INDEX ASP_HOSI_2 ( POSITION_TYPE_CD ) ORDER BY HASH ( POSITION_TYPE_CD )INDEX ASP_HOSI_3 ( JOB_CLASSIFICATION_CD ) ORDER BY HASH ( JOB_CLASSIFICATION_CD );
CREATE SET TABLE ASSOCIATE_EXPENSE_TYPE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      ASSOCIATE_EXPNS_TYPE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ASSOCIATE_EXPNS_TYPE_CD' NOT NULL,      ASSOC_EXPNS_TYPE_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ASSOC_EXPNS_TYPE_DESC')UNIQUE PRIMARY INDEX AET_UPI ( ASSOCIATE_EXPNS_TYPE_CD );
CREATE MULTISET TABLE PARTY ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      PARTY_ID VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_ID' NOT NULL,      PARTY_TYPE_CD CHAR(4) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_TYPE_CD' NOT NULL,      PARTY_FIRSTNAME VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_FIRSTNAME',      PARTY_LASTNAME VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_LASTNAME',      PARTY_STREET_ADDRESS VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_STREET_ADDRESS',      PARTY_CITY CHAR(30) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_CITY',      PARTY_STATE CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_STATE',      PARTY_ZIP CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_ZIP',      PARTY_INFO_SOURCE_TYPE_CD CHAR(4) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_INFO_SOURCE_TYPE_CD',      PARTY_START_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'PARTY_START_DT',      PARTY_FIRST_PURCHASE_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'PARTY_FIRST_PURCHASE_DT')UNIQUE PRIMARY INDEX PAR_UPI ( PARTY_ID )PARTITION BY ((HASHBUCKET(HASHROW(PARTY_ID ))) MOD  10 )+ 1 INDEX PAR_HOSI_2 ( PARTY_TYPE_CD ,PARTY_FIRSTNAME ) ORDER BY HASH ( PARTY_TYPE_CD )INDEX PAR_VOSI_1 ( PARTY_FIRSTNAME ,PARTY_START_DT ) ORDER BY VALUES ( PARTY_START_DT )INDEX PAR_VOSI_2 ( PARTY_FIRSTNAME ,PARTY_FIRST_PURCHASE_DT ) ORDER BY VALUES ( PARTY_FIRST_PURCHASE_DT );
CREATE SET TABLE ALL_ITEM_DIVISIONS ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      ALL_ITEM_DIVISIONS_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ALL_ITEM_DIVISIONS_CD' NOT NULL,      ALL_ITEM_DIVISIONS_NAME VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ALL_ITEM_DIVISIONS_NAME')UNIQUE PRIMARY INDEX AID_UPI ( ALL_ITEM_DIVISIONS_CD );
CREATE SET TABLE SALES_TRANSACTION ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      SALES_TRAN_ID INTEGER TITLE 'SALES_TRAN_ID' NOT NULL,      VISIT_ID INTEGER TITLE 'VISIT_ID',      TRAN_STATUS_CD CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAN_STATUS_CD',      REPORTED_AS_DTTM TIMESTAMP(6) TITLE 'REPORTED_AS_DTTM',      TRAN_TYPE_CD CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAN_TYPE_CD',      MKB_COST_AMT DECIMAL(18,4) TITLE 'MKB_COST_AMT',      MKB_ITEM_QTY DECIMAL(18,4) TITLE 'MKB_ITEM_QTY',      MKB_NUMBER_UNIQUE_ITEMS_QTY DECIMAL(18,4) TITLE 'MKB_NUMBER_UNIQUE_ITEMS_QTY',      MKB_REV_AMT DECIMAL(18,4) TITLE 'MKB_REV_AMT',      ASSOCIATE_PARTY_ID INTEGER TITLE 'ASSOCIATE_PARTY_ID',      TRAN_START_DTTM_DD TIMESTAMP(6) TITLE 'TRAN_START_DTTM_DD',      TRAN_DATE DATE FORMAT 'YYYY-MM-DD' TITLE 'TRAN_DATE',      TRAN_END_DTTM_DD TIMESTAMP(6) TITLE 'TRAN_END_DTTM_DD',      TRAN_END_HOUR INTEGER TITLE 'TRAN_END_HOUR',      TRAN_END_MINUTE INTEGER TITLE 'TRAN_END_MINUTE',      REWARD_CD VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'REWARD_CD', CONSTRAINT SAT_UQ_CST_1 PRIMARY KEY ( SALES_TRAN_ID ))PRIMARY INDEX SAT_NUPI ( SALES_TRAN_ID )PARTITION BY ( RANGE_N(ASSOCIATE_PARTY_ID  BETWEEN 0  AND 99  EACH 1 , NO RANGE OR UNKNOWN),RANGE_N(TRAN_DATE  BETWEEN '1970-01-01' AND '2010-01-01' EACH INTERVAL '1' MONTH , NO RANGE, UNKNOWN) )UNIQUE INDEX SAT_USI_1 ( SALES_TRAN_ID ,VISIT_ID )INDEX SAT_HOSI_1 ( TRAN_TYPE_CD ,MKB_ITEM_QTY ) ORDER BY HASH ( TRAN_TYPE_CD )INDEX SAT_HOSI_2 ( TRAN_STATUS_CD ,MKB_NUMBER_UNIQUE_ITEMS_QTY ) ORDER BY HASH ( TRAN_STATUS_CD )INDEX SAT_HOSI_3 ( MKB_NUMBER_UNIQUE_ITEMS_QTY ,REWARD_CD ) ORDER BY HASH ( REWARD_CD )INDEX SAT_VOSI_1 ( VISIT_ID ,MKB_REV_AMT ) ORDER BY VALUES ( VISIT_ID )INDEX SAT_VOSI_2 ( MKB_NUMBER_UNIQUE_ITEMS_QTY ,ASSOCIATE_PARTY_ID ) ORDER BY VALUES ( ASSOCIATE_PARTY_ID )INDEX SAT_VOSI_3 ( MKB_NUMBER_UNIQUE_ITEMS_QTY ,TRAN_DATE ) ORDER BY VALUES ( TRAN_DATE )INDEX SAT_VOSI_4 ( MKB_NUMBER_UNIQUE_ITEMS_QTY ,TRAN_END_HOUR ) ORDER BY VALUES ( TRAN_END_HOUR )INDEX SAT_VOSI_5 ( MKB_NUMBER_UNIQUE_ITEMS_QTY ,TRAN_END_MINUTE ) ORDER BY VALUES ( TRAN_END_MINUTE );
CREATE SET TABLE ITEM_PRICE_HISTORY ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      ITEM_ID VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC FORMAT 'X(11)' TITLE 'ITEM_ID' NOT NULL,      ITEM_PRICE_START_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'ITEM_PRICE_START_DT' NOT NULL,      PRICE_CHANGE_REASON_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC FORMAT 'X(3)' TITLE 'PRICE_CHANGE_REASON_CD',      ITEM_PRICE_AMT DECIMAL(18,2) TITLE 'ITEM_PRICE_AMT',      CURRENT_INDICATOR CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'CURRENT_INDICATOR',      LOCATION_ID INTEGER TITLE 'LOCATION_ID', CONSTRAINT IPH_SDRI_1 FOREIGN KEY ( PRICE_CHANGE_REASON_CD ) REFERENCES PRICE_CHANGE_REASON ( PRICE_CHANGE_REASON_CD ),CONSTRAINT IPH_BTRI_1 FOREIGN KEY ( ITEM_ID ) REFERENCES WITH CHECK OPTION ITEM ( ITEM_ID ))PRIMARY INDEX IPH_NUPI ( ITEM_ID )PARTITION BY ( CASE_N((0 <=  LOCATION_ID ) AND  (LOCATION_ID <  10 ),(10 <=  LOCATION_ID ) AND  (LOCATION_ID <  20 ),(20 <=  LOCATION_ID ) AND  (LOCATION_ID <  30 ),(30 <=  LOCATION_ID ) AND  (LOCATION_ID <  40 ),(40 <=  LOCATION_ID ) AND  (LOCATION_ID <  50 ),(50 <=  LOCATION_ID ) AND  (LOCATION_ID <  60 ),(60 <=  LOCATION_ID ) AND  (LOCATION_ID <  70 ),(70 <=  LOCATION_ID ) AND  (LOCATION_ID <  80 ),(80 <=  LOCATION_ID ) AND  (LOCATION_ID <  90 ), NO CASE OR UNKNOWN),RANGE_N(ITEM_PRICE_START_DT  BETWEEN '1970-01-01' AND '2010-01-01' EACH INTERVAL '1' MONTH , NO RANGE, UNKNOWN) )INDEX IPH_HOSI_1 ( ITEM_ID ) ORDER BY HASH ( ITEM_ID )INDEX IPH_HOSI_2 ( PRICE_CHANGE_REASON_CD ) ORDER BY HASH ( PRICE_CHANGE_REASON_CD )INDEX IPH_VOSI_1 ( ITEM_PRICE_START_DT ,ITEM_PRICE_AMT ) ORDER BY VALUES ( ITEM_PRICE_START_DT )INDEX IPH_VOSI_2 ( LOCATION_ID ) ORDER BY VALUES ( LOCATION_ID );
CREATE SET TABLE ITEM_TRAIT ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      ITEM_ID VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC FORMAT 'X(15)' TITLE 'ITEM_ID' NOT NULL,      TRAIT_VALUE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_VALUE_CD' NOT NULL,      TRAIT_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_CD', CONSTRAINT ITT_SDRI_1 FOREIGN KEY ( ITEM_ID ) REFERENCES ITEM ( ITEM_ID ),CONSTRAINT ITT_SDRI_2 FOREIGN KEY ( TRAIT_CD ) REFERENCES TRAIT ( TRAIT_CD ))UNIQUE PRIMARY INDEX ITT_UPI ( ITEM_ID )PARTITION BY ((HASHBUCKET(HASHROW(ITEM_ID ))) MOD  10 )+ 1 INDEX ITT_HOSI_2 ( TRAIT_CD ) ORDER BY HASH ( TRAIT_CD )INDEX ITT_HOSI_3 ( TRAIT_VALUE_CD ) ORDER BY HASH ( TRAIT_VALUE_CD );
CREATE SET TABLE TRAIT_VALUE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      TRAIT_VALUE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_VALUE_CD' NOT NULL,      TRAIT_VALUE_DESC VARCHAR(250) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_VALUE_DESC',      TRAIT_VAL VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_VAL',      UOM_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'UOM_CD',      TRAIT_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAIT_CD', CONSTRAINT TRV_SDRI_1 FOREIGN KEY ( TRAIT_CD ) REFERENCES TRAIT ( TRAIT_CD ))UNIQUE PRIMARY INDEX TRV_UPI ( TRAIT_VALUE_CD )PARTITION BY ((HASHBUCKET(HASHROW(TRAIT_VALUE_CD ))) MOD  10 )+ 1 INDEX TRV_HOSI_1 ( TRAIT_VALUE_CD ,TRAIT_VAL ) ORDER BY HASH ( TRAIT_VALUE_CD )INDEX TRV_HOSI_2 ( TRAIT_VAL ,TRAIT_CD ) ORDER BY HASH ( TRAIT_CD );
CREATE SET TABLE RETURN_TRANSACTION_LINE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      SALES_TRAN_ID INTEGER TITLE 'SALES_TRAN_ID' NOT NULL,      RETURN_TRAN_LINE_NUM VARCHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'RETURN_TRAN_LINE_NUM' NOT NULL,      RETURNED_ITEM_ID VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ITEM_ID' NOT NULL,      RETURN_ITEM_QTY DECIMAL(18,4) TITLE 'RETURN_ITEM_QTY' NOT NULL,      UNIT_REFUND_AMT DECIMAL(18,4) TITLE 'UNIT_REFUND_AMT',      ORIGINAL_SALES_TRAN_ID INTEGER TITLE 'ORIGINAL_SALES_TRAN_ID',      ORIGINAL_SALES_TRAN_LINE_NUM VARCHAR(4) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ORIGINAL_SALES_TRAN_LINE_NUM',      RETURN_TRAN_LINE_START_DTTM TIMESTAMP(6) TITLE 'RETURN_TRAN_LINE_START_DTTM',      RETURN_TRAN_LINE_END_DTTM TIMESTAMP(6) TITLE 'RETURN_TRAN_LINE_END_DTTM',      TRAN_LINE_STATUS_CD CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAN_LINE_STATUS_CD',      RETURN_REASON_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC FORMAT 'X(1)' TITLE 'RETURN_REASON_CD',      LOCATION_ID INTEGER TITLE 'LOCATION_ID', CONSTRAINT RTL_SDRI_1 FOREIGN KEY ( RETURN_REASON_CD ) REFERENCES RETURN_REASON ( RETURN_REASON_CD ),CONSTRAINT RTL_BTRI_1 FOREIGN KEY ( RETURNED_ITEM_ID ) REFERENCES WITH CHECK OPTION ITEM ( ITEM_ID ),CONSTRAINT RTL_BTRI_2 FOREIGN KEY ( LOCATION_ID ) REFERENCES WITH CHECK OPTION LOCATION ( LOCATION_ID ))PRIMARY INDEX RTL_NUPI ( SALES_TRAN_ID )PARTITION BY ( RANGE_N(LOCATION_ID  BETWEEN 0  AND 99  EACH 1 , NO RANGE OR UNKNOWN),CASE_N(((HASHBUCKET(HASHROW(RETURNED_ITEM_ID ))) MOD  5 )=  0 ,((HASHBUCKET(HASHROW(RETURNED_ITEM_ID ))) MOD  5 )=  1 ,((HASHBUCKET(HASHROW(RETURNED_ITEM_ID ))) MOD  5 )=  2 ,((HASHBUCKET(HASHROW(RETURNED_ITEM_ID ))) MOD  5 )=  3 ,((HASHBUCKET(HASHROW(RETURNED_ITEM_ID ))) MOD  5 )=  4 , NO CASE, UNKNOWN) )UNIQUE INDEX RTL_USI_1 ( SALES_TRAN_ID ,RETURN_TRAN_LINE_NUM )INDEX RTL_HOSI_1 ( SALES_TRAN_ID ,RETURN_ITEM_QTY ) ORDER BY HASH ( SALES_TRAN_ID )INDEX RTL_HOSI_2 ( RETURN_ITEM_QTY ,RETURN_REASON_CD ) ORDER BY HASH ( RETURN_REASON_CD )INDEX RTL_HOSI_3 ( RETURN_ITEM_QTY ,ORIGINAL_SALES_TRAN_ID ) ORDER BY HASH ( ORIGINAL_SALES_TRAN_ID )INDEX RTL_VOSI_1 ( UNIT_REFUND_AMT ,ORIGINAL_SALES_TRAN_ID ) ORDER BY VALUES ( ORIGINAL_SALES_TRAN_ID )INDEX RTL_VOSI_2 ( RETURN_ITEM_QTY ,LOCATION_ID ) ORDER BY VALUES ( LOCATION_ID )INDEX RTL_HOSI_4 ( RETURN_TRAN_LINE_NUM ) ORDER BY HASH ( RETURN_TRAN_LINE_NUM );
CREATE MULTISET TABLE SALES_TRANSACTION_LINE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      SALES_TRAN_ID INTEGER TITLE 'SALES_TRAN_ID' NOT NULL,      SALES_TRAN_LINE_NUM SMALLINT TITLE 'SALES_TRAN_LINE_NUM' NOT NULL,      ITEM_ID VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ITEM_ID',      ITEM_QTY DECIMAL(5,0) TITLE 'ITEM_QTY' NOT NULL,      UNIT_SELLING_PRICE_AMT DECIMAL(8,4) TITLE 'UNIT_SELLING_PRICE_AMT' NOT NULL,      UNIT_COST_AMT DECIMAL(8,4) TITLE 'UNIT_COST_AMT',      TRAN_LINE_STATUS_CD CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAN_LINE_STATUS_CD',      SALES_TRAN_LINE_START_DTTM TIMESTAMP(6) TITLE 'SALES_TRAN_LINE_START_DTTM',      TRAN_LINE_SALES_TYPE_CD CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TRAN_LINE_SALES_TYPE_CD',      SALES_TRAN_LINE_END_DTTM TIMESTAMP(6) TITLE 'SALES_TRAN_LINE_END_DTTM',      TRAN_LINE_DATE DATE FORMAT 'YYYY-MM-DD' TITLE 'TRAN_LINE_DATE',      TX_TIME INTEGER TITLE 'TX_TIME' NOT NULL,      LOCATION INTEGER TITLE 'LOCATION', CONSTRAINT STL_UQ_CST_1 PRIMARY KEY ( SALES_TRAN_ID ,SALES_TRAN_LINE_NUM ), CONSTRAINT STL_BTRI_1 FOREIGN KEY ( ITEM_ID ) REFERENCES WITH CHECK OPTION ITEM ( ITEM_ID ),CONSTRAINT STL_BTRI_2 FOREIGN KEY ( LOCATION ) REFERENCES WITH CHECK OPTION LOCATION ( LOCATION_ID ))PRIMARY INDEX STL_NUPI ( SALES_TRAN_ID )PARTITION BY ( RANGE_N(LOCATION  BETWEEN 0  AND 100  EACH 10 , NO RANGE OR UNKNOWN),CASE_N(((HASHBUCKET(HASHROW(ITEM_ID ))) MOD  5 )=  0 ,((HASHBUCKET(HASHROW(ITEM_ID ))) MOD  5 )=  1 ,((HASHBUCKET(HASHROW(ITEM_ID ))) MOD  5 )=  2 ,((HASHBUCKET(HASHROW(ITEM_ID ))) MOD  5 )=  3 ,((HASHBUCKET(HASHROW(ITEM_ID ))) MOD  5 )=  4 , NO CASE, UNKNOWN),RANGE_N(TRAN_LINE_DATE  BETWEEN '1970-01-01' AND '2010-01-01' EACH INTERVAL '1' MONTH , NO RANGE, UNKNOWN) )UNIQUE INDEX STL_USI_1 ( SALES_TRAN_ID ,LOCATION )INDEX STL_VOSI_1 ( SALES_TRAN_ID ) ORDER BY VALUES ( SALES_TRAN_ID )INDEX STL_HOSI_3 ( LOCATION )INDEX STL_HOSI_4 ( ITEM_ID )INDEX STL_VOSI_2 ( ITEM_QTY ,UNIT_COST_AMT ,TRAN_LINE_STATUS_CD ,TRAN_LINE_SALES_TYPE_CD ,TX_TIME ) ORDER BY VALUES ( TX_TIME )INDEX STL_VOSI_3 ( ITEM_QTY ,UNIT_COST_AMT ,TRAN_LINE_STATUS_CD ,TRAN_LINE_SALES_TYPE_CD ,TRAN_LINE_DATE ) ORDER BY VALUES ( TRAN_LINE_DATE )INDEX STL_VOSI_4 ( SALES_TRAN_ID ,ITEM_QTY ,TRAN_LINE_STATUS_CD ) ORDER BY VALUES ( SALES_TRAN_ID )INDEX STL_VOSI_5 ( SALES_TRAN_ID ,SALES_TRAN_LINE_NUM ,ITEM_QTY ,TRAN_LINE_STATUS_CD ) ORDER BY VALUES ( SALES_TRAN_ID )INDEX STL_VOSI_6 ( ITEM_QTY ,UNIT_COST_AMT ,LOCATION ) ORDER BY VALUES ( LOCATION );
CREATE SET TABLE OFFERS_20050701 ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      PROMO_ID VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PROMO_ID' NOT NULL,      PARTY_ID VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_ID',      LOCATION_ID INTEGER TITLE 'LOCATION_ID',      PARTY_FIRSTNAME VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_FIRSTNAME',      PARTY_LASTNAME VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'PARTY_LASTNAME',      VISITS INTEGER TITLE 'VISITS',      CLUB_LEVEL CHAR(7) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'CLUB_LEVEL', CONSTRAINT OFF_SDRI_1 FOREIGN KEY ( PROMO_ID ) REFERENCES CURRENT_PROMO ( PROMO_ID ),CONSTRAINT OFF_SDRI_2 FOREIGN KEY ( LOCATION_ID ) REFERENCES LOCATION ( LOCATION_ID ),CONSTRAINT OFF_SDRI_3 FOREIGN KEY ( PARTY_ID ) REFERENCES PARTY ( PARTY_ID ))UNIQUE PRIMARY INDEX OFF_UPI ( PROMO_ID )PARTITION BY ((HASHBUCKET(HASHROW(PROMO_ID ))) MOD  10 )+ 1 INDEX OFF_HOSI_1 ( PROMO_ID ,PARTY_FIRSTNAME ,PARTY_LASTNAME ) ORDER BY HASH ( PROMO_ID )INDEX OFF_VOSI_1 ( PARTY_FIRSTNAME ,PARTY_LASTNAME ,VISITS ) ORDER BY VALUES ( VISITS )INDEX OFF_VOSI_2 ( LOCATION_ID ,PARTY_FIRSTNAME ,PARTY_LASTNAME ) ORDER BY VALUES ( LOCATION_ID );
CREATE SET TABLE LOCATION_PLAN ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      LOCATION_ID INTEGER TITLE 'LOCATION_ID' NOT NULL,      COST_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'COST_CD' NOT NULL,      PERIOD_START_DT DATE FORMAT 'MM/DD/YYYY' TITLE 'PERIOD_START_DT' NOT NULL,      PERIOD_END_DT DATE FORMAT 'MM/DD/YYYY' TITLE 'PERIOD_END_DT',      ACTUAL_COST_AMT DECIMAL(18,4) TITLE 'ACTUAL_COST_AMT',      PLAN_COST_AMT DECIMAL(18,4) TITLE 'PLAN_COST_AMT', CONSTRAINT COS_SDRI_1 FOREIGN KEY ( COST_CD ) REFERENCES COST ( COST_CD ),CONSTRAINT LOP_BTRI_1 FOREIGN KEY ( LOCATION_ID ) REFERENCES WITH CHECK OPTION LOCATION ( LOCATION_ID ))UNIQUE PRIMARY INDEX LOP_UPI ( LOCATION_ID ,COST_CD ,PERIOD_START_DT )PARTITION BY ( RANGE_N(PERIOD_START_DT  BETWEEN '1970-01-01' AND '2010-01-01' EACH INTERVAL '1' MONTH , NO RANGE OR UNKNOWN),CASE_N((0 <=  LOCATION_ID ) AND  (LOCATION_ID <  10 ),(10 <=  LOCATION_ID ) AND  (LOCATION_ID <  20 ),(20 <=  LOCATION_ID ) AND  (LOCATION_ID <  30 ),(30 <=  LOCATION_ID ) AND  (LOCATION_ID <  40 ),(40 <=  LOCATION_ID ) AND  (LOCATION_ID <  50 ),(50 <=  LOCATION_ID ) AND  (LOCATION_ID <  60 ),(60 <=  LOCATION_ID ) AND  (LOCATION_ID <  70 ),(70 <=  LOCATION_ID ) AND  (LOCATION_ID <  80 ),(80 <=  LOCATION_ID ) AND  (LOCATION_ID <  90 ), NO CASE OR UNKNOWN) )INDEX LOP_HOSI_1 ( LOCATION_ID ,ACTUAL_COST_AMT ) ORDER BY HASH ( LOCATION_ID )INDEX LOP_HOSI_2 ( COST_CD ,ACTUAL_COST_AMT ) ORDER BY HASH ( COST_CD )INDEX LOP_VOSI_1 ( PERIOD_END_DT ,ACTUAL_COST_AMT ) ORDER BY VALUES ( PERIOD_END_DT )INDEX LOP_VOSI_2 ( PERIOD_START_DT ,ACTUAL_COST_AMT ) ORDER BY VALUES ( PERIOD_START_DT )INDEX LOP_VOSI_3 ( LOCATION_ID ,ACTUAL_COST_AMT ) ORDER BY VALUES ( LOCATION_ID );
CREATE SET TABLE ALERT_EMAILS ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      ITEM_ID VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ITEM_ID' NOT NULL,      READY_DATE DATE FORMAT 'YYYY-MM-DD' TITLE 'READY_DATE' NOT NULL,      STATUS SMALLINT TITLE 'STATUS' NOT NULL,      LOCATION_ID INTEGER TITLE 'LOCATION_ID', CONSTRAINT ALE_SDRI_1 FOREIGN KEY ( ITEM_ID ) REFERENCES ITEM ( ITEM_ID ),CONSTRAINT ALE_SDRI_2 FOREIGN KEY ( LOCATION_ID ) REFERENCES LOCATION ( LOCATION_ID ))PRIMARY INDEX AEM_NUPI ( ITEM_ID )PARTITION BY ((HASHBUCKET(HASHROW(ITEM_ID ))) MOD  100 )+ 1 UNIQUE INDEX AEM_USI_1 ( ITEM_ID ,LOCATION_ID )INDEX AEM_VOSI_1 ( READY_DATE ) ORDER BY VALUES ( READY_DATE )INDEX AEM_VOSI_2 ( LOCATION_ID ) ORDER BY VALUES ( LOCATION_ID );
CREATE SET TABLE LABOR_PLAN ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      LOCATION_ID INTEGER TITLE 'LOCATION_ID' NOT NULL,      JOB_CLASSIFICATION_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'JOB_CLASSIFICATION_CD' NOT NULL,      WORK_SHIFT_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'WORK_SHIFT_CD' NOT NULL,      PLAN_PERIOD_START_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'PLAN_PERIOD_START_DT' NOT NULL,      PLAN_PERIOD_END_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'PLAN_PERIOD_END_DT',      PLAN_HOURS_QTY DECIMAL(18,4) TITLE 'PLAN_HOURS_QTY',      PLAN_COST_AMT DECIMAL(18,4) TITLE 'PLAN_COST_AMT',      PLAN_OVERTIME_HOURS_QTY DECIMAL(18,4) TITLE 'PLAN_OVERTIME_HOURS_QTY',      PLAN_OVERTIME_COST_AMT DECIMAL(18,4) TITLE 'PLAN_OVERTIME_COST_AMT', CONSTRAINT LAP_SDRI_1 FOREIGN KEY ( WORK_SHIFT_CD ) REFERENCES WORK_SHIFT ( WORK_SHIFT_CD ),CONSTRAINT LAP_SDRI_2 FOREIGN KEY ( JOB_CLASSIFICATION_CD ) REFERENCES JOB_CLASSIFICATION ( JOB_CLASSIFICATION_CD ),CONSTRAINT LAP_BTRI_1 FOREIGN KEY ( LOCATION_ID ) REFERENCES WITH CHECK OPTION LOCATION ( LOCATION_ID ))UNIQUE PRIMARY INDEX LAP_UPI ( LOCATION_ID ,JOB_CLASSIFICATION_CD ,WORK_SHIFT_CD ,PLAN_PERIOD_START_DT )PARTITION BY ( RANGE_N(PLAN_PERIOD_START_DT  BETWEEN '1970-01-01' AND '2010-01-01' EACH INTERVAL '1' MONTH , NO RANGE, UNKNOWN),CASE_N((0 <=  LOCATION_ID ) AND  (LOCATION_ID <  10 ),(10 <=  LOCATION_ID ) AND  (LOCATION_ID <  20 ),(20 <=  LOCATION_ID ) AND  (LOCATION_ID <  30 ),(30 <=  LOCATION_ID ) AND  (LOCATION_ID <  40 ),(40 <=  LOCATION_ID ) AND  (LOCATION_ID <  50 ),(50 <=  LOCATION_ID ) AND  (LOCATION_ID <  60 ),(60 <=  LOCATION_ID ) AND  (LOCATION_ID <  70 ),(70 <=  LOCATION_ID ) AND  (LOCATION_ID <  80 ),(80 <=  LOCATION_ID ) AND  (LOCATION_ID <  90 ), NO CASE OR UNKNOWN) )INDEX LAP_HOSI_1 ( JOB_CLASSIFICATION_CD ) ORDER BY HASH ( JOB_CLASSIFICATION_CD )INDEX LAP_HOSI_2 ( WORK_SHIFT_CD ) ORDER BY HASH ( WORK_SHIFT_CD )INDEX LAP_VOSI_1 ( LOCATION_ID ,PLAN_COST_AMT ) ORDER BY VALUES ( LOCATION_ID )INDEX LAP_VOSI_2 ( PLAN_PERIOD_END_DT ,PLAN_COST_AMT ) ORDER BY VALUES ( PLAN_PERIOD_END_DT )INDEX LAP_VOSI_3 ( PLAN_PERIOD_START_DT ,PLAN_OVERTIME_HOURS_QTY ) ORDER BY VALUES ( PLAN_PERIOD_START_DT );
CREATE SET TABLE ITEM_STORE_SOLD ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      PRODUCT_ID DECIMAL(15,0) TITLE 'PRODUCT_ID',      WEEK_OF_YEAR INTEGER TITLE 'WEEK_OF_YEAR',      ON_HAND_QTY INTEGER TITLE 'ON_HAND_QTY',      HAND_RETAIL_AMT DECIMAL(18,2) TITLE 'HAND_RETAIL_AMT',      PLAN_QTY INTEGER TITLE 'PLAN_QTY',      PLAN_RETAIL_AMT DECIMAL(18,2) TITLE 'PLAN_RETAIL_AMT',      QTY_SOLD INTEGER TITLE 'QTY_SOLD',      REVENUE DECIMAL(18,2) TITLE 'REVENUE',      LOCATION_ID INTEGER TITLE 'LOCATION_ID', CONSTRAINT ISS_SDRI_1 FOREIGN KEY ( LOCATION_ID ) REFERENCES LOCATION ( LOCATION_ID ))PRIMARY INDEX ISS_NUPI ( PRODUCT_ID ,WEEK_OF_YEAR ,LOCATION_ID )INDEX ISS_HOSI_1 ( PRODUCT_ID ) ORDER BY HASH ( PRODUCT_ID )INDEX ISS_VOSI_1 ( WEEK_OF_YEAR ) ORDER BY VALUES ( WEEK_OF_YEAR )INDEX ISS_VOSI_2 ( PLAN_QTY ,PLAN_RETAIL_AMT ) ORDER BY VALUES ( PLAN_QTY )INDEX ISS_VOSI_3 ( PLAN_RETAIL_AMT ,LOCATION_ID ) ORDER BY VALUES ( LOCATION_ID );
CREATE SET TABLE ITEM_INVENTORY_PLAN ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      ITEM_INVENTORY_PLAN_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'ITEM_INVENTORY_PLAN_DT' NOT NULL,      LOCATION_ID INTEGER TITLE 'LOCATION_ID' NOT NULL,      ITEM_ID VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ITEM_ID' NOT NULL,      PLAN_ON_HAND_QTY DECIMAL(18,4) TITLE 'PLAN_ON_HAND_QTY',      PLAN_ON_HAND_RETAIL_AMT DECIMAL(18,4) TITLE 'PLAN_ON_HAND_RETAIL_AMT', CONSTRAINT IIP_BTRI_1 FOREIGN KEY ( LOCATION_ID ) REFERENCES WITH CHECK OPTION LOCATION ( LOCATION_ID ))UNIQUE PRIMARY INDEX IIP_UPI ( ITEM_INVENTORY_PLAN_DT ,LOCATION_ID ,ITEM_ID )PARTITION BY ( CASE_N((0 <=  LOCATION_ID ) AND  (LOCATION_ID <  10 ),(10 <=  LOCATION_ID ) AND  (LOCATION_ID <  20 ),(20 <=  LOCATION_ID ) AND  (LOCATION_ID <  30 ),(30 <=  LOCATION_ID ) AND  (LOCATION_ID <  40 ),(40 <=  LOCATION_ID ) AND  (LOCATION_ID <  50 ),(50 <=  LOCATION_ID ) AND  (LOCATION_ID <  60 ),(60 <=  LOCATION_ID ) AND  (LOCATION_ID <  70 ),(70 <=  LOCATION_ID ) AND  (LOCATION_ID <  80 ),(80 <=  LOCATION_ID ) AND  (LOCATION_ID <  90 ), NO CASE, UNKNOWN),RANGE_N(ITEM_INVENTORY_PLAN_DT  BETWEEN '1970-01-01' AND '2010-01-01' EACH INTERVAL '1' MONTH , NO RANGE, UNKNOWN) )UNIQUE INDEX IIP_USI_1 ( LOCATION_ID ,ITEM_ID )INDEX IIP_HOSI_1 ( ITEM_ID ) ORDER BY HASH ( ITEM_ID )INDEX IIP_VOSI_1 ( LOCATION_ID ,PLAN_ON_HAND_QTY ) ORDER BY VALUES ( LOCATION_ID )INDEX IIP_VOSI_2 ( ITEM_INVENTORY_PLAN_DT ,PLAN_ON_HAND_RETAIL_AMT ) ORDER BY VALUES ( ITEM_INVENTORY_PLAN_DT )INDEX IIP_VOSI_3 ( ITEM_INVENTORY_PLAN_DT ,PLAN_ON_HAND_QTY ) ORDER BY VALUES ( ITEM_INVENTORY_PLAN_DT );
CREATE SET TABLE ITEM_DIVISION ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      ITEM_DIVISION_CD VARCHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ITEM_DIVISION_CD' NOT NULL,      ITEM_DIVISION_NAME VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ITEM_DIVISION_NAME',      ITEM_DIVISION_MGR_ASSOCIATE_ID INTEGER TITLE 'ITEM_DIVISION_MGR_ASSOCIATE_ID',      ALL_ITEM_DIVISIONS_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ALL_ITEM_DIVISIONS_CD' NOT NULL, CONSTRAINT ITD_SDRI_1 FOREIGN KEY ( ALL_ITEM_DIVISIONS_CD ) REFERENCES ALL_ITEM_DIVISIONS ( ALL_ITEM_DIVISIONS_CD ))UNIQUE PRIMARY INDEX ITD_UPI ( ITEM_DIVISION_CD )PARTITION BY ((HASHBUCKET(HASHROW(ITEM_DIVISION_CD ))) MOD  10 )+ 1 INDEX ITD_HOSI_1 ( ALL_ITEM_DIVISIONS_CD ) ORDER BY HASH ( ALL_ITEM_DIVISIONS_CD )INDEX ITD_VOSI_1 ( ITEM_DIVISION_MGR_ASSOCIATE_ID ) ORDER BY VALUES ( ITEM_DIVISION_MGR_ASSOCIATE_ID );
CREATE SET TABLE ASSOCIATE_BENEFIT_EXPENSE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      PERIOD_END_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'PERIOD_END_DT' NOT NULL,      ASSOCIATE_EXPNS_TYPE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ASSOCIATE_EXPNS_TYPE_CD' NOT NULL,      ASSOCIATE_PARTY_ID INTEGER TITLE 'ASSOCIATE_PARTY_ID' NOT NULL,      BENEFIT_HOURS_QTY DECIMAL(18,4) TITLE 'BENEFIT_HOURS_QTY',      BENEFIT_COST_AMT DECIMAL(18,4) TITLE 'BENEFIT_COST_AMT', CONSTRAINT ABE_SDRI_1 FOREIGN KEY ( ASSOCIATE_EXPNS_TYPE_CD ) REFERENCES ASSOCIATE_EXPENSE_TYPE ( ASSOCIATE_EXPNS_TYPE_CD ))UNIQUE PRIMARY INDEX ABE_UPI ( PERIOD_END_DT ,ASSOCIATE_EXPNS_TYPE_CD ,ASSOCIATE_PARTY_ID )PARTITION BY ( RANGE_N(ASSOCIATE_EXPNS_TYPE_CD  BETWEEN 'A' AND 'B','C' AND 'D','E' AND 'F','H' AND 'J','K' AND 'L','M' AND 'Z', NO RANGE OR UNKNOWN),RANGE_N(PERIOD_END_DT  BETWEEN '1970-01-01' AND '2010-01-01' EACH INTERVAL '1' MONTH , NO RANGE, UNKNOWN) )INDEX ABE_VOSI_1 ( PERIOD_END_DT ) ORDER BY VALUES ( PERIOD_END_DT )INDEX ABE_VOSI_2 ( ASSOCIATE_PARTY_ID ) ORDER BY VALUES ( ASSOCIATE_PARTY_ID )INDEX ABE_HOSI_1 ( ASSOCIATE_EXPNS_TYPE_CD ) ORDER BY HASH ( ASSOCIATE_EXPNS_TYPE_CD )INDEX ABE_HOSI_2 ( BENEFIT_COST_AMT ) ORDER BY HASH ( BENEFIT_COST_AMT );
CREATE SET TABLE ASSOCIATE_LABOR_EXPENSE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO     (      PERIOD_END_DT DATE FORMAT 'YYYY-MM-DD' TITLE 'PERIOD_END_DT' NOT NULL,      ASSOCIATE_EXPNS_TYPE_CD VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ASSOCIATE_EXPNS_TYPE_CD' NOT NULL,      ASSOCIATE_PARTY_ID INTEGER TITLE 'ASSOCIATE_PARTY_ID' NOT NULL,      LABOR_HOURS_QTY DECIMAL(18,4) TITLE 'LABOR_HOURS_QTY',      LABOR_COST_AMT DECIMAL(18,4) TITLE 'LABOR_COST_AMT', CONSTRAINT ALE_SDRI_1 FOREIGN KEY ( ASSOCIATE_EXPNS_TYPE_CD ) REFERENCES ASSOCIATE_EXPENSE_TYPE ( ASSOCIATE_EXPNS_TYPE_CD ))UNIQUE PRIMARY INDEX ALE_UPI ( PERIOD_END_DT ,ASSOCIATE_EXPNS_TYPE_CD ,ASSOCIATE_PARTY_ID )PARTITION BY ( RANGE_N(ASSOCIATE_EXPNS_TYPE_CD  BETWEEN 'A' AND 'B','C' AND 'D','E' AND 'F','H' AND 'J','K' AND 'L','M' AND 'Z', NO RANGE, UNKNOWN),RANGE_N(PERIOD_END_DT  BETWEEN '1970-01-01' AND '2010-01-01' EACH INTERVAL '1' MONTH , NO RANGE, UNKNOWN) )INDEX ALE_VOSI_1 ( PERIOD_END_DT ) ORDER BY VALUES ( PERIOD_END_DT )INDEX ALE_VOSI_2 ( ASSOCIATE_PARTY_ID ) ORDER BY VALUES ( ASSOCIATE_PARTY_ID )INDEX ALE_HOSI_1 ( ASSOCIATE_EXPNS_TYPE_CD ) ORDER BY HASH ( ASSOCIATE_EXPNS_TYPE_CD )INDEX ALE_USI_1 ( ASSOCIATE_EXPNS_TYPE_CD ,ASSOCIATE_PARTY_ID );
REPLACE VIEW USVIEW01 AS SELECT ABE.ASSOCIATE_EXPNS_TYPE_CD X1, ABE.ASSOCIATE_PARTY_ID Y1, 9 (NAMED "Z1") FROM ASSOCIATE_BENEFIT_EXPENSE ABE WHERE ABE.ASSOCIATE_PARTY_ID IN (SELECT 1) UNION ALL SELECT ALE.ASSOCIATE_EXPNS_TYPE_CD X2, ALE.ASSOCIATE_PARTY_ID Y2, 8 (NAMED "Z2") FROM ASSOCIATE_LABOR_EXPENSE ALE WHERE ALE.ASSOCIATE_PARTY_ID IN (SELECT 6) ;
REPLACE VIEW USVIEW02 AS SELECT DIS.DISTRICT_CD, DIS.REGION_CD, DIS.DISTRICT_NAME, LOC.LOCATION_ID, LOC.LOCATION_NAME FROM LOCATION LOC LEFT OUTER JOIN ( SELECT DISTRICT_CD, REGION_CD, MIN(DISTRICT_NAME) (NAMED "DISTRICT_NAME") FROM DISTRICT GROUP BY DISTRICT_CD, REGION_CD ) DIS ON DIS.DISTRICT_CD = LOC.DISTRICT_CD;
REPLACE VIEW USVIEW06 AS SELECT LOC.LOCATION_ID, LOC.LOCATION_NAME FROM LABOR_PLAN LAP, LOCATION LOC WHERE LAP.LOCATION_ID = LOC.LOCATION_ID AND LAP.PLAN_PERIOD_START_DT > DATE '1978-01-01' MINUS SELECT LOC.LOCATION_ID, LOC.LOCATION_NAME FROM LOCATION LOC, ALERT_EMAILS AEM WHERE LOC.LOCATION_ID = AEM.LOCATION_ID AND AEM.STATUS < 6 ;
REPLACE VIEW USVIEW09 AS SELECT LOC.LOCATION_ID, LOC.LOCATION_NAME, LAP.PLAN_PERIOD_START_DT, LAP.PLAN_PERIOD_END_DT FROM LOCATION LOC INNER JOIN LABOR_PLAN LAP ON LOC.LOCATION_ID = LAP.LOCATION_ID AND LAP.PLAN_PERIOD_START_DT < DATE'2004-01-15' LEFT JOIN LOCATION_PLAN LOP ON LOC.LOCATION_ID = LOP.LOCATION_ID AND LOP.PERIOD_START_DT < DATE'2004-01-15' WHERE LOC.LOCATION_OPEN_DT > '1980-05-17' ;
REPLACE VIEW USVIEW11 AS SELECT CUP.PROMO_NAME, CUP.PROMO_TYPE, SUM(OFE.VISITS) NO_VISITS FROM OFFERS_20050701 OFE LEFT OUTER JOIN PARTY PAR ON ( OFE.PARTY_ID = PAR.PARTY_ID ) FULL OUTER JOIN CURRENT_PROMO CUP ON ( OFE.PROMO_ID = CUP.PROMO_ID ) WHERE OFE.LOCATION_ID IN (0, 2, 6, 7) AND PAR.PARTY_ID IN ('A', 'B', 'C') GROUP BY CUP.PROMO_NAME, CUP.PROMO_TYPE ;
REPLACE VIEW USVIEW12 AS SELECT DT.PROMO_ID, MAX(DT.VISITS) VISITS FROM ( SELECT OFE.PROMO_ID, OFE.VISITS FROM OFFERS_20050701 OFE UNION ALL SELECT OFE.PROMO_ID, 4 FROM OFFERS_20050701 OFE ) DT GROUP BY 1 ;
REPLACE VIEW USVIEW13 AS SELECT LOP1.LOCATION_ID, CST.COST_CD FROM ( LABOR_PLAN LAP LEFT OUTER JOIN LOCATION LOC ON LAP.LOCATION_ID = LOC.LOCATION_ID ) LEFT OUTER JOIN ( LOCATION_PLAN LOP1 INNER JOIN COST CST ON LOP1.COST_CD = CST.COST_CD ) ON LAP.LOCATION_ID = LOP1.LOCATION_ID ;
CREATE VIEW USVIEW16 AS SELECT V.LOCATION_ID, V.TOAL_REVENUE, LOC.LOCATION_NAME FROM ( SELECT S.LOCATION_ID, SUM(REVENUE) TOAL_REVENUE FROM LOCATION L, ITEM_STORE_SOLD S WHERE S.LOCATION_ID = L.LOCATION_ID GROUP BY S.LOCATION_ID HAVING SUM(REVENUE) >= 4 ) V , LOCATION LOC WHERE V.LOCATION_ID = LOC.LOCATION_ID ;
CREATE VIEW USVIEW18 AS SELECT S.SALES_TRAN_ID,AVG(ST.ITEM_QTY) AVG_ITEM_QTY, 100 * SUM ( CASE WHEN ST.ITEM_QTY < 3 THEN 1 WHEN ST.ITEM_QTY >= 3 AND ST.ITEM_QTY < 8 THEN 2 ELSE S.MKB_COST_AMT END ) / SUM(S.MKB_COST_AMT) PROMO FROM SALES_TRANSACTION S, SALES_TRANSACTION_LINE ST WHERE ST.SALES_TRAN_ID = S. SALES_TRAN_ID AND S.TRAN_DATE >= '1981-01-01' AND ST.ITEM_QTY > 6 OR ST.SALES_TRAN_ID = S. SALES_TRAN_ID AND S.TRAN_DATE <= '1980-07-01' AND ST.ITEM_QTY > 3 OR ST.SALES_TRAN_ID = S. SALES_TRAN_ID AND S.MKB_COST_AMT > 5 AND S.MKB_COST_AMT + 1 > S.MKB_COST_AMT AND S.MKB_COST_AMT + 1 < 8 GROUP BY S.SALES_TRAN_ID ;
CREATE VIEW USVIEW19 AS SELECT SALES_TRAN_ID,VISIT_ID,TRAN_DATE FROM SALES_TRANSACTION S WHERE EXISTS ( SELECT * FROM SALES_TRANSACTION_LINE ST WHERE ST.SALES_TRAN_ID = S. SALES_TRAN_ID AND UNIT_SELLING_PRICE_AMT <= UNIT_COST_AMT AND UNIT_COST_AMT > 5 ) OR EXISTS ( SELECT * FROM SALES_TRANSACTION_LINE ST WHERE ST.SALES_TRAN_ID = S. SALES_TRAN_ID AND ITEM_QTY > 3.5 ) ;
CREATE VIEW USVIEW21 AS SELECT S.ITEM_ID , COUNT(*) NUM, (SELECT 'A') ITEM_NAME FROM SALES_TRANSACTION_LINE S, SALES_TRANSACTION_LINE AS A WHERE S.TRAN_LINE_DATE < '2000-01-01' AND S.SALES_TRAN_ID = A.SALES_TRAN_ID GROUP BY 1 HAVING SUM(-1.0000000) <= -1 ;
