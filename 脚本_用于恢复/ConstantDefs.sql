insert into DBC.ConstantDefs values (2, '10,001', 'OptProperties', 'I', '0', '?', 'ConstString field contains properties definition string. '); 
insert into DBC.ConstantDefs values (1, '1', 'OptBitInst', 'I', '33.0000', '?', 'Defines the path length to check (or set) bit map given a row ID. Value in instructions/operation. '); 
insert into DBC.ConstantDefs values (2, '10,002', 'OptIndexBlockSize', 'I', '49,152.0000', '?', 'Assumed block size for index subtable IOs. Value is in bytes. '); 
insert into DBC.ConstantDefs values (1, '2', 'OptBMAndRowInst', 'I', '98,500.0000', '?', 'Defines the path length to AND two bit maps, each the size of a single bitmap row. Current size of bitmap row is 16KB. Value in instructions/operation. '); 
insert into DBC.ConstantDefs values (2, '10,003', 'OptMaxBldKeySize', 'I', '1,000.0000', '?', 'Defines the maximum size of a key that can be built for a nested join. Value is in bytes. '); 
insert into DBC.ConstantDefs values (1, '3', 'OptCharFieldInst', 'I', '261.0000', '?', 'Defines the path length to build a one character field. Value in instructions/field. '); 
insert into DBC.ConstantDefs values (2, '10,004', 'OptMaxRowIdSIndex', 'I', '8,030.0000', '?', 'Defines the average number of row ids in a secondary index row. '); 
insert into DBC.ConstantDefs values (1, '4', 'OptIndexBlockSize', 'I', '49,152.0000', '?', 'Assumed block size for index subtable IOs. Value is in bytes. '); 
insert into DBC.ConstantDefs values (2, '10,005', 'OptRowidSize', 'I', '12.0000', '?', 'Defines the size of each entry in a RowID list. Value is in bytes '); 
insert into DBC.ConstantDefs values (1, '5', 'OptMaxBldKeySize', 'I', '1,000.0000', '?', 'Defines the maximum size of a key that can be built for a nested join. Value is in bytes. '); 
insert into DBC.ConstantDefs values (2, '10,006', 'OptSpoolBlockSize', 'I', '131,072.0000', '?', 'Assumed block size for spool file IOs. Value is in bytes. '); 
insert into DBC.ConstantDefs values (1, '6', 'OptMaxRowIdSIndex', 'I', '8,030.0000', '?', 'Defines the average number of row ids in a secondary index row. '); 
insert into DBC.ConstantDefs values (2, '10,007', 'OptTableBlockSize', 'I', '49,152.0000', '?', 'Assumed block size for table IOs. Value is in bytes. '); 
insert into DBC.ConstantDefs values (1, '7', 'OptNumFieldInst', 'I', '37.0000', '?', 'Defines the path length to build one numeric field. Value in instructions/field. '); 
insert into DBC.ConstantDefs values (2, '10,008', 'ArrayRead4k', 'I', '1,120.0000', '?', 'Disk array access rate, number of 4k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (1, '8', 'OptOutputRowInst', 'I', '1,641.0000', '?', 'Defines the path length of the overhead to build an output row. Value in instructions/row. '); 
insert into DBC.ConstantDefs values (2, '10,009', 'ArrayRead8k', 'I', '1,020.0000', '?', 'Disk array access rate, number of 8k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (1, '9', 'OptOvhdOfRowCompInst', 'I', '242.0000', '?', 'Defines the path length of the row comparison overhead during sorting. Value in instructions/operation. '); 
insert into DBC.ConstantDefs values (2, '10,010', 'ArrayRead16k', 'I', '920.0000', '?', 'Disk array access rate, number of 16k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (1, '10', 'OptRedistributeInst', 'I', '73,389.0000', '?', 'Defines the path length for redistributing a row. Value in instructions/row. '); 
insert into DBC.ConstantDefs values (2, '10,011', 'ArrayRead32k', 'I', '775.0000', '?', 'Disk array access rate, number of 32k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (1, '11', 'OptRowAccessInst', 'I', '409.0000', '?', 'Defines the path length for accessing a row in memory. Value in instructions/row. '); 
insert into DBC.ConstantDefs values (2, '10,012', 'ArrayRead64k', 'I', '540.0000', '?', 'Disk array access rate, number of 64k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (1, '12', 'OptRowIdInst', 'I', '27,139.0000', '?', 'Defines the path length for accessing a row thru a RowID list. Value in instructions/row. '); 
insert into DBC.ConstantDefs values (2, '10,013', 'ArrayRead128k', 'I', '325.0000', '?', 'Disk array access rate, number of 128k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (1, '13', 'OptRowidSize', 'I', '12.0000', '?', 'Defines the size of each entry in a RowID list. Value is in bytes '); 
insert into DBC.ConstantDefs values (2, '10,014', 'ArrayWrite4k', 'I', '740.0000', '?', 'Disk array access rate, number of 4k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (1, '14', 'OptSpoolBlockSize', 'I', '131,072.0000', '?', 'Assumed block size for spool file IOs. Value is in bytes. '); 
insert into DBC.ConstantDefs values (2, '10,015', 'ArrayWrite8k', 'I', '650.0000', '?', 'Disk array access rate, number of 8k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (1, '15', 'OptSynonymInst', 'I', '27,139.0000', '?', 'Defines the path length for accessing a row by using an index. Value in instructions/synonym/row. '); 
insert into DBC.ConstantDefs values (2, '10,016', 'ArrayWrite16k', 'I', '560.0000', '?', 'Disk array access rate, number of 16k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (1, '16', 'OptTableBlockSize', 'I', '49,152.0000', '?', 'Assumed block size for table IOs. Value is in bytes. '); 
insert into DBC.ConstantDefs values (2, '10,017', 'ArrayWrite32k', 'I', '445.0000', '?', 'Disk array access rate, number of 32k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (1, '17', 'ArrayRead4k', 'I', '1,120.0000', '?', 'Disk array access rate, number of 4k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (2, '10,018', 'ArrayWrite64k', 'I', '290.0000', '?', 'Disk array access rate, number of 64k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (1, '18', 'ArrayRead8k', 'I', '1,020.0000', '?', 'Disk array access rate, number of 8k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (2, '10,019', 'ArrayWrite128k', 'I', '170.0000', '?', 'Disk array access rate, number of 128k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (1, '19', 'ArrayRead16k', 'I', '920.0000', '?', 'Disk array access rate, number of 16k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (2, '10,020', 'Mono0Bytes', 'I', '100,000.0000', '?', 'Network access rate, number of 0 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (1, '20', 'ArrayRead32k', 'I', '775.0000', '?', 'Disk array access rate, number of 32k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (2, '10,021', 'Mono100Bytes', 'I', '91,220.0000', '?', 'Network access rate, number of 100 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (1, '21', 'ArrayRead64k', 'I', '540.0000', '?', 'Disk array access rate, number of 64k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (2, '10,022', 'Mono400Bytes', 'I', '72,201.0000', '?', 'Network access rate, number of 400 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (1, '22', 'ArrayRead128k', 'I', '325.0000', '?', 'Disk array access rate, number of 128k (bytes) block reads per second. '); 
insert into DBC.ConstantDefs values (2, '10,023', 'Mono1600Bytes', 'I', '39,369.0000', '?', 'Network access rate, number of 1600 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (1, '23', 'ArrayWrite4k', 'I', '740.0000', '?', 'Disk array access rate, number of 4k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (2, '10,024', 'Mono6400Bytes', 'I', '13,966.0000', '?', 'Network access rate, number of 6400 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (1, '24', 'ArrayWrite8k', 'I', '650.0000', '?', 'Disk array access rate, number of 8k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (2, '10,025', 'Mono25600Bytes', 'I', '3,900.0000', '?', 'Network access rate, number of 25600 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (1, '25', 'ArrayWrite16k', 'I', '560.0000', '?', 'Disk array access rate, number of 16k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (2, '10,026', 'Multi0Bytes', 'I', '100,000.0000', '?', 'Network access rate, number of 0 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (1, '26', 'ArrayWrite32k', 'I', '445.0000', '?', 'Disk array access rate, number of 32k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (2, '10,027', 'Multi100Bytes', 'I', '91,220.0000', '?', 'Network access rate, number of 100 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (1, '27', 'ArrayWrite64k', 'I', '290.0000', '?', 'Disk array access rate, number of 64k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (2, '10,028', 'Multi400Bytes', 'I', '72,201.0000', '?', 'Network access rate, number of 400 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (1, '28', 'ArrayWrite128k', 'I', '170.0000', '?', 'Disk array access rate, number of 128k (bytes) block writes per second. '); 
insert into DBC.ConstantDefs values (2, '10,029', 'Multi1600Bytes', 'I', '39,369.0000', '?', 'Network access rate, number of 1600 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (1, '29', 'Mono0Bytes', 'I', '100,000.0000', '?', 'Network access rate, number of 0 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (2, '10,030', 'Multi6400Bytes', 'I', '13,966.0000', '?', 'Network access rate, number of 6400 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (1, '30', 'Mono100Bytes', 'I', '91,220.0000', '?', 'Network access rate, number of 100 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (2, '10,031', 'Multi25600Bytes', 'I', '3,900.0000', '?', 'Network access rate, number of 25600 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (1, '31', 'Mono400Bytes', 'I', '72,201.0000', '?', 'Network access rate, number of 400 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (2, '10,032', 'OptCPUWeight', 'I', '1.0000', '?', 'CPU cost weighting factor, 1.0 is normal. Larger values increase this factor"s weight relative to others at 1.0. '); 
insert into DBC.ConstantDefs values (1, '32', 'Mono1600Bytes', 'I', '39,369.0000', '?', 'Network access rate, number of 1600 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (2, '10,033', 'OptIOWeight', 'I', '1.0000', '?', 'IO cost weighting factor, 1.0 is normal. Larger values increase this factor"s weight relative to others at 1.0. '); 
insert into DBC.ConstantDefs values (1, '33', 'Mono6400Bytes', 'I', '13,966.0000', '?', 'Network access rate, number of 6400 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (2, '10,034', 'OptNetWeight', 'I', '1.0000', '?', 'Network cost weighting factor, 1.0 is normal. Larger values increase this factor"s weight relative to others at 1.0. '); 
insert into DBC.ConstantDefs values (1, '34', 'Mono25600Bytes', 'I', '3,900.0000', '?', 'Network access rate, number of 25600 byte messages to a single node per second. '); 
insert into DBC.ConstantDefs values (2, '10,035', 'ApplySpoolLimit', 'I', '0.0000', '?', 'Apply spool space limit heuristics? 0=No, 1=Yes '); 
insert into DBC.ConstantDefs values (1, '35', 'Multi0Bytes', 'I', '100,000.0000', '?', 'Network access rate, number of 0 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (2, '10,036', 'UseActualBlockSize', 'I', '1.0000', '?', 'Use actual block size for IO cost? 0=No, 1=Yes '); 
insert into DBC.ConstantDefs values (1, '36', 'Multi100Bytes', 'I', '91,220.0000', '?', 'Network access rate, number of 100 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (2, '10,037', 'NumMipsPerCpu', 'I', '14.0000', '?', 'CPU MIPS (million Cost instructions per second) rating '); 
insert into DBC.ConstantDefs values (1, '37', 'Multi400Bytes', 'I', '72,201.0000', '?', 'Network access rate, number of 400 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (2, '10,038', 'NumCpusPerNode', 'I', '4.0000', '?', 'Number of CPUs per node '); 
insert into DBC.ConstantDefs values (1, '38', 'Multi1600Bytes', 'I', '39,369.0000', '?', 'Network access rate, number of 1600 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (2, '10,039', 'NumAmpsPerNode', 'I', '15.0000', '?', 'Number of AMPs per node '); 
insert into DBC.ConstantDefs values (1, '39', 'Multi6400Bytes', 'I', '13,966.0000', '?', 'Network access rate, number of 6400 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (2, '10,040', 'NumNodesPerClique', 'I', '2.0000', '?', 'Number of nodes per clique '); 
insert into DBC.ConstantDefs values (1, '40', 'Multi25600Bytes', 'I', '3,900.0000', '?', 'Network access rate, number of 25600 byte messages to multiple nodes (broadcast) per second. '); 
insert into DBC.ConstantDefs values (2, '10,041', 'NumArrayPerClique', 'I', '1.0000', '?', 'Number of disk arrays per clique '); 
insert into DBC.ConstantDefs values (1, '41', 'OptRowAccessCost', 'C', '0', '?', 'The CPU cost of accessing a row in memory. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,042', 'NumNodesTotal', 'I', '2.0000', '?', 'Number of nodes in the (TPA) system '); 
insert into DBC.ConstantDefs values (1, '42', 'OptOutputRowCost', 'C', '0', '?', 'The CPU overhead cost for building an output row. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,043', 'SpoolLimitPercent', 'I', '100.0000', '?', 'Percent of User Allocated Spool Space that is excessive. In units of 1%. '); 
insert into DBC.ConstantDefs values (1, '43', 'OptRedistributeCost', 'C', '0', '?', 'The CPU cost of redistributing a row. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,060', 'OptBitInst', 'I', '33.0000', '?', 'Defines the path length to check (or set) bit map given a row ID. Value in instructions/operation. '); 
insert into DBC.ConstantDefs values (1, '44', 'OptSynonymCost', 'C', '0', '?', 'The CPU cost of accessing a row by using an index. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,061', 'OptBMAndRowInst', 'I', '98,500.0000', '?', 'Defines the path length to AND two bit maps, each the size of a single bitmap row. Current size of bitmap row is 16KB. Value in instructions/operation. '); 
insert into DBC.ConstantDefs values (1, '45', 'OptRowIDCost', 'C', '0', '?', 'The CPU cost of accessing a row thru a RowID list. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,062', 'OptCharFieldInst', 'I', '261.0000', '?', 'Defines the path length to build a one character field. Value in instructions/field. '); 
insert into DBC.ConstantDefs values (1, '46', 'OptBMAndRowCost', 'C', '0', '?', 'The CPU cost to AND two bit map rows of 16KB each. The bitmap consists of multiple bitmap rows. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,063', 'OptNumFieldInst', 'I', '37.0000', '?', 'Defines the path length to build one numeric field. Value in instructions/field. '); 
insert into DBC.ConstantDefs values (1, '47', 'OptBitCost', 'C', '0', '?', 'The CPU cost to check or set bit map given a row ID. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,064', 'OptOutputRowInst', 'I', '1,641.0000', '?', 'Defines the path length of the overhead to build an output row. Value in instructions/row. '); 
insert into DBC.ConstantDefs values (1, '48', 'OptCharFieldCost', 'C', '0', '?', 'The CPU cost of building a one character field. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,065', 'OptOvhdOfRowCompInst', 'I', '242.0000', '?', 'Defines the path length of the row comparison overhead during sorting. Value in instructions/operation. '); 
insert into DBC.ConstantDefs values (1, '49', 'OptNumFieldCost', 'C', '0', '?', 'The CPU cost of building a single numeric field. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,066', 'OptRedistributeInst', 'I', '73,389.0000', '?', 'Defines the path length for redistributing a row. Value in instructions/row. '); 
insert into DBC.ConstantDefs values (1, '50', 'OptOvhdOfRowCompCost', 'C', '0', '?', 'The CPU cost of a sort row comparison. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,067', 'OptRowAccessInst', 'I', '409.0000', '?', 'Defines the path length for accessing a row in memory. Value in instructions/row. '); 
insert into DBC.ConstantDefs values (1, '51', 'OptBMWriteRowCost', 'C', '0', '?', 'The IO cost to write and then read a bit map row of 16KB to the spool. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,068', 'OptRowIdInst', 'I', '27,139.0000', '?', 'Defines the path length for accessing a row thru a RowID list. Value in instructions/row. '); 
insert into DBC.ConstantDefs values (1, '52', 'OptTableReadRate', 'C', '0', '?', 'Disk array read access rate for a table. Number of table block reads per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,069', 'OptSynonymInst', 'I', '27,139.0000', '?', 'Defines the path length for accessing a row by using an index. Value in instructions/synonym/row. '); 
insert into DBC.ConstantDefs values (1, '53', 'OptSpoolReadRate', 'C', '0', '?', 'Disk array read access rate for a spool. Number of spool block reads per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,100', 'InitBlockProcessOv', 'I', '0', '?', 'Unscaled value of BlockProcessOv '); 
insert into DBC.ConstantDefs values (1, '54', 'OptIndexReadRate', 'C', '0', '?', 'Disk array read access rate for an index. Number of index block reads per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,101', 'InitBlockProcessCf', 'I', '0', '?', 'Unscaled value of BlockProcessCf '); 
insert into DBC.ConstantDefs values (1, '55', 'OptTableWriteRate', 'C', '0', '?', 'Disk array write access rate for a table. Number of table block writes per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,102', 'InitAccessRowOv1', 'I', '0', '?', 'Unscaled value of AccessRowOv1 '); 
insert into DBC.ConstantDefs values (1, '56', 'OptSpoolWriteRate', 'C', '0', '?', 'Disk array write access rate for a spool. Number of spool block writes per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,103', 'InitAccessRowCf1', 'I', '0', '?', 'Unscaled value of AccessRowCf1 '); 
insert into DBC.ConstantDefs values (1, '57', 'OptIndexWriteRate', 'C', '0', '?', 'Disk array write access rate for an index. Number of index block writes per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,104', 'InitAccessRowBd1', 'I', '0', '?', 'Unscaled value of AccessRowBd1 '); 
insert into DBC.ConstantDefs values (1, '58', 'OptByNetRedOvhd', 'C', '0', '?', 'Defines the network row redistribution overhead cost, point-to-point message. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,105', 'InitAccessRowOv2', 'I', '0', '?', 'Unscaled value of AccessRowOv2 '); 
insert into DBC.ConstantDefs values (1, '59', 'OptByNetRedCost', 'C', '0', '?', 'Defines the network row redistribution cost per byte, point-to-point message. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,106', 'InitAccessRowCf2', 'I', '0', '?', 'Unscaled value of AccessRowCf2 '); 
insert into DBC.ConstantDefs values (1, '60', 'OptByNetDupOvhd', 'C', '0', '?', 'Defines the network row duplication overhead cost,  broadcast message. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,107', 'InitRowDupOv1', 'I', '0', '?', 'Unscaled value of RowDupOv1 '); 
insert into DBC.ConstantDefs values (1, '61', 'OptByNetDupCost', 'C', '0', '?', 'Defines the network row duplication cost per byte,  broadcast message. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,108', 'InitRowDupCf1', 'I', '0', '?', 'Unscaled value of RowDupCf1 '); 
insert into DBC.ConstantDefs values (1, '62', 'OptCPUWeight', 'I', '1.0000', '?', 'CPU cost weighting factor, 1.0 is normal. Larger values increase this factor"s weight relative to others at 1.0. '); 
insert into DBC.ConstantDefs values (2, '10,109', 'InitRowDupBd1', 'I', '0', '?', 'Unscaled value of RowDupBd1 '); 
insert into DBC.ConstantDefs values (1, '63', 'OptIOWeight', 'I', '1.0000', '?', 'IO cost weighting factor, 1.0 is normal. Larger values increase this factor"s weight relative to others at 1.0. '); 
insert into DBC.ConstantDefs values (2, '10,110', 'InitRowDupOv2', 'I', '0', '?', 'Unscaled value of RowDupOv2 '); 
insert into DBC.ConstantDefs values (1, '64', 'OptNetWeight', 'I', '1.0000', '?', 'Network cost weighting factor, 1.0 is normal. Larger values increase this factor"s weight relative to others at 1.0. '); 
insert into DBC.ConstantDefs values (2, '10,111', 'InitRowDupCf2', 'I', '0', '?', 'Unscaled value of RowDupCf2 '); 
insert into DBC.ConstantDefs values (1, '65', 'ApplySpoolLimit', 'I', '0.0000', '?', 'Apply spool space limit heuristics? 0=No, 1=Yes '); 
insert into DBC.ConstantDefs values (2, '10,112', 'InitRowRedistOv', 'I', '0', '?', 'Unscaled value of RowRedistOv '); 
insert into DBC.ConstantDefs values (1, '66', 'UseActualBlockSize', 'I', '0.0000', '?', 'Use actual block size for IO cost? 0=No, 1=Yes '); 
insert into DBC.ConstantDefs values (2, '10,113', 'InitRowRedistCf', 'I', '0', '?', 'Unscaled value of RowRedistCf '); 
insert into DBC.ConstantDefs values (1, '67', 'NumMipsPerCpu', 'I', '14.0000', '?', 'CPU MIPS (million Cost instructions per second) rating '); 
insert into DBC.ConstantDefs values (2, '10,114', 'InitSortBufSize', 'I', '0', '?', 'Unscaled value of SortBufSize '); 
insert into DBC.ConstantDefs values (1, '68', 'NumCpusPerNode', 'I', '4.0000', '?', 'Number of CPUs per node '); 
insert into DBC.ConstantDefs values (2, '10,115', 'InitMergeSortOv', 'I', '0', '?', 'Unscaled value of MergeSortOv '); 
insert into DBC.ConstantDefs values (1, '69', 'NumAmpsPerNode', 'I', '15.0000', '?', 'Number of AMPs per node '); 
insert into DBC.ConstantDefs values (2, '10,116', 'InitMergeSortCf', 'I', '0', '?', 'Unscaled value of MergeSortCf '); 
insert into DBC.ConstantDefs values (1, '70', 'NumNodesPerClique', 'I', '2.0000', '?', 'Number of nodes per clique '); 
insert into DBC.ConstantDefs values (2, '10,117', 'InitAggrCacheHitOv', 'I', '0', '?', 'Unscaled value of AggrCacheHitOv '); 
insert into DBC.ConstantDefs values (1, '71', 'NumArrayPerClique', 'I', '1.0000', '?', 'Number of disk arrays per clique '); 
insert into DBC.ConstantDefs values (2, '10,118', 'InitAggrCacheHitCf', 'I', '0', '?', 'Unscaled value of AggrCacheHitCf '); 
insert into DBC.ConstantDefs values (1, '72', 'NumNodesTotal', 'I', '2.0000', '?', 'Number of nodes in the (TPA) system '); 
insert into DBC.ConstantDefs values (2, '10,119', 'InitAggrCacheMissOv', 'I', '0', '?', 'Unscaled value of AggrCacheMissOv '); 
insert into DBC.ConstantDefs values (1, '73', 'SpoolLimitPercent', 'I', '100.0000', '?', 'Percent of User Allocated Spool Space that is excessive. In units of 1%. '); 
insert into DBC.ConstantDefs values (2, '10,120', 'InitAggrCacheMissCf', 'I', '0', '?', 'Unscaled value of AggrCacheMissCf '); 
insert into DBC.ConstantDefs values (1, '74', 'NumNodesPerDiskArray', 'C', '0', '?', 'Number of nodes per disk array '); 
insert into DBC.ConstantDefs values (2, '10,121', 'InitPIRowAccessCo', 'I', '0', '?', 'Unscaled value of PIRowAccessCo '); 
insert into DBC.ConstantDefs values (1, '75', 'CPUScale', 'C', '0', '?', 'Conversion factor from path length to path time in milliseconds '); 
insert into DBC.ConstantDefs values (2, '10,122', 'InitPIOvhdCo', 'I', '0', '?', 'Unscaled value of NUPIOvhdC0 '); 
insert into DBC.ConstantDefs values (1, '76', 'DAScale', 'C', '0', '?', 'Conversion factor from array throughput to per-node array throughput '); 
insert into DBC.ConstantDefs values (2, '10,123', 'InitUSIOvhdCo', 'I', '0', '?', 'Unscaled value of USIOvhdCo '); 
insert into DBC.ConstantDefs values (1, '77', 'NumAmpsPerCPU', 'C', '0', '?', 'Number of AMPs per CPU '); 
insert into DBC.ConstantDefs values (2, '10,124', 'InitNUSIOvhdOv', 'I', '0', '?', 'Unscaled value of NUSIOvhdOv '); 
insert into DBC.ConstantDefs values (1, '3,002', 'GroupAMPPISampling', 'I', '0.0000', '?', 'Determines the number of AMPs to be sampled for getting row estimates of a table. \n  0 (default) - Single AMP sampling \n  2 .. 4      - Two AMP sampling \n  5           - Five AMP sampling \n  6           - Node level sampling \n  7           - All AMP sampling \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '10,125', 'InitNUSIOvhdCf', 'I', '0', '?', 'Unscaled value of NUSIOvhdCf '); 
insert into DBC.ConstantDefs values (1, '3,003', 'LegacyJoinCardDefault', 'I', '1.0000', '?', 'Enable legacy join cardinality default when no demographics on join columns \nare available. \n  0           - Use new cardinality formulas. \n  1 (default) - Fall back to legacy formulas. \n '); 
insert into DBC.ConstantDefs values (2, '10,126', 'InitBitMapBuildOvhdOv', 'I', '0', '?', 'Unscaled value of BitMapBuildOvhdOv '); 
insert into DBC.ConstantDefs values (1, '3,004', 'LIKEEstPartialIntRatio', 'I', '0.5000', '?', 'The default ratio for calculating the rows selected  in a partially covered \ninterval by LIKE predicates of "abc%"- pattern. \n  Valid Range: 0 - 1 \n  Default: 0.5 \n '); 
insert into DBC.ConstantDefs values (2, '10,127', 'InitBitMapBuildOvhdCf', 'I', '0', '?', 'Unscaled value of BitMapBuildOvhdCf '); 
insert into DBC.ConstantDefs values (1, '3,005', 'RASHistDeviationPct', 'I', '10.0000', '?', 'Determines the allowable percentage deviation between Random AMP Sample (RAS) \nand statistics histogram.  If the deviation exceeds this value, then statistics \nare assumed to be stale and are overridden by RAS. However, Histgrams are still \nused for selectivity estimations and the estimations gets extrapolated. \n  Valid Range: >= 0 \n  Default: 10 \nSetting this to 0 causes RAS to bypass the Histogram all the time.  Used only when \nRevertEstimationLogic == 0 and (ExtrapolateStatistics == 0 or  \nExtrapolateStatistics == 2). \n '); 
insert into DBC.ConstantDefs values (2, '10,128', 'InitBitMapBuildCf', 'I', '0', '?', 'Unscaled value of BitMapBuildCf '); 
insert into DBC.ConstantDefs values (1, '3,006', 'RevertEstimationLogic', 'I', '1.0000', '?', 'Flag to revert to pre-12.0 cardinality/selectivity estimation logic \n  0           - Use new cardinality/selectivity estimation logic \n  1 (default) - Use pre-12.0 cardinality/selectivity estimation logic \n '); 
insert into DBC.ConstantDefs values (2, '10,129', 'InitBitMapCheckOv', 'I', '0', '?', 'Unscaled value of BitMapCheckOv '); 
insert into DBC.ConstantDefs values (1, '3,008', 'ConstrScanAxPath', 'I', '1.0000', '?', 'Controls enabling/disabling the new constraint scan access path. \n  0           - Enable for aggregation only \n  1 (default) - Disable. \n  2           - Enable for aggregation and retrieval (not available yet) \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '10,130', 'InitBitMapCheckCf', 'I', '0', '?', 'Unscaled value of BitMapCheckCf '); 
insert into DBC.ConstantDefs values (1, '3,009', 'ocsDebug', 'I', '1.0000', '?', 'Determines the action to be taken if optimizer sanity checks of demographic or costing \ninformation fails: \n  0           - Quiet mode.  Fall back to default demographic or cost value. \n  1           - Parser crash with snapshot dump. \n  2 (default) - Log occurance in the event log and fall back to default value. \n  3           - First 2 occurances, generate a snapshot dump and log all occurance \n                in the event log and fall back to default value. \n '); 
insert into DBC.ConstantDefs values (2, '10,131', 'InitBitMapWriteReadOv', 'I', '0', '?', 'Unscaled value of BitMapWriteReadOv '); 
insert into DBC.ConstantDefs values (1, '3,010', 'SoftUniquePct', 'I', '95.0000', '?', 'If the uniqueness of a column is more that this percent, it is assumed to be \na rolling column and gets qualified for distinct values or rows extrapolation if \nthe statistics are determined to be stale. \n  Valid Range: 0 - 100 \n  Default: 95 \nSetting this to 0 disables extrapolations.  Used only when RevertEstimationLogic == 0 \nand (ExtrapolateStatistics == 0 or ExtrapolateStatistics == 2). \n '); 
insert into DBC.ConstantDefs values (2, '10,132', 'InitBitMapWriteReadCf', 'I', '0', '?', 'Unscaled value of BitMapWriteReadCf '); 
insert into DBC.ConstantDefs values (1, '3,012', 'MaxStatsInterval', 'I', '100.0000', '?', 'Maximum number of statistics intervals that are allowed. \n  Valid Range: 1 - 240 \n  Default: 100 \n '); 
insert into DBC.ConstantDefs values (2, '10,133', 'InitRowID2BitMapOvhdOv', 'I', '0', '?', 'Unscaled value of RowID2BitMapOvhdOv '); 
insert into DBC.ConstantDefs values (1, '3,013', 'ExtrapolateStatistics', 'I', '1.0000', '?', 'Flag to enable/disable extrapolating demographics such as unique values or \nrows when stale statistics are detected. \n  0           - Enable extrapolation \n  1 (default) - Disable extrapolation \n  2           - Enable extrapolation by honoring single-Amp sampling all the time. \n  10          - Enable unconditional extrapolation \n '); 
insert into DBC.ConstantDefs values (2, '10,134', 'InitRowID2BitMapOvhdCf', 'I', '0', '?', 'Unscaled value of RowID2BitMapOvhdCf '); 
insert into DBC.ConstantDefs values (1, '3,014', 'EstWithSingleRowOpt', 'I', '0.0000', '?', 'If a table has a single row access via a UPI or USI, this flag determines whether \nor not the optimizer can retrieve this row to derive more accurate estimates. \n  0  (default) - Disable this optimization. \n  1            - Enable this optimization. \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '10,135', 'InitRowID2BitMapCf', 'I', '0', '?', 'Unscaled value of RowID2BitMapCf '); 
insert into DBC.ConstantDefs values (1, '3,015', 'EnableSessLevelDrvStats', 'I', '0.0000', '?', 'Flag to determine whether or not to allow session level derived statistics for \nglobal and volatile tables. \n  0  (default) - Disallow session level derived statistics. \n  1            - Enable these derived statistics. \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '10,136', 'InitSpoolWriteI4Co', 'I', '0', '?', 'Unscaled value of SpoolWriteI4Co '); 
insert into DBC.ConstantDefs values (1, '3,016', 'AssumedPIUniquePct', 'I', '75.0000', '?', 'When no statistics are available on a NUPI, this is the assumed uniqueness. \n  Valid Range: 50 - 100 \n  Default: 75 \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '10,137', 'InitSpoolWriteFloatCo', 'I', '0', '?', 'Unscaled value of SpoolWriteFloatCo '); 
insert into DBC.ConstantDefs values (1, '3,020', 'JoinCardSkewAdj', 'I', '0.0000', '?', 'Enables or disables join cardinality adjustment based on skew. \n  0 (default) - Disable adjustment. \n  1           - Enable adjustment.  \n '); 
insert into DBC.ConstantDefs values (2, '10,138', 'InitSpoolWriteRowOv', 'I', '0', '?', 'Unscaled value of SpoolWriteRowOv '); 
insert into DBC.ConstantDefs values (1, '3,021', 'RASHistAbsDeviation', 'I', '10,000.0000', '?', 'Determines the allowable absolute deviation of rows between Random AMP Sample (RAS) \nand statistics histogram.  If the deviation exceeds this value, then statistics \nare assumed to be stale and are overridden by RAS. However, Histgrams are still \nused for selectivity estimations and the estimations gets extrapolated. \n  Valid Range: >= 0 \n  Default: 10,000 rows \nSetting this to 0 causes disables this check.  Used only when  \nRevertEstimationLogic == 0 and (ExtrapolateStatistics == 0 or \nExtrapolateStatistics == 2). \n '); 
insert into DBC.ConstantDefs values (2, '10,139', 'InitSpoolWriteByteOv', 'I', '0', '?', 'Unscaled value of SpoolWriteByteOv '); 
insert into DBC.ConstantDefs values (1, '3,022', 'AggrEstCapPct', 'I', '75.0000', '?', 'Aggregate estimations cap percentage when no stats are found on the grouping columns. \n  Default is 75%. Valid Range 1 - 100 \n '); 
insert into DBC.ConstantDefs values (2, '10,140', 'InitSpoolWriteByteCf', 'I', '0', '?', 'Unscaled value of SpoolWriteByteCf '); 
insert into DBC.ConstantDefs values (1, '3,061', 'AllowColAmbiguity', 'I', '0.0000', '?', 'Allow queries which has ambiguty column fields in derived table \n1            -  Allow ambiguity columns \n0(default)   -  Do not allow ambiguity columns  \n '); 
insert into DBC.ConstantDefs values (2, '10,141', 'CIBlockSize', 'I', '0', '?', 'Cylinder index block size in bytes '); 
insert into DBC.ConstantDefs values (1, '3,041', 'TempMemPoolThreshold4LTSTJ', 'I', '200.0000', '?', 'Decide when to call jplan with temporary memory pools from ltst join planning. \n '); 
insert into DBC.ConstantDefs values (2, '10,142', 'CylinderSize', 'I', '0', '?', 'Cylinder size in bytes '); 
insert into DBC.ConstantDefs values (1, '3,031', 'NUSIDelCtrlPct', 'I', '0.0000', '?', 'Flag to control the NUSI path used for Delete operation.\ \n  Valid Range: 1 - 100% \n  Default: 0% \n '); 
insert into DBC.ConstantDefs values (2, '10,143', 'CylinderFillFactor', 'I', '0', '?', 'Cylinder fill factor (0.75 implies 3/4 full) '); 
insert into DBC.ConstantDefs values (1, '3,034', 'DR107798OFF', 'I', '0.0000', '?', 'Enables or disables the DR107798 fix. \n  0 (default) - Not disable the DR107798 fix. \n  1           - Disable the DR107798 fix.  \n '); 
insert into DBC.ConstantDefs values (2, '10,144', 'InitCPUScale', 'I', '0', '?', 'Calibration platform CPUScale cost parameter value '); 
insert into DBC.ConstantDefs values (1, '3,040', 'ByPassMaxParseTreeSegs', 'I', '0.0000', '?', 'Flag to control the ByPassMaxParseTreeSegs. \n  0 (default) - Disable ByPassMaxParseTreeSegs. \n  1           - Enable ByPassMaxParseTreeSegs.  \n '); 
insert into DBC.ConstantDefs values (2, '10,145', 'InitAddDateCo', 'I', '0', '?', 'Unscaled value of AddDateCo '); 
insert into DBC.ConstantDefs values (1, '3,062', 'AllowNoConfNJ', 'I', '0.0000', '?', 'Flag to allow nested-rowid join when source is of no confidence.\n0:Disallow nested-rowid join when source is of no confidence.(Default)\n1:Allow nested-rowid join when source is of no confidence.\n '); 
insert into DBC.ConstantDefs values (2, '10,146', 'InitAddTimeCo', 'I', '0', '?', 'Unscaled value of AddTimeCo '); 
insert into DBC.ConstantDefs values (1, '3,099', 'DisableSelectiveDistinctAndGBRewrites', 'I', '1.0000', '?', 'This flag controls whether to apply Distinct2GB and GB2Distinct on Subqueries.\n0: default, do not disable Distinct2GB and the GB2Distinct for subquery in opt.\n1: disable all.\n2: disable Distinct2GB for outermost select of INS-SEL.\n4: disable GB2Distinct for subquery.\n6: disable Distinct2GB for INS-SEL and GB2Distinct for subquery.\n '); 
insert into DBC.ConstantDefs values (2, '10,147', 'InitAddTimeStampCo', 'I', '0', '?', 'Unscaled value of AddTimeStampCo '); 
insert into DBC.ConstantDefs values (1, '5,154', 'LocalSortThreshold', 'I', '0.5000', '?', 'LocalSortThreshold.  \n  Valid Range: 0 - 1 \n  Default: 0.5 \n '); 
insert into DBC.ConstantDefs values (2, '10,148', 'InitAddDecimalCo', 'I', '0', '?', 'Unscaled value of AddDecimalCo '); 
insert into DBC.ConstantDefs values (1, '4,001', 'noltstj', 'I', '0.0000', '?', 'indicate whether LTST join should be generated   0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,149', 'InitAddRealCo', 'I', '0', '?', 'Unscaled value of AddRealCo '); 
insert into DBC.ConstantDefs values (1, '4,002', 'ltstj', 'I', '0.0000', '?', 'indicate LTST join should be used if existed    0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,150', 'InitAddIntegerCo', 'I', '0', '?', 'Unscaled value of AddIntegerCo '); 
insert into DBC.ConstantDefs values (1, '4,003', 'ou2in', 'I', '0.0000', '?', 'indicate outer to inner join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,151', 'InitAddIntervalCo', 'I', '0', '?', 'Unscaled value of AddIntervalCo '); 
insert into DBC.ConstantDefs values (1, '4,004', 'noreleasesub', 'I', '0.0000', '?', 'To disable release subquery optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,152', 'InitAddInteger64Co', 'I', '0', '?', 'Unscaled value of AddInteger64Co '); 
insert into DBC.ConstantDefs values (1, '4,005', 'nocse', 'I', '0.0000', '?', 'indiacate No Common Subexpression Elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,153', 'InitSubstIntervalCo', 'I', '0', '?', 'Unscaled value of SubstIntervalCo '); 
insert into DBC.ConstantDefs values (1, '4,006', 'hsjoin', 'I', '0.0000', '?', 'indicate hash star join should be used if existed  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,154', 'InitMultDecimalCo', 'I', '0', '?', 'Unscaled value of MultDecimalCo '); 
insert into DBC.ConstantDefs values (1, '4,007', 'hsjfeature', 'I', '0.0000', '?', 'indicate hash star join feature  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,155', 'InitMultRealCo', 'I', '0', '?', 'Unscaled value of MultRealCo '); 
insert into DBC.ConstantDefs values (1, '4,008', 'nosattc', 'I', '0.0000', '?', 'to disable SAT-TC feature  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,156', 'InitMultIntegerCo', 'I', '0', '?', 'Unscaled value of MultIntegerCo '); 
insert into DBC.ConstantDefs values (1, '4,009', 'noje', 'I', '0.0000', '?', 'indicate no join elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,157', 'InitMultIntervalCo', 'I', '0', '?', 'Unscaled value of MultIntervalCo '); 
insert into DBC.ConstantDefs values (1, '4,010', 'nodt', 'I', '0.0000', '?', 'indicate no derived table optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,158', 'InitDivDecimalCo', 'I', '0', '?', 'Unscaled value of DivDecimalCo '); 
insert into DBC.ConstantDefs values (1, '4,011', 'pgboff', 'I', '0.0000', '?', 'to diable PGB feature  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,159', 'InitDivRealCo', 'I', '0', '?', 'Unscaled value of DivRealCo '); 
insert into DBC.ConstantDefs values (1, '4,012', 'nonestedjoin', 'I', '0.0000', '?', 'to diable nested join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,160', 'InitDivIntegerCo', 'I', '0', '?', 'Unscaled value of DivIntegerCo '); 
insert into DBC.ConstantDefs values (1, '4,013', 'noinner', 'I', '0.0000', '?', 'indicate no inner join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,161', 'InitDivIntervalCo', 'I', '0', '?', 'Unscaled value of DivIntervalCo '); 
insert into DBC.ConstantDefs values (1, '4,014', 'noprodjoin', 'I', '0.0000', '?', 'to disable product join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,162', 'InitModDecimalCo', 'I', '0', '?', 'Unscaled value of ModDecimalCo '); 
insert into DBC.ConstantDefs values (1, '4,015', 'nosre', 'I', '0.0000', '?', 'to disable Selectivity Redund Elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,163', 'InitModRealCo', 'I', '0', '?', 'Unscaled value of ModRealCo '); 
insert into DBC.ConstantDefs values (1, '4,016', 'nomergejoin', 'I', '0.0000', '?', 'to disable merge join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,164', 'InitModIntegerCo', 'I', '0', '?', 'Unscaled value of ModIntegerCo '); 
insert into DBC.ConstantDefs values (1, '4,017', 'noinlistjoin', 'I', '0.0000', '?', 'to disable inlist join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,165', 'InitExponentCo', 'I', '0', '?', 'Unscaled value of ExponentCo '); 
insert into DBC.ConstantDefs values (1, '4,018', 'noderivedstats', 'I', '0.0000', '?', 'indicate noderived stats  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,166', 'InitNegDecimalCo', 'I', '0', '?', 'Unscaled value of NegDecimalCo '); 
insert into DBC.ConstantDefs values (1, '4,019', 'noanynopt', 'I', '0.0000', '?', 'indicate no Any N OPTimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,167', 'InitNegRealCo', 'I', '0', '?', 'Unscaled value of NegRealCo '); 
insert into DBC.ConstantDefs values (1, '4,020', 'rowkeyjoin', 'I', '0.0000', '?', 'choose row key joins  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,168', 'InitNegIntegerCo', 'I', '0', '?', 'Unscaled value of NegIntegerCo '); 
insert into DBC.ConstantDefs values (1, '4,021', 'norowkeyjoin', 'I', '0.0000', '?', 'dont choose row key join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,169', 'InitAbsDecimalCo', 'I', '0', '?', 'Unscaled value of AbsDecimalCo '); 
insert into DBC.ConstantDefs values (1, '4,022', 'nestedjoin', 'I', '0.0000', '?', 'choose nested join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,170', 'InitAbsRealCo', 'I', '0', '?', 'Unscaled value of AbsRealCo '); 
insert into DBC.ConstantDefs values (1, '4,023', 'yesinlistjoin', 'I', '0.0000', '?', 'favor IN-List join / IN-List access path  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,171', 'InitAbsIntegerCo', 'I', '0', '?', 'Unscaled value of AbsIntegerCo '); 
insert into DBC.ConstantDefs values (1, '4,024', 'nocrosstermest', 'I', '0.0000', '?', 'dont do cross cross term estimation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,172', 'InitLog10Co', 'I', '0', '?', 'Unscaled value of Log10Co '); 
insert into DBC.ConstantDefs values (1, '4,025', 'nodisjunctjc', 'I', '0.0000', '?', 'dont do disjuncted term estimation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,173', 'InitLogECo', 'I', '0', '?', 'Unscaled value of LogECo '); 
insert into DBC.ConstantDefs values (1, '4,026', 'compldisjunctjc', 'I', '0.0000', '?', 'do full blown disjunct JC including terms converted from DNF->CNF  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,174', 'InitSqrtCo', 'I', '0', '?', 'Unscaled value of SqrtCo '); 
insert into DBC.ConstantDefs values (1, '4,027', 'noflyhashjoin', 'I', '0.0000', '?', 'to disable single partition hash join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,175', 'InitTrigonometricCo', 'I', '0', '?', 'Unscaled value of TrigonometricCo '); 
insert into DBC.ConstantDefs values (1, '4,028', 'nohashjoin', 'I', '0.0000', '?', 'to disable hash join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,176', 'InitHyperbolicSinCosCo', 'I', '0', '?', 'Unscaled value of HyperbolicSinCosCo '); 
insert into DBC.ConstantDefs values (1, '4,029', 'usecalccard', 'I', '0.0000', '?', 'use CalcCard for RPV estimation, when it"s false (default), use OptRowsPerValue  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,177', 'InitHyperbolicOtherCo', 'I', '0', '?', 'Unscaled value of HyperbolicOtherCo '); 
insert into DBC.ConstantDefs values (1, '4,030', 'nocsa', 'I', '0.0000', '?', 'to diable CSA feature  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,178', 'InitAtan2FcnCo', 'I', '0', '?', 'Unscaled value of Atan2FcnCo '); 
insert into DBC.ConstantDefs values (1, '4,031', 'noexpandonamp', 'I', '0.0000', '?', '0 - (default ) to disable this flag\n1 -  to enable this flag '); 
insert into DBC.ConstantDefs values (2, '10,179', 'InitInitDate2DaysCo', 'I', '0', '?', 'Unscaled value of Date2DaysCo '); 
insert into DBC.ConstantDefs values (1, '4,032', 'disablespe', 'I', '0.0000', '?', 'to disable static partition elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,180', 'InitDays2DateCo', 'I', '0', '?', 'Unscaled value of Days2DateCo '); 
insert into DBC.ConstantDefs values (1, '4,034', 'nooutertoinjoin', 'I', '0.0000', '?', 'to disable outer to inner join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,181', 'InitExtractFromDateCo', 'I', '0', '?', 'Unscaled value of ExtractFromDateCo '); 
insert into DBC.ConstantDefs values (1, '4,035', 'nopushpredtospool', 'I', '0.0000', '?', 'to disallow pushing predicates to spool  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,182', 'InitExtractFromTimeCo', 'I', '0', '?', 'Unscaled value of ExtractFromTimeCo '); 
insert into DBC.ConstantDefs values (1, '4,036', 'noviewfold', 'I', '0.0000', '?', 'indicate no view folding  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,183', 'InitExtractDateFromTimeStampCo', 'I', '0', '?', 'Unscaled value of ExtractDateFromTimeStampCo '); 
insert into DBC.ConstantDefs values (1, '4,037', 'noprojview', 'I', '0.0000', '?', 'indicate no project view  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,184', 'InitExtractTimeFromTimeStampCo', 'I', '0', '?', 'Unscaled value of ExtractTimeFromTimeStampCo '); 
insert into DBC.ConstantDefs values (1, '4,038', 'nonewout2in', 'I', '0.0000', '?', 'indicate no new outer to inner join conversion  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,185', 'InitAddMonthDateCo', 'I', '0', '?', 'Unscaled value of AddMonthDateCo '); 
insert into DBC.ConstantDefs values (1, '4,039', 'notexistsel', 'I', '0.0000', '?', 'inicate not exists selectivity  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,186', 'InitAddMonthTimeStampCo', 'I', '0', '?', 'Unscaled value of AddMonthTimeStampCo '); 
insert into DBC.ConstantDefs values (1, '4,040', 'nopushjoin', 'I', '0.0000', '?', 'to diable push join optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,187', 'InitAddMonthIntervalCo', 'I', '0', '?', 'Unscaled value of AddMonthIntervalCo '); 
insert into DBC.ConstantDefs values (1, '4,041', 'forcepushjoin', 'I', '0.0000', '?', 'to force push join optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,188', 'InitDTDateDiffCo', 'I', '0', '?', 'Unscaled value of DTDateDiffCo '); 
insert into DBC.ConstantDefs values (1, '4,042', 'axpfallback', 'I', '0.0000', '?', 'indicate Fallback Single Table access path and Single Table Cardinality Estimation to algorithm prior to v2r7  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,189', 'InitDTTSDiffCo', 'I', '0', '?', 'Unscaled value of DTTSDiffCo '); 
insert into DBC.ConstantDefs values (1, '4,043', 'nods4sngltblest', 'I', '0.0000', '?', 'indicate Disable Derived stats for new single table estimations logic  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,190', 'InitDTTimeDiffCo', 'I', '0', '?', 'Unscaled value of DTTimeDiffCo '); 
insert into DBC.ConstantDefs values (1, '4,046', 'corrmergejoin', 'I', '0.0000', '?', 'Favor the selection of correlated incl or excl merge joins.   0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,191', 'InitTS2DateCo', 'I', '0', '?', 'Unscaled value of TS2DateCo '); 
insert into DBC.ConstantDefs values (1, '4,047', 'nopartremapjoin', 'I', '0.0000', '?', 'Disable partition-remapping rowkey-based merge joins.  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,192', 'InitTS2TimeCo', 'I', '0', '?', 'Unscaled value of TS2TimeCo '); 
insert into DBC.ConstantDefs values (1, '4,049', 'noimprovednestedjoin', 'I', '0.0000', '?', 'Disable improved nested join.  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,193', 'InitDate2TsTzCo', 'I', '0', '?', 'Unscaled value of Date2TsTzCo '); 
insert into DBC.ConstantDefs values (1, '4,050', 'nostatsinheritance', 'I', '0.0000', '?', 'indicate No stats inheritance  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,194', 'InitDec18toIntervalCo', 'I', '0', '?', 'Unscaled value of Dec18toIntervalCo '); 
insert into DBC.ConstantDefs values (1, '4,051', 'nojind4est', 'I', '0.0000', '?', 'indicate don"t use sparse JI for estimations  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,195', 'InitDecBigtoIntervalCo', 'I', '0', '?', 'Unscaled value of DecBigtoIntervalCo '); 
insert into DBC.ConstantDefs values (1, '4,053', 'noconnectedlookahead', 'I', '0.0000', '?', 'No connected lookahead if enabled  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,196', 'InitExportDTICo', 'I', '0', '?', 'Unscaled value of ExportDTICo '); 
insert into DBC.ConstantDefs values (1, '4,054', 'complexviewspool', 'I', '0.0000', '?', 'Do not fold views on outer side with outer joins and NSEs in the WHERE  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,197', 'InitImportDTICo', 'I', '0', '?', 'Unscaled value of ImportDTICo '); 
insert into DBC.ConstantDefs values (1, '4,055', 'nomindependset', 'I', '0.0000', '?', 'Disable building of minimum dependset  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,198', 'InitBytesFcnCo', 'I', '0', '?', 'Unscaled value of BytesFcnCo '); 
insert into DBC.ConstantDefs values (1, '4,056', 'noaggrenh', 'I', '0.0000', '?', 'Feature Aggregation Planning enhancement is turned off DR50796  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,199', 'InitCharsFcnCo', 'I', '0', '?', 'Unscaled value of CharsFcnCo '); 
insert into DBC.ConstantDefs values (1, '4,057', 'noskipretaggrenh', 'I', '0.0000', '?', 'Do not parcelize during aggregation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,200', 'InitUDTCastOpCo', 'I', '0', '?', 'Unscaled value of UDTCastOpCo '); 
insert into DBC.ConstantDefs values (1, '4,058', 'noskiplocalaggrenh', 'I', '0.0000', '?', 'Do not skip local cache during aggregation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,201', 'InitUDFProctectedCo', 'I', '0', '?', 'Unscaled value of UDFProctectedCo '); 
insert into DBC.ConstantDefs values (1, '4,059', 'noskipcacheaggrenh', 'I', '0.0000', '?', 'Do not skip local and/or global cache during aggregation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,202', 'InitUDFNotProctectedCo', 'I', '0', '?', 'Unscaled value of UDFNotProctectedCo '); 
insert into DBC.ConstantDefs values (1, '4,060', 'nobjaggrplancost', 'I', '0.0000', '?', 'Do not add sum step cost during planning  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,203', 'InitUDMProctectedCo', 'I', '0', '?', 'Unscaled value of UDMProctectedCo '); 
insert into DBC.ConstantDefs values (1, '4,061', 'nodistinctopt', 'I', '0.0000', '?', 'Disable Distinct optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,204', 'InitUDMNotProctectedCo', 'I', '0', '?', 'Unscaled value of Minimum cost to execute to a UDM in non protected mode '); 
insert into DBC.ConstantDefs values (1, '4,062', 'oldminusall', 'I', '0.0000', '?', 'new minus-all implementation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,205', 'InitEditCo', 'I', '0', '?', 'Unscaled value of EditCo '); 
insert into DBC.ConstantDefs values (1, '4,063', 'nopredsimpl', 'I', '0.0000', '?', 'Disable predicate simplification optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,206', 'InitDEditCo', 'I', '0', '?', 'Unscaled value of DEditCo '); 
insert into DBC.ConstantDefs values (1, '4,064', 'noqrweqnull', 'I', '0.0000', '?', 'to disable mark_NullEq qrw optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,207', 'InitHashBucketCo', 'I', '0', '?', 'Unscaled value of HashBucketCo '); 
insert into DBC.ConstantDefs values (1, '4,065', 'nouncondufid', 'I', '0.0000', '?', 'indicate no unconditional unique field ID  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,208', 'InitHashBakAmpCo', 'I', '0', '?', 'Unscaled value of HashBakAmpCo '); 
insert into DBC.ConstantDefs values (1, '4,066', 'nonewje', 'I', '0.0000', '?', 'indicate no new join elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,209', 'InitHashAmpCo', 'I', '0', '?', 'Unscaled value of HashAmpCo '); 
insert into DBC.ConstantDefs values (1, '4,067', 'nosemipjdpe', 'I', '0.0000', '?', 'to disable inclusion/exclusion product join with DPE  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,210', 'InitRelationCo', 'I', '0', '?', 'Unscaled value of RelationCo '); 
insert into DBC.ConstantDefs values (1, '4,068', 'convertdpetopj', 'I', '0.0000', '?', 'to onvert an exclusion product join with DPE to an exclusion product join without DPE  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,211', 'InitCompareRealCo', 'I', '0', '?', 'Unscaled value of CompareRealCo '); 
insert into DBC.ConstantDefs values (1, '4,069', 'oldajirewrite', 'I', '0.0000', '?', 'indicate old AJI rewrite  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,212', 'InitCompareIntegerCo', 'I', '0', '?', 'Unscaled value of CompareIntegerCo '); 
insert into DBC.ConstantDefs values (1, '4,070', 'noinlistscan', 'I', '0.0000', '?', 'indicate No IN-list scan  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,213', 'InitCompareIntervalCo', 'I', '0', '?', 'Unscaled value of CompareIntervalCo '); 
insert into DBC.ConstantDefs values (1, '4,071', 'nosi', 'I', '0.0000', '?', 'indicate Don"t pick Secondary Index  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,214', 'InitTrimTrailCf', 'I', '0', '?', 'Unscaled value of TrimTrailCf '); 
insert into DBC.ConstantDefs values (1, '4,072', 'csecaseoff', 'I', '0.0000', '?', 'to disable CSE for CASE  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,215', 'InitTrimTrailOv', 'I', '0', '?', 'Unscaled value of TrimTrailOv '); 
insert into DBC.ConstantDefs values (1, '4,073', 'disablecharpe', 'I', '0.0000', '?', 'to disable CHAR partition elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,216', 'InitTrimBothCf', 'I', '0', '?', 'Unscaled value of TrimBothCf '); 
insert into DBC.ConstantDefs values (1, '4,074', 'disabledelayedpe', 'I', '0.0000', '?', 'to disable Disable delayed partition elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,217', 'InitTrimBothOv', 'I', '0', '?', 'Unscaled value of TrimBothOv '); 
insert into DBC.ConstantDefs values (1, '4,075', 'nomdppiopt', 'I', '0.0000', '?', 'to diable move date PPI optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,218', 'InitSubStrCf', 'I', '0', '?', 'Unscaled value of SubStrCf '); 
insert into DBC.ConstantDefs values (1, '4,076', 'nomdjiopt', 'I', '0.0000', '?', 'to disable move date JI optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,219', 'InitSubStrOv', 'I', '0', '?', 'Unscaled value of SubStrOv '); 
insert into DBC.ConstantDefs values (1, '4,077', 'noqrwopt', 'I', '0.0000', '?', 'to disable QRW optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,220', 'InitLikeCompareCf', 'I', '0', '?', 'Unscaled value of LikeCompareCf '); 
insert into DBC.ConstantDefs values (1, '4,078', 'notrcje', 'I', '0.0000', '?', 'to Disable TRC JE  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,221', 'InitLikeCompareOv', 'I', '0', '?', 'Unscaled value of LikeCompareOv '); 
insert into DBC.ConstantDefs values (1, '4,079', 'nope4est', 'I', '0.0000', '?', 'to disable Partition elimination based cost estimation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,222', 'InitConcatCf', 'I', '0', '?', 'Unscaled value of ConcatCf '); 
insert into DBC.ConstantDefs values (1, '4,080', 'no5laforojs', 'I', '0.0000', '?', 'to disable 5 look ahead join planning for outer joins  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '10,223', 'InitConcatOv', 'I', '0', '?', 'Unscaled value of ConcatOv '); 
insert into DBC.ConstantDefs values (1, '4,501', 'PGBControl', 'I', '0.0000', '?', 'The value of "0" enables PGB with costing.\nThe value of "1" enables PGB (partial SUM) without costing.\nThe value of "2" disables PGB.\nThe value of "3" disables PGB for PPI tables.\nThe value of "4" enables PGB (SORT/GROUP) without costing.\nThe default value is 0.\n '); 
insert into DBC.ConstantDefs values (2, '10,224', 'InitLowerCf', 'I', '0', '?', 'Unscaled value of LowerCf '); 
insert into DBC.ConstantDefs values (1, '4,502', 'fudgefactor', 'I', '0.0000', '?', 'This flag is used to set the fudge factor\nused in the optimizer. Default is 0. A Value 0 means use\nthe default fudge factor of 75%.0\n '); 
insert into DBC.ConstantDefs values (2, '10,225', 'InitLowerOv', 'I', '0', '?', 'Unscaled value of LowerOv '); 
insert into DBC.ConstantDefs values (1, '4,503', 'HTMemAlloc', 'I', '20.0000', '?', 'HTMemAlloc - This field specifies the percentage of memory to be\nallocated to a hash table for a hash join.  A value of 0 turns off\nhash joins. Valid range is 0 to 10.\nThe default value is 10.\n '); 
insert into DBC.ConstantDefs values (2, '10,226', 'InitUpperCf', 'I', '0', '?', 'Unscaled value of UpperCf '); 
insert into DBC.ConstantDefs values (1, '4,504', 'HTMemAllocBase', 'I', '20.0000', '?', 'The base in megabytes to which the\nHTMemAlloc percentage is applied. The valid range is\n1-1024, with 20 being the default value '); 
insert into DBC.ConstantDefs values (2, '10,227', 'InitUpperOv', 'I', '0', '?', 'Unscaled value of UpperOv '); 
insert into DBC.ConstantDefs values (1, '4,505', 'DisableDPE', 'I', '0.0000', '?', 'DisableDPE  - This flag is used to control dynamic\npartition elimination (DPE). By default, this value is 0.\n0 = Allow all DPE (default).\n1 = Disable product join DPE.\n2 = Disable merge join DPE.\n3 = Disable both product and merge join DPE.\n4 = Disable product join DPE for multilevel PPI tables.\n    Both product and merge join DPE are enabled for single-\n    level PPI tables.\n5 = Disable product join DPE for multilevel PPI tables\n   and disable DPE for merge join. Product join DPE for\n    single-level PPI tables is enabled.\n '); 
insert into DBC.ConstantDefs values (2, '10,228', 'InitChar2HexIntCf', 'I', '0', '?', 'Unscaled value of Char2HexIntCf '); 
insert into DBC.ConstantDefs values (1, '4,506', 'WTValidator', 'I', '0.0000', '?', 'This flag is used to control the\n white tree validation process. By default, this value is 0.0 = Validate White Tree and die if found problem in final plan (Default).\n1 = Validate White Tree and report warning if found problem.\n2 = Validate White Tree and auto correct if found problem.\n3 = Disable White Tree Validation.\n4 = Validate White Tree and die if found problem in intermediate/final plan\n    (Not recommended in customer side).\n '); 
insert into DBC.ConstantDefs values (2, '10,229', 'InitChar2HexIntOv', 'I', '0', '?', 'Unscaled value of Char2HexIntOv '); 
insert into DBC.ConstantDefs values (1, '4,507', 'NoSlidingWindowPPIJoin', 'I', '0.0000', '?', 'This integer determines whether Sliding window\nmerge joins are applicable for PPI tables.\nBy default the value is 0.\n0 = All sliding window joins are enabled.\n1 = Basic sliding window joins are disabled\n2 = All sliding window joins are disabled \n '); 
insert into DBC.ConstantDefs values (2, '10,230', 'InitTranslateCf', 'I', '0', '?', 'Unscaled value of TranslateCf '); 
insert into DBC.ConstantDefs values (1, '4,508', 'NLookAheadControl', 'I', '0.0000', '?', 'Set a threshold for the number\nof connections among the tables to be joined above\nwhich 2 or more lookahead will be disabled. The threshold\nis set as an integer among 0 .. 100 as follows:\n      NLookAheadControl = 100 - a*100/b\nHere, a is the maximal number of connections allowed for 2\nor more lookahead; b is the maxmial number of possible\nconnections, currently b=2016. The default value for\nNLookAheadControl is 0, which means always enable 2 or\nmore lookahead.\n '); 
insert into DBC.ConstantDefs values (2, '10,231', 'InitTranslateOv', 'I', '0', '?', 'Unscaled value of TranslateOv '); 
insert into DBC.ConstantDefs values (1, '4,509', 'disable_optimize_Index_ppi', 'I', '0.0000', '?', 'This field enables or disables\n1) the performance enhancements associated with\n  eliminating rowids at the secondary index level\n  if there is a residual condition on the partitioning\n  column, for a PPI table and\n 2) SingleAMP NUSI access, if NUSI index is on the same\n   column(s) as NUPI.\nA value of 0 enables both the optimization.\nA value of 1 disables the eliminating the rowids at the\n index level optimization.\nA value of 2 disables the single amp NUSI optimization.\n A value of 3 disables both the optimizations.\nThe default is 0.\n '); 
insert into DBC.ConstantDefs values (2, '10,232', 'InitUnused1', 'I', '0', '?', 'Unscaled value of Unused1 '); 
insert into DBC.ConstantDefs values (1, '4,510', 'DisableDeferredPartitionDelete', 'I', '0.0000', '?', 'determines whether or not to disable the optimization\nto delete whole partitions of a PPI table\nwithout transient journalling based on analysis of the WHERE condition\nin the DELETE statement.  The default value is 0.\n '); 
insert into DBC.ConstantDefs values (2, '10,233', 'InitUnused2', 'I', '0', '?', 'Unscaled value of Unused2 '); 
insert into DBC.ConstantDefs values (1, '4,511', 'FoldRetIntoMrg', 'I', '0.0000', '?', 'This field enables/disables some additional\nINSERT-SELECT optimization.  Set it to TRUE to enable.  It is\ndisabled by default. '); 
insert into DBC.ConstantDefs values (2, '10,234', 'InitNoAggressiveRowKeyJCost', 'I', '0', '?', 'Unscaled value of NoAggressiveRowKeyJCost '); 
insert into DBC.ConstantDefs values (1, '4,512', 'LimitInlistCVal', 'I', '2,000.0000', '?', 'indicate the number of combined values in Inlist.\nThe valid range of values is 1 ..  1048576.\nThe default value is 2000. '); 
insert into DBC.ConstantDefs values (2, '10,235', 'InitDisableCIReadCost', 'I', '0', '?', 'Unscaled value of DisableCIReadCost '); 
insert into DBC.ConstantDefs values (1, '4,513', 'DisableInclPJDPE', 'I', '0.0000', '?', 'determines whether dynamic partition elimination is disabled for inclusion\nproduct joins involving PPI tables.\mThe default value of DisableInclPJDPE is 0. '); 
insert into DBC.ConstantDefs values (2, '10,236', 'InitDirHJProbeOvCo', 'I', '0', '?', 'Unscaled value of DirHJProbeOvCo '); 
insert into DBC.ConstantDefs values (1, '4,514', 'DPESkewAdjustment', 'I', '25.0000', '?', 'Valid range: 0 - 5000\nDefault value: 25 '); 
insert into DBC.ConstantDefs values (2, '10,237', 'InitCompareRowidCo', 'I', '0', '?', 'Unscaled value of CompareRowidCo '); 
insert into DBC.ConstantDefs values (1, '4,515', 'DisableExclPJDPE', 'I', '0.0000', '?', 'determines whether dynamic partition elimination is \ndisabled for exclusion product joins involving PPI tables.\nThe default value of DisableExclPJDPE is 0 '); 
insert into DBC.ConstantDefs values (2, '10,238', 'InitHTBuildCf', 'I', '0', '?', 'Unscaled value of HTBuildCf '); 
insert into DBC.ConstantDefs values (1, '4,516', 'BinaryRange_NThreshold', 'I', '7.0000', '?', 'Valid range is: 0 - 10000\nDefault value is 7 '); 
insert into DBC.ConstantDefs values (2, '10,239', 'InitHTBuildOv', 'I', '0', '?', 'Unscaled value of HTBuildOv '); 
insert into DBC.ConstantDefs values (1, '4,517', 'LegacyRange_N', 'I', '0.0000', '?', '0 - (default) disable this feature1 - enable this feature '); 
insert into DBC.ConstantDefs values (2, '10,240', 'InitDirHTBuildCf', 'I', '0', '?', 'Unscaled value of DirHTBuildCf '); 
insert into DBC.ConstantDefs values (1, '3,037', 'MinAMPRows4HashPartWithConf', 'I', '10.0000', '?', 'The upper bound of amp rows when Hash Partitioning will be considered with confidence. '); 
insert into DBC.ConstantDefs values (2, '10,241', 'InitDirHTBuildOv', 'I', '0', '?', 'Unscaled value of DirHTBuildOv '); 
insert into DBC.ConstantDefs values (1, '3,038', 'MinAMPRows4HashPartWithoutConf', 'I', '10.0000', '?', 'The upper bound of per amp rows when Hash Partitioning will be considered with no confidence. '); 
insert into DBC.ConstantDefs values (2, '10,242', 'InitHTProbeCf', 'I', '0', '?', 'Unscaled value of HTProbeCf '); 
insert into DBC.ConstantDefs values (1, '3,039', 'MinPerAMPGroupCnt', 'I', '5.0000', '?', 'The fudge factor when considering Hash Partitioning by considering number of group by values. '); 
insert into DBC.ConstantDefs values (2, '10,243', 'InitHTProbeOv', 'I', '0', '?', 'Unscaled value of HTProbeOv '); 
insert into DBC.ConstantDefs values (2, '10,244', 'HashProbeSameDBCo', 'I', '0', '?', 'Unscaled value of HashProbeSameDBCo '); 
insert into DBC.ConstantDefs values (2, '10,245', 'InitHashProbeMaxCo', 'I', '0', '?', 'Unscaled value of HashProbeMaxCo '); 
insert into DBC.ConstantDefs values (2, '10,246', 'InitHashProbeLogCf1', 'I', '0', '?', 'Unscaled value of HashProbeLogCf1 '); 
insert into DBC.ConstantDefs values (2, '10,247', 'InitHashProbeLogCf2', 'I', '0', '?', 'Unscaled value of HashProbeLogCf2 '); 
insert into DBC.ConstantDefs values (2, '10,248', 'InitHashProbePowCf1', 'I', '0', '?', 'Unscaled value of HashProbePowCf1 '); 
insert into DBC.ConstantDefs values (2, '10,249', 'InitHashProbePowCf2', 'I', '0', '?', 'Unscaled value of HashProbePowCf2 '); 
insert into DBC.ConstantDefs values (2, '10,250', 'InitPJCacheBuildCf', 'I', '0', '?', 'Unscaled value of PJCacheBuildCf '); 
insert into DBC.ConstantDefs values (2, '10,251', 'InitPJCacheBuildOv', 'I', '0', '?', 'Unscaled value of PJCacheBuildOv '); 
insert into DBC.ConstantDefs values (2, '10,252', 'InitPJRowAccessCo', 'I', '0', '?', 'Unscaled value of PJRowAccessCo '); 
insert into DBC.ConstantDefs values (2, '10,253', 'InitMJRowAccessCf', 'I', '0', '?', 'Unscaled value of MJRowAccessCf '); 
insert into DBC.ConstantDefs values (2, '10,254', 'InitMJRowAccessOv', 'I', '0', '?', 'Unscaled value of MJRowAccessOv '); 
insert into DBC.ConstantDefs values (2, '10,255', 'InitHashRowCo', 'I', '0', '?', 'Unscaled value of HashRowCo '); 
insert into DBC.ConstantDefs values (2, '10,256', 'InitStringCompareCf', 'I', '0', '?', 'Unscaled value of StringCompareCf '); 
insert into DBC.ConstantDefs values (2, '10,257', 'InitStringCompareOv', 'I', '0', '?', 'Unscaled value of StringCompareOv '); 
insert into DBC.ConstantDefs values (2, '10,258', 'InitCaseExprOv', 'I', '0', '?', 'Unscaled value of CaseExprOv '); 
insert into DBC.ConstantDefs values (2, '10,259', 'InitPPILoadCf', 'I', '0', '?', 'Unscaled value of PPILoadCf '); 
insert into DBC.ConstantDefs values (2, '10,260', 'InitPPILoadOv', 'I', '0', '?', 'Unscaled value of PPILoadOv '); 
insert into DBC.ConstantDefs values (2, '10,261', 'InitLowSkewAllowance', 'I', '0', '?', 'Unscaled value of LowSkewAllowance '); 
insert into DBC.ConstantDefs values (2, '10,262', 'InitPPIRowAccessCf', 'I', '0', '?', 'Unscaled value of PPIRowAccessCf '); 
insert into DBC.ConstantDefs values (2, '10,263', 'InitPPIRowAccessOv', 'I', '0', '?', 'Unscaled value of PPIRowAccessOv '); 
insert into DBC.ConstantDefs values (2, '10,264', 'InitHTProbeNoMatchCo', 'I', '0', '?', 'Unscaled value of HTProbeNoMatchCo '); 
insert into DBC.ConstantDefs values (2, '10,265', 'InitHeapSortOv', 'I', '0', '?', 'Unscaled value of HeapSortOv '); 
insert into DBC.ConstantDefs values (2, '10,266', 'InitHeapSortCf', 'I', '0', '?', 'Unscaled value of HeapSortCf '); 
insert into DBC.ConstantDefs values (2, '10,267', 'InitHTProbeCf1', 'I', '0', '?', 'Unscaled value of HTProbeCf1 '); 
insert into DBC.ConstantDefs values (2, '10,268', 'InitHTProbeOv1', 'I', '0', '?', 'Unscaled value of HTProbeOv1 '); 
insert into DBC.ConstantDefs values (2, '10,269', 'InitHTProbeBd1', 'I', '0', '?', 'Unscaled value of HTProbeBd1 '); 
insert into DBC.ConstantDefs values (2, '10,270', 'InitHTProbeCf2', 'I', '0', '?', 'Unscaled value of HTProbeCf2 '); 
insert into DBC.ConstantDefs values (2, '10,271', 'InitHTProbeOv2', 'I', '0', '?', 'Unscaled value of HTProbeOv2 '); 
insert into DBC.ConstantDefs values (2, '10,272', 'InitCPSBRSeqCf1', 'I', '0', '?', 'Unscaled value of CPSBRSeqCf1 '); 
insert into DBC.ConstantDefs values (2, '10,273', 'InitCPSBRSeqOv1', 'I', '0', '?', 'Unscaled value of CPSBRSeqOv1 '); 
insert into DBC.ConstantDefs values (2, '10,274', 'InitCPSBRSeqBd', 'I', '0', '?', 'Unscaled value of CPSBRSeqBd '); 
insert into DBC.ConstantDefs values (2, '10,275', 'InitCPSBRSeqCf2', 'I', '0', '?', 'Unscaled value of CPSBRSeqCf2 '); 
insert into DBC.ConstantDefs values (2, '10,276', 'InitCPSBRSeqOv2', 'I', '0', '?', 'Unscaled value of CPSBRSeqOv2 '); 
insert into DBC.ConstantDefs values (2, '10,277', 'InitCPCNRSeqCf1', 'I', '0', '?', 'Unscaled value of CPCNRSeqCf1 '); 
insert into DBC.ConstantDefs values (2, '10,278', 'InitCPCNRSeqOv1', 'I', '0', '?', 'Unscaled value of CPCNRSeqOv1 '); 
insert into DBC.ConstantDefs values (2, '10,279', 'InitCPCNRSeqBd', 'I', '0', '?', 'Unscaled value of CPCNRSeqBd '); 
insert into DBC.ConstantDefs values (2, '10,280', 'InitCPCNRSeqCf2', 'I', '0', '?', 'Unscaled value of CPCNRSeqCf2 '); 
insert into DBC.ConstantDefs values (2, '10,281', 'InitCPCNRSeqOv2', 'I', '0', '?', 'Unscaled value of CPCNRSeqOv2 '); 
insert into DBC.ConstantDefs values (2, '10,282', 'InitCPDelCf1', 'I', '0', '?', 'Unscaled value of CPDelCf1 '); 
insert into DBC.ConstantDefs values (2, '10,283', 'InitCPDelOv1', 'I', '0', '?', 'Unscaled value of CPDelOv1 '); 
insert into DBC.ConstantDefs values (2, '10,284', 'InitCPDelBd1', 'I', '0', '?', 'Unscaled value of CPDelBd1 '); 
insert into DBC.ConstantDefs values (2, '10,285', 'InitCPDelCf2', 'I', '0', '?', 'Unscaled value of CPDelCf2 '); 
insert into DBC.ConstantDefs values (2, '10,286', 'InitCPDelOv2', 'I', '0', '?', 'Unscaled value of CPDelOv2 '); 
insert into DBC.ConstantDefs values (2, '10,287', 'InitCPDelBd2', 'I', '0', '?', 'Unscaled value of CPDelBd2 '); 
insert into DBC.ConstantDefs values (2, '10,288', 'InitCPDelCf3', 'I', '0', '?', 'Unscaled value of CPDelCf3 '); 
insert into DBC.ConstantDefs values (2, '10,289', 'InitCPDelOv3', 'I', '0', '?', 'Unscaled value of CPDelOv3 '); 
insert into DBC.ConstantDefs values (2, '10,290', 'InitCPSBRProbeSameDBCo', 'I', '0', '?', 'Unscaled value of CPSBRProbeSameDBCo '); 
insert into DBC.ConstantDefs values (2, '10,291', 'InitCPCNRProbeSameDBCo', 'I', '0', '?', 'Unscaled value of CPCNRProbeSameDBCo '); 
insert into DBC.ConstantDefs values (2, '10,292', 'InitCPSBRProbeDiffDBCo', 'I', '0', '?', 'Unscaled value of CPSBRProbeDiffDBCo '); 
insert into DBC.ConstantDefs values (2, '10,293', 'InitCPCNRProbeDiffDBCo', 'I', '0', '?', 'Unscaled value of CPCNRProbeDiffDBCo '); 
insert into DBC.ConstantDefs values (2, '10,512', 'OptTableReadRate', 'C', '0', '?', 'Disk array read access rate for a table. Number of table block reads per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,513', 'OptSpoolReadRate', 'C', '0', '?', 'Disk array read access rate for a spool. Number of spool block reads per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,514', 'OptIndexReadRate', 'C', '0', '?', 'Disk array read access rate for an index. Number of index block reads per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,515', 'OptTableWriteRate', 'C', '0', '?', 'Disk array write access rate for a table. Number of table block writes per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,516', 'OptSpoolWriteRate', 'C', '0', '?', 'Disk array write access rate for a spool. Number of spool block writes per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,517', 'OptIndexWriteRate', 'C', '0', '?', 'Disk array write access rate for an index. Number of index block writes per second at assumed block size. '); 
insert into DBC.ConstantDefs values (2, '10,600', 'OptByNetRedOvhd', 'C', '0', '?', 'Defines the network row redistribution overhead cost, point-to-point message. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,601', 'OptByNetRedCost', 'C', '0', '?', 'Defines the network row redistribution cost per byte, point-to-point message. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,602', 'OptByNetDupOvhd', 'C', '0', '?', 'Defines the network row duplication overhead cost,  broadcast message. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,603', 'OptByNetDupCost', 'C', '0', '?', 'Defines the network row duplication cost per byte,  broadcast message. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,620', 'OptRowAccessCost', 'C', '0', '?', 'The CPU cost of accessing a row in memory. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,621', 'OptOutputRowCost', 'C', '0', '?', 'The CPU overhead cost for building an output row. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,622', 'OptRedistributeCost', 'C', '0', '?', 'The CPU cost of redistributing a row. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,623', 'OptSynonymCost', 'C', '0', '?', 'The CPU cost of accessing a row by using an index. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,624', 'OptRowIDCost', 'C', '0', '?', 'The CPU cost of accessing a row thru a RowID list. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,625', 'OptBMAndRowCost', 'C', '0', '?', 'The CPU cost to AND two bit map rows of 16KB each. The bitmap consists of multiple bitmap rows. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,626', 'OptBitCost', 'C', '0', '?', 'The CPU cost to check or set bit map given a row ID. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,627', 'OptCharFieldCost', 'C', '0', '?', 'The CPU cost of building a one character field. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,628', 'OptNumFieldCost', 'C', '0', '?', 'The CPU cost of building a single numeric field. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,629', 'OptOvhdOfRowCompCost', 'C', '0', '?', 'The CPU cost of a sort row comparison. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,630', 'OptBMWriteRowCost', 'C', '0', '?', 'The IO cost to write and then read a bit map row of 16KB to the spool. Estimated number of milliseconds. '); 
insert into DBC.ConstantDefs values (2, '10,650', 'BlockProcessOv', 'C', '0', '?', 'Overhead term of the BPIO formula '); 
insert into DBC.ConstantDefs values (2, '10,651', 'BlockProcessCf', 'C', '0', '?', 'Coefficient of linear term in the BPIO formula '); 
insert into DBC.ConstantDefs values (2, '10,654', 'AccessRowOv1', 'C', '0', '?', 'Overhead term of the 1-st scan row access cost formula segment '); 
insert into DBC.ConstantDefs values (2, '10,655', 'AccessRowCf1', 'C', '0', '?', 'Coefficient of linear term in the 1-st scan row access cost formula segment '); 
insert into DBC.ConstantDefs values (2, '10,656', 'AccessRowBd1', 'C', '0', '?', 'Boundary value of the 1-st scan row access cost formula segment '); 
insert into DBC.ConstantDefs values (2, '10,657', 'AccessRowOv2', 'C', '0', '?', 'Overhead term of the 2-nd scan row access cost formula segment '); 
insert into DBC.ConstantDefs values (2, '10,658', 'AccessRowCf2', 'C', '0', '?', 'Coefficient of linear term in the 2-nd scan row access cost formula segment '); 
insert into DBC.ConstantDefs values (2, '10,661', 'RowDupOv1', 'C', '0', '?', 'Overhead term of the 1-st row duplication cost formula segment '); 
insert into DBC.ConstantDefs values (2, '10,662', 'RowDupCf1', 'C', '0', '?', 'Coefficient of linear term in the 1-st row duplication cost formula segment '); 
insert into DBC.ConstantDefs values (2, '10,663', 'RowDupBd1', 'C', '0', '?', 'Boundary value of the 1-st row duplication cost formula segment '); 
insert into DBC.ConstantDefs values (2, '10,664', 'RowDupOv2', 'C', '0', '?', 'Overhead term of the 2-nd row duplication cost formula segment '); 
insert into DBC.ConstantDefs values (2, '10,665', 'RowDupCf2', 'C', '0', '?', 'Coefficient of linear term in the 2-nd row duplication cost formula segment '); 
insert into DBC.ConstantDefs values (2, '10,666', 'RowRedistOv', 'C', '0', '?', 'Overhead term of the row redistribution cost formula '); 
insert into DBC.ConstantDefs values (2, '10,667', 'RowRedistCf', 'C', '0', '?', 'Coefficient of linear term in the row redistribution cost formula '); 
insert into DBC.ConstantDefs values (2, '10,671', 'SortBufSize', 'C', '0', '?', 'Sort buffer size in bytes for sort cost formula '); 
insert into DBC.ConstantDefs values (2, '10,672', 'MergeSortOv', 'C', '0', '?', 'Overhead cost per merge level for merge-sorting a row '); 
insert into DBC.ConstantDefs values (2, '10,673', 'MergeSortCf', 'C', '0', '?', 'Per byte cost per merge level for merge-sorting a row '); 
insert into DBC.ConstantDefs values (2, '10,676', 'AggrCacheHitOv', 'C', '0', '?', 'Overhead term of cache hit row access cost expression in aggregation cost formula '); 
insert into DBC.ConstantDefs values (2, '10,677', 'AggrCacheHitCf', 'C', '0', '?', 'Coefficient of linear term of cache hit row access cost expression in aggregation cost formula '); 
insert into DBC.ConstantDefs values (2, '10,678', 'AggrCacheMissOv', 'C', '0', '?', 'Overhead term of cache miss row access cost expression in aggregation cost formula '); 
insert into DBC.ConstantDefs values (2, '10,679', 'AggrCacheMissCf', 'C', '0', '?', 'Coefficient of linear term of cache miss row access cost expression in aggregation cost formula '); 
insert into DBC.ConstantDefs values (2, '10,681', 'PIRowAccessCo', 'C', '0', '?', 'Cost of positioning into a row in the PI access cost formula '); 
insert into DBC.ConstantDefs values (2, '10,682', 'PIOvhdCo', 'C', '0', '?', 'Overhead in the PI access cost formula '); 
insert into DBC.ConstantDefs values (2, '10,683', 'USIOvhdCo', 'C', '0', '?', 'Overhead in the USI access cost formula '); 
insert into DBC.ConstantDefs values (2, '10,684', 'NUSIOvhdOv', 'C', '0', '?', 'Overhead in the NUSI access cost formula '); 
insert into DBC.ConstantDefs values (2, '10,685', 'NUSIOvhdCf', 'C', '0', '?', 'Linear coefficient in the NUSI access cost formula '); 
insert into DBC.ConstantDefs values (2, '10,686', 'BitMapBuildOvhdOv', 'C', '0', '?', 'Overhead term in the bit map build overhead cost formula '); 
insert into DBC.ConstantDefs values (2, '10,687', 'BitMapBuildOvhdCf', 'C', '0', '?', 'Linear coefficient in the bit map build overhead cost formula '); 
insert into DBC.ConstantDefs values (2, '10,688', 'BitMapBuildCf', 'C', '0', '?', 'Coefficient of linear term in the bit map build cost formula '); 
insert into DBC.ConstantDefs values (2, '10,689', 'BitMapCheckOv', 'C', '0', '?', 'Overhead term in the bit map check cost formula '); 
insert into DBC.ConstantDefs values (2, '10,690', 'BitMapCheckCf', 'C', '0', '?', 'Coefficient of linear term in the bit map check cost formula '); 
insert into DBC.ConstantDefs values (2, '10,691', 'BitMapWriteReadOv', 'C', '0', '?', 'Overhead term in the bit map write and read cost formula '); 
insert into DBC.ConstantDefs values (2, '10,692', 'BitMapWriteReadCf', 'C', '0', '?', 'Coefficient of linear term in the bit map write and read cost formula '); 
insert into DBC.ConstantDefs values (2, '10,693', 'RowID2BitMapOvhdOv', 'C', '0', '?', 'Overhead term in the rowid to bit map overhead cost formula '); 
insert into DBC.ConstantDefs values (2, '10,694', 'RowID2BitMapOvhdCf', 'C', '0', '?', 'Linear coefficient in the rowid to bit map overhead cost formula '); 
insert into DBC.ConstantDefs values (2, '10,695', 'RowID2BitMapCf', 'C', '0', '?', 'Coefficient of linear term in the rowid to bitmap cost formula '); 
insert into DBC.ConstantDefs values (2, '10,696', 'SpoolWriteI4Co', 'C', '0', '?', 'CPU cost increment for integral numeric field '); 
insert into DBC.ConstantDefs values (2, '10,697', 'SpoolWriteFloatCo', 'C', '0', '?', 'CPU cost increment for floating point numeric field '); 
insert into DBC.ConstantDefs values (2, '10,698', 'SpoolWriteRowOv', 'C', '0', '?', 'Overhead of building a spool output row '); 
insert into DBC.ConstantDefs values (2, '10,699', 'SpoolWriteByteOv', 'C', '0', '?', 'Overhead cost for a string field '); 
insert into DBC.ConstantDefs values (2, '10,700', 'SpoolWriteByteCf', 'C', '0', '?', 'Per-byte cost of a string field '); 
insert into DBC.ConstantDefs values (2, '10,701', 'AddDateCo', 'C', '0', '?', 'Cost for date type addition '); 
insert into DBC.ConstantDefs values (2, '10,702', 'AddTimeCo', 'C', '0', '?', 'Cost for time type addition '); 
insert into DBC.ConstantDefs values (2, '10,703', 'AddTimeStampCo', 'C', '0', '?', 'Cost for time stamp type addition '); 
insert into DBC.ConstantDefs values (2, '10,704', 'AddDecimalCo', 'C', '0', '?', 'Cost for decimal type addition '); 
insert into DBC.ConstantDefs values (2, '10,705', 'AddRealCo', 'C', '0', '?', 'Cost for real type addition '); 
insert into DBC.ConstantDefs values (2, '10,706', 'AddIntegerCo', 'C', '0', '?', 'Cost for integer type addition '); 
insert into DBC.ConstantDefs values (2, '10,707', 'AddIntervalCo', 'C', '0', '?', 'Cost for interval type addition '); 
insert into DBC.ConstantDefs values (2, '10,708', 'AddInteger64Co', 'C', '0', '?', 'Cost for 64 bits integer type addition '); 
insert into DBC.ConstantDefs values (2, '10,709', 'SubstIntervalCo', 'C', '0', '?', 'Cost for interval type substraction '); 
insert into DBC.ConstantDefs values (2, '10,710', 'MultDecimalCo', 'C', '0', '?', 'Cost for decimal  type multiplication '); 
insert into DBC.ConstantDefs values (2, '10,711', 'MultRealCo', 'C', '0', '?', 'Cost for real type multiplication '); 
insert into DBC.ConstantDefs values (2, '10,712', 'MultIntegerCo', 'C', '0', '?', 'Cost for integer type multiplication '); 
insert into DBC.ConstantDefs values (2, '10,713', 'MultIntervalCo', 'C', '0', '?', 'Cost for interval type multiplication '); 
insert into DBC.ConstantDefs values (2, '10,714', 'DivDecimalCo', 'C', '0', '?', 'Cost for decimal type division '); 
insert into DBC.ConstantDefs values (2, '10,715', 'DivRealCo', 'C', '0', '?', 'Cost for real type division '); 
insert into DBC.ConstantDefs values (2, '10,716', 'DivIntegerCo', 'C', '0', '?', 'Cost for integer type division '); 
insert into DBC.ConstantDefs values (2, '10,717', 'DivIntervalCo', 'C', '0', '?', 'Cost for interval type division '); 
insert into DBC.ConstantDefs values (2, '10,718', 'ModDecimalCo', 'C', '0', '?', 'Cost for decimal type modulo '); 
insert into DBC.ConstantDefs values (2, '10,719', 'ModRealCo', 'C', '0', '?', 'Cost for real type modulo '); 
insert into DBC.ConstantDefs values (2, '10,720', 'ModIntegerCo', 'C', '0', '?', 'Cost for integer type modulo '); 
insert into DBC.ConstantDefs values (2, '10,721', 'ExponentCo', 'C', '0', '?', 'Cost for exponent operation '); 
insert into DBC.ConstantDefs values (2, '10,722', 'NegDecimalCo', 'C', '0', '?', 'Cost for decimal type negation '); 
insert into DBC.ConstantDefs values (2, '10,723', 'NegRealCo', 'C', '0', '?', 'Cost for real type negation '); 
insert into DBC.ConstantDefs values (2, '10,724', 'NegIntegerCo', 'C', '0', '?', 'Cost for integer type negation '); 
insert into DBC.ConstantDefs values (2, '10,725', 'AbsDecimalCo', 'C', '0', '?', 'Cost for decimal type absolution '); 
insert into DBC.ConstantDefs values (2, '10,726', 'AbsRealCo', 'C', '0', '?', 'Cost for real type absolution '); 
insert into DBC.ConstantDefs values (2, '10,727', 'AbsIntegerCo', 'C', '0', '?', 'Cost for integer type absolution '); 
insert into DBC.ConstantDefs values (2, '10,728', 'Log10Co', 'C', '0', '?', 'Cost for log base 10 operation '); 
insert into DBC.ConstantDefs values (2, '10,729', 'LogECo', 'C', '0', '?', 'Cost for natural log operation '); 
insert into DBC.ConstantDefs values (2, '10,730', 'SqrtCo', 'C', '0', '?', 'Cost for square root operation '); 
insert into DBC.ConstantDefs values (2, '10,731', 'TrigonometricCo', 'C', '0', '?', 'Cost for a Trigonometrical function '); 
insert into DBC.ConstantDefs values (2, '10,732', 'HyperbolicSinCosCo', 'C', '0', '?', 'Cost for Hyperbolic sin or cos function '); 
insert into DBC.ConstantDefs values (2, '10,733', 'HyperbolicOtherCo', 'C', '0', '?', 'Cost for Hyperbolic function other than sin and cos '); 
insert into DBC.ConstantDefs values (2, '10,734', 'Atan2FcnCo', 'C', '0', '?', 'Cost for executing the Atan2Fcn function '); 
insert into DBC.ConstantDefs values (2, '10,735', 'Date2DaysCo', 'C', '0', '?', 'Cost for executing the Date2DaysCo operation '); 
insert into DBC.ConstantDefs values (2, '10,736', 'Days2DateCo', 'C', '0', '?', 'Cost for executing the Days2DateCo operation '); 
insert into DBC.ConstantDefs values (2, '10,737', 'ExtractFromDateCo', 'C', '0', '?', 'Cost for extracting from a date type expression '); 
insert into DBC.ConstantDefs values (2, '10,738', 'ExtractFromTimeCo', 'C', '0', '?', 'Cost for extracting from a time type expression '); 
insert into DBC.ConstantDefs values (2, '10,739', 'ExtractDateFromTimeStampCo', 'C', '0', '?', 'Cost for extracting date from a timestamp type expression '); 
insert into DBC.ConstantDefs values (2, '10,740', 'ExtractTimeFromTimeStampCo', 'C', '0', '?', 'Cost for extracting time from a timestamp type expression '); 
insert into DBC.ConstantDefs values (2, '10,741', 'AddMonthDateCo', 'C', '0', '?', 'Cost for adding month to a date type expression '); 
insert into DBC.ConstantDefs values (2, '10,742', 'AddMonthTimeStampCo', 'C', '0', '?', 'Cost for adding month to a timestamp type expression '); 
insert into DBC.ConstantDefs values (2, '10,743', 'AddMonthIntervalCo', 'C', '0', '?', 'Cost for adding month to an interval type expression '); 
insert into DBC.ConstantDefs values (2, '10,744', 'DTDateDiffCo', 'C', '0', '?', 'Cost for takeing the difference between two date expressions '); 
insert into DBC.ConstantDefs values (2, '10,745', 'DTTSDiffCo', 'C', '0', '?', 'Cost for takeing the difference between two timestamp expressions '); 
insert into DBC.ConstantDefs values (2, '10,746', 'DTTimeDiffCo', 'C', '0', '?', 'Cost for takeing the difference between two time expressions '); 
insert into DBC.ConstantDefs values (2, '10,747', 'TS2DateCo', 'C', '0', '?', 'Cost to convert time stamp to date expression '); 
insert into DBC.ConstantDefs values (2, '10,748', 'TS2TimeCo', 'C', '0', '?', 'Cost to convert time stamp to time expression '); 
insert into DBC.ConstantDefs values (2, '10,749', 'Date2TsTzCo', 'C', '0', '?', 'Cost to convert date to time stamp with time zone expression '); 
insert into DBC.ConstantDefs values (2, '10,750', 'Dec18toIntervalCo', 'C', '0', '?', 'Cost to convert 18 digits type expression to interval expression '); 
insert into DBC.ConstantDefs values (2, '10,751', 'DecBigtoIntervalCo', 'C', '0', '?', 'Cost to convert > 19 digits type expression to interval expression '); 
insert into DBC.ConstantDefs values (2, '10,752', 'ExportDTICo', 'C', '0', '?', 'Cost to convert date time expression to character type '); 
insert into DBC.ConstantDefs values (2, '10,753', 'ImportDTICo', 'C', '0', '?', 'Cost to convert character expression to date time type '); 
insert into DBC.ConstantDefs values (2, '10,754', 'BytesFcnCo', 'C', '0', '?', 'Cost to count number of bytes in byte expression '); 
insert into DBC.ConstantDefs values (2, '10,755', 'CharsFcnCo', 'C', '0', '?', 'Cost to count number of character in character expression '); 
insert into DBC.ConstantDefs values (2, '10,756', 'UDTCastOpCo', 'C', '0', '?', 'Cost to convert to a UDT type '); 
insert into DBC.ConstantDefs values (2, '10,757', 'UDFProctectedCo', 'C', '0', '?', 'Minimum cost to execute to a UDF in protected mode '); 
insert into DBC.ConstantDefs values (2, '10,758', 'UDFNotProctectedCo', 'C', '0', '?', 'Minimum cost to execute to a UDF in non protected mode '); 
insert into DBC.ConstantDefs values (2, '10,759', 'UDMProctectedCo', 'C', '0', '?', 'Minimum cost to execute to a UDM in protected mode '); 
insert into DBC.ConstantDefs values (2, '10,760', 'UDMNotProctectedCo', 'C', '0', '?', 'Minimum cost to execute to a UDM in non protected mode '); 
insert into DBC.ConstantDefs values (2, '10,761', 'EditCo', 'C', '0', '?', 'Cost to convert numeric to character type '); 
insert into DBC.ConstantDefs values (2, '10,762', 'DEditCo', 'C', '0', '?', 'Cost to convert character to numeric type '); 
insert into DBC.ConstantDefs values (2, '10,763', 'HashBucketCo', 'C', '0', '?', 'Cost to execute a HashBucket operation '); 
insert into DBC.ConstantDefs values (2, '10,764', 'HashBakAmpCo', 'C', '0', '?', 'Cost to execute a HashBakAmp operation '); 
insert into DBC.ConstantDefs values (2, '10,765', 'HashAmpCo', 'C', '0', '?', 'Cost to execute a HashAmp operation '); 
insert into DBC.ConstantDefs values (2, '10,766', 'RelationCo', 'C', '0', '?', 'Cost to do relation like ands and ors operation '); 
insert into DBC.ConstantDefs values (2, '10,767', 'CompareRealCo', 'C', '0', '?', 'Cost to execute real comparision like eq, ls gt .. operation '); 
insert into DBC.ConstantDefs values (2, '10,768', 'CompareIntegerCo', 'C', '0', '?', 'Cost to execute interval comparision like eq, ls gt .. operation '); 
insert into DBC.ConstantDefs values (2, '10,769', 'CompareIntervalCo', 'C', '0', '?', 'Cost to execute integer comparision like eq, ls gt .. operation '); 
insert into DBC.ConstantDefs values (2, '10,770', 'TrimTrailCf', 'C', '0', '?', 'Per-byte cost to trim trailing character operation '); 
insert into DBC.ConstantDefs values (2, '10,771', 'TrimTrailOv', 'C', '0', '?', 'Overhead cost to trim trailing character operation '); 
insert into DBC.ConstantDefs values (2, '10,772', 'TrimBothCf', 'C', '0', '?', 'Per-byte cost to trim leading and trailing character operation '); 
insert into DBC.ConstantDefs values (2, '10,773', 'TrimBothOv', 'C', '0', '?', 'Overhead cost to trim leading and trailing character operation '); 
insert into DBC.ConstantDefs values (2, '10,774', 'SubStrCf', 'C', '0', '?', 'Per-byte cost to extract substring from character expression '); 
insert into DBC.ConstantDefs values (2, '10,775', 'SubStrOv', 'C', '0', '?', 'Overhead cost to extract substring from character expression '); 
insert into DBC.ConstantDefs values (2, '10,776', 'LikeCompareCf', 'C', '0', '?', 'Per-byte cost to execute like comparsion operation '); 
insert into DBC.ConstantDefs values (2, '10,777', 'LikeCompareOv', 'C', '0', '?', 'Overhead cost to execute like comparsion operation '); 
insert into DBC.ConstantDefs values (2, '10,778', 'ConcatCf', 'C', '0', '?', 'Per-byte cost to concatenate two strings '); 
insert into DBC.ConstantDefs values (2, '10,779', 'ConcatOv', 'C', '0', '?', 'Overhead cost to concatenate two strings '); 
insert into DBC.ConstantDefs values (2, '10,780', 'LowerCf', 'C', '0', '?', 'Per-byte cost to convert string to lower case '); 
insert into DBC.ConstantDefs values (2, '10,781', 'LowerOv', 'C', '0', '?', 'Overhead ost to convert string to lower case '); 
insert into DBC.ConstantDefs values (2, '10,782', 'UpperCf', 'C', '0', '?', 'Per-byte cost to convert string to upper case '); 
insert into DBC.ConstantDefs values (2, '10,783', 'UpperOv', 'C', '0', '?', 'Overhead cost to convert string to upper case '); 
insert into DBC.ConstantDefs values (2, '10,784', 'Char2HexIntCf', 'C', '0', '?', 'Per-byte cost to convert character expression to hex integer '); 
insert into DBC.ConstantDefs values (2, '10,785', 'Char2HexIntOv', 'C', '0', '?', 'Overhead cost to convert character expression to hex integer '); 
insert into DBC.ConstantDefs values (2, '10,786', 'TranslateCf', 'C', '0', '?', 'Per-byte cost to translate a character expression '); 
insert into DBC.ConstantDefs values (2, '10,787', 'TranslateOv', 'C', '0', '?', 'Overhead cost to translate a character expression '); 
insert into DBC.ConstantDefs values (2, '10,788', 'Unused1', 'C', '0', '?', 'Currently not used '); 
insert into DBC.ConstantDefs values (2, '10,789', 'Unused2', 'C', '0', '?', 'Currently not used '); 
insert into DBC.ConstantDefs values (2, '10,790', 'NoAggressiveRowKeyJCost', 'C', '0', '?', 'Disables aggressive rowkey joins '); 
insert into DBC.ConstantDefs values (2, '10,791', 'DisableCIReadCost', 'C', '0', '?', 'Disables the costing of CI reads '); 
insert into DBC.ConstantDefs values (2, '10,792', 'DirHJProbeOvCo', 'C', '0', '?', 'Overhead of probing hash table in direct Hash Joins '); 
insert into DBC.ConstantDefs values (2, '10,793', 'CompareRowidCo', 'C', '0', '?', 'Cost to execute a Rowid Comparison '); 
insert into DBC.ConstantDefs values (2, '10,794', 'HTBuildCf', 'C', '0', '?', 'Per-byte cost of building a hash table row '); 
insert into DBC.ConstantDefs values (2, '10,795', 'HTBuildOv', 'C', '0', '?', 'Overhead of building a hash table row '); 
insert into DBC.ConstantDefs values (2, '10,796', 'DirHTBuildCf', 'C', '0', '?', 'Per-byte cost of building a hash table row in direct hash joins '); 
insert into DBC.ConstantDefs values (2, '10,797', 'DirHTBuildOv', 'C', '0', '?', 'Overhead of building a hash table row in direct hash joins '); 
insert into DBC.ConstantDefs values (2, '10,798', 'HTProbeCf', 'C', '0', '?', 'Cost per row of probing the linked list of a hash table bucket '); 
insert into DBC.ConstantDefs values (2, '10,799', 'HTProbeOv', 'C', '0', '?', 'Overhead of probing the linked list of a hash table bucket '); 
insert into DBC.ConstantDefs values (2, '10,800', 'HashProbeSameDBCo', 'C', '0', '?', 'Cost of locating a hash within the same data block '); 
insert into DBC.ConstantDefs values (2, '10,801', 'HashProbeMaxCo', 'C', '0', '?', 'Cost of doing a full hash search '); 
insert into DBC.ConstantDefs values (2, '10,802', 'HashProbeLogCf1', 'C', '0', '?', 'Coefficient used in the log function model of hash probe '); 
insert into DBC.ConstantDefs values (2, '10,803', 'HashProbeLogCf2', 'C', '0', '?', 'Coefficient used in the log function model of hash probe '); 
insert into DBC.ConstantDefs values (2, '10,804', 'HashProbePowCf1', 'C', '0', '?', 'Coefficient used in the power series model of hash probe '); 
insert into DBC.ConstantDefs values (2, '10,805', 'HashProbePowCf2', 'C', '0', '?', 'Coefficient used in the power series model of hash probe '); 
insert into DBC.ConstantDefs values (2, '10,806', 'PJCacheBuildCf', 'C', '0', '?', 'Per-byte cost of building a row in the product join cache '); 
insert into DBC.ConstantDefs values (2, '10,807', 'PJCacheBuildOv', 'C', '0', '?', 'Overhead of building a row in the product join cache '); 
insert into DBC.ConstantDefs values (2, '10,808', 'PJRowAccessCo', 'C', '0', '?', 'Cost of accessing a row in the product join cache '); 
insert into DBC.ConstantDefs values (2, '10,809', 'MJRowAccessCf', 'C', '0', '?', 'Per-Byte Cost of accessing a row in the probed table in merge joins '); 
insert into DBC.ConstantDefs values (2, '10,810', 'MJRowAccessOv', 'C', '0', '?', 'Overhead Cost of accessing a row in the probed table in merge joins '); 
insert into DBC.ConstantDefs values (2, '10,811', 'HashRowCo', 'C', '0', '?', 'Cost to execute a HashRow operation '); 
insert into DBC.ConstantDefs values (2, '10,812', 'StringCompareCf', 'C', '0', '?', 'Per byte cost to compare a string expression '); 
insert into DBC.ConstantDefs values (2, '10,813', 'StringCompareOv', 'C', '0', '?', 'Overhead Cost of a string comparison '); 
insert into DBC.ConstantDefs values (2, '10,814', 'CaseExprOv', 'C', '0', '?', 'Overhead Cost to execute a case expression '); 
insert into DBC.ConstantDefs values (2, '10,815', 'PPILoadCf', 'C', '0', '?', 'Per partition cost in loading a PPI table '); 
insert into DBC.ConstantDefs values (2, '10,816', 'PPILoadOv', 'C', '0', '?', 'Overhead Cost for loading PPI table in partitions '); 
insert into DBC.ConstantDefs values (2, '10,817', 'LowSkewAllowance', 'C', '0', '?', 'decides when skew is high enough to warrant reducing the hash table size '); 
insert into DBC.ConstantDefs values (2, '10,818', 'PPIRowAccessCf', 'C', '0', '?', 'Per Row Cost of accessing a row in a partition '); 
insert into DBC.ConstantDefs values (2, '10,819', 'PPIRowAccessOv', 'C', '0', '?', 'Overhead Cost of accessing a row in a partition '); 
insert into DBC.ConstantDefs values (2, '10,820', 'HTProbeNoMatchCo', 'C', '0', '?', 'Per row cost of probing the hash table with an unmatched value '); 
insert into DBC.ConstantDefs values (2, '10,821', 'HeapSortOv', 'C', '0', '?', 'Overhead cost per row for heap-sorting a row '); 
insert into DBC.ConstantDefs values (2, '10,822', 'HeapSortCf', 'C', '0', '?', 'per byte cost per row for heap-sorting a row '); 
insert into DBC.ConstantDefs values (2, '10,823', 'HTProbeCf1', 'C', '0', '?', '1st coefficient of probing a linked list in a Hash Table '); 
insert into DBC.ConstantDefs values (2, '10,824', 'HTProbeOv1', 'C', '0', '?', '1st overhead of probing a linked list in a Hash Table '); 
insert into DBC.ConstantDefs values (2, '10,825', 'HTProbeBd1', 'C', '0', '?', 'Boundary of 1st and 2nd coefficients '); 
insert into DBC.ConstantDefs values (2, '10,826', 'HTProbeCf2', 'C', '0', '?', '2nd coefficient of probing a linked list in a Hash Table '); 
insert into DBC.ConstantDefs values (2, '10,827', 'HTProbeOv2', 'C', '0', '?', '2nd overhead of probing a linked list in a Hash Table '); 
insert into DBC.ConstantDefs values (2, '10,828', 'CPSBRSeqCf1', 'C', '0', '?', '1st coefficient of sequentially scanning a cp table with row format '); 
insert into DBC.ConstantDefs values (2, '10,829', 'CPSBRSeqOv1', 'C', '0', '?', '1st overhead of sequentially scanning a cp table with row format '); 
insert into DBC.ConstantDefs values (2, '10,830', 'CPSBRSeqBd', 'C', '0', '?', 'Boundary of 1st and 2nd coefficients '); 
insert into DBC.ConstantDefs values (2, '10,831', 'CPSBRSeqCf2', 'C', '0', '?', '2nd coefficient of sequentially scanning a cp table with row format '); 
insert into DBC.ConstantDefs values (2, '10,832', 'CPSBRSeqOv2', 'C', '0', '?', '2nd overhead of of sequentially scanning a cp table with row format '); 
insert into DBC.ConstantDefs values (2, '10,833', 'CPCNRSeqCf1', 'C', '0', '?', '1st coefficient of sequentially scanning a cp table with column format '); 
insert into DBC.ConstantDefs values (2, '10,834', 'CPCNRSeqOv1', 'C', '0', '?', '1st overhead of sequentially scanning a cp table with column format '); 
insert into DBC.ConstantDefs values (2, '10,835', 'CPCNRSeqBd', 'C', '0', '?', 'Boundary of 1st and 2nd coefficients '); 
insert into DBC.ConstantDefs values (2, '10,836', 'CPCNRSeqCf2', 'C', '0', '?', '2nd coefficient of sequentially scanning a cp table with column format '); 
insert into DBC.ConstantDefs values (2, '10,837', 'CPCNRSeqOv2', 'C', '0', '?', '2nd overhead of of sequentially scanning a cp table with column format '); 
insert into DBC.ConstantDefs values (2, '10,838', 'CPSBRDelCf1', 'C', '0', '?', '1st coefficient to access 1 del bit from a cp table '); 
insert into DBC.ConstantDefs values (2, '10,839', 'CPSBRDelOv1', 'C', '0', '?', '1st overhead to access 1 del bit from a cp table '); 
insert into DBC.ConstantDefs values (2, '10,840', 'CPSBRDelBd1', 'C', '0', '?', 'Boundary of 1st and 2nd coefficients '); 
insert into DBC.ConstantDefs values (2, '10,841', 'CPSBRDelCf2', 'C', '0', '?', '2nd coefficient to access 1 del bit from a cp table '); 
insert into DBC.ConstantDefs values (2, '10,842', 'CPSBRDelOv2', 'C', '0', '?', '2nd overhead to access 1 del bit from a cp table '); 
insert into DBC.ConstantDefs values (2, '10,843', 'CPSBRDelBd2', 'C', '0', '?', 'Boundary of 2nd and 3rd coefficients '); 
insert into DBC.ConstantDefs values (2, '10,844', 'CPSBRDelCf3', 'C', '0', '?', '3rd coefficient to access 1 del bit from a cp table '); 
insert into DBC.ConstantDefs values (2, '10,845', 'CPSBRDelOv3', 'C', '0', '?', '3rd overhead to access 1 del bit from a cp table '); 
insert into DBC.ConstantDefs values (2, '10,846', 'CPSBRProbeSameDBCo', 'C', '0', '?', 'Per row cost of probing from a cp table with row format from same DB '); 
insert into DBC.ConstantDefs values (2, '10,847', 'CPCNRProbeSameDBCo', 'C', '0', '?', 'Per row cost of probing from a cp table with column format from same DB '); 
insert into DBC.ConstantDefs values (2, '10,848', 'CPSBRProbeDiffDBCo', 'C', '0', '?', 'Per row cost of probing from a cp table with row format from diff DB '); 
insert into DBC.ConstantDefs values (2, '10,849', 'CPCNRProbeDiffDBCo', 'C', '0', '?', 'Per row cost of probing from a cp table with column format from diff DB '); 
insert into DBC.ConstantDefs values (2, '10,950', 'NumNodesPerDiskArray', 'C', '0', '?', 'Number of nodes per disk array '); 
insert into DBC.ConstantDefs values (2, '10,951', 'CPUScale', 'C', '0', '?', 'Conversion factor from path length to path time in milliseconds '); 
insert into DBC.ConstantDefs values (2, '10,952', 'DAScale', 'C', '0', '?', 'Conversion factor from array throughput to per-node array throughput '); 
insert into DBC.ConstantDefs values (2, '10,953', 'NumAmpsPerCPU', 'C', '0', '?', 'Number of AMPs per CPU '); 
insert into DBC.ConstantDefs values (2, '10,954', 'AmpsInSystem', 'C', '0', '?', 'Total number of amps in the system '); 
insert into DBC.ConstantDefs values (2, '13,000', 'CacheableBlocks', 'I', '10.0000', '?', 'Maximum number of blocks that can be assumed to be in cache when the \nsame set of blocks is reread during a join.\n  Value Range: >= 0 \n  Default: 10 \n '); 
insert into DBC.ConstantDefs values (2, '13,001', 'ConditionCosting', 'I', '1.0000', '?', 'Condition costing control levels. Values are IN (1, 2, 3) where: \n   1 (default) - New condition costing and ordering  \n  2           - New condition costing but ordering disabled  \n  3           - Disable new condition costing and ordering \n '); 
insert into DBC.ConstantDefs values (2, '13,002', 'GroupAMPPISampling', 'I', '0.0000', '?', 'Determines the number of AMPs to be sampled for getting row estimates of a table. \n  0 (default) - Single AMP sampling \n  2 .. 4      - Two AMP sampling \n  5           - Five AMP sampling \n  6           - Node level sampling \n  7           - All AMP sampling \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '13,003', 'LegacyJoinCardDefault', 'I', '0.0000', '?', 'Enable legacy join cardinality default when no demographics on join columns \nare available. \n  0 (default) - Use new cardinality formulas. \n  1           - Fall back to legacy formulas. \n '); 
insert into DBC.ConstantDefs values (2, '13,004', 'LIKEEstPartialIntRatio', 'I', '0.1250', '?', 'The default ratio for calculating the rows selected  in a partially covered \ninterval by LIKE predicates of "abc%"- pattern. \n  Valid Range: 0 - 1 \n  Default: 0.125 \n '); 
insert into DBC.ConstantDefs values (2, '13,005', 'RASHistDeviationPct', 'I', '10.0000', '?', 'Determines the allowable percentage deviation between Random AMP Sample (RAS) \nand statistics histogram.  If the deviation exceeds this value, then statistics \nare assumed to be stale and are overridden by RAS. However, Histgrams are still \nused for selectivity estimations and the estimations gets extrapolated. \n  Valid Range: >= 0 \n  Default: 10 \nSetting this to 0 causes RAS to bypass the Histogram all the time.  Used only when \nRevertEstimationLogic == 0 and (ExtrapolateStatistics == 0 or \nExtrapolateStatistics == 2). \n '); 
insert into DBC.ConstantDefs values (2, '13,006', 'RevertEstimationLogic', 'I', '0.0000', '?', 'Flag to revert to pre-12.0 cardinality/selectivity estimation logic \n  0 (default) - Use new cardinality/selectivity estimation logic \n  1           - Use pre-12.0 cardinality/selectivity estimation logic \n '); 
insert into DBC.ConstantDefs values (2, '13,007', 'RevertSkewAdjust', 'I', '0.0000', '?', 'Revert to prior release skew-based cardinality adjustments \nCurrently unused; subsumed by RevertEstimationLogic. \n '); 
insert into DBC.ConstantDefs values (2, '13,008', 'ConstrScanAxPath', 'I', '0.0000', '?', 'Controls enabling/disabling the new constraint scan access path. \n  0 (default) - Enable for aggregation only \n  1           - Disable. \n  2           - Enable for aggregation and retrieval (not available yet) \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '13,009', 'ocsDebug', 'I', '2.0000', '?', 'Determines the action to be taken if optimizer sanity checks of demographic or costing \ninformation fails: \n  0           - Quiet mode.  Fall back to default demographic or cost value. \n  1           - Parser crash with snapshot dump. \n  2 (default) - Log occurance in the event log and fall back to default value. \n  3           - First 2 occurances, generate a snapshot dump and log all occurance \n                in the event log and fall back to default value. \n '); 
insert into DBC.ConstantDefs values (2, '13,010', 'SoftUniquePct', 'I', '95.0000', '?', 'If the uniqueness of a column is more that this percent, it is assumed to be \na rolling column and gets qualified for distinct values or rows extrapolation if \nthe statistics are determined to be stale. \n  Valid Range: 0 - 100 \n  Default: 95 \nSetting this to 0 disables extrapolations.  Used only when RevertEstimationLogic == 0 \nand (ExtrapolateStatistics == 0 or ExtrapolateStatistics == 2). \n '); 
insert into DBC.ConstantDefs values (2, '13,011', 'PreJCost', 'I', '1.0000', '?', 'Enables/Disables Type 2 pre-join costing logic.  When enabled, cost estimates \nare made for any additional steps required on the input relations prior to the \njoin, for example, sort/duplicate elimination, aggregation, and so on. \n  0           - Disable completely \n  1 (default) - Enable for both uniq-id and non-uniq-id join planning paths. \n  2           - Enable only for the uniq-id path. \n '); 
insert into DBC.ConstantDefs values (2, '13,012', 'MaxStatsInterval', 'I', '200.0000', '?', 'Maximum number of statistics intervals that are allowed. \n  Valid Range: 1 - 240 \n  Default: 200 \n '); 
insert into DBC.ConstantDefs values (2, '13,013', 'ExtrapolateStatistics', 'I', '0.0000', '?', 'Flag to enable/disable extrapolating demographics such as unique values or \nrows when stale statistics are detected. \n  0 (default) - Enable extrapolation \n  1           - Disable extrapolation \n  2           - Enable extrapolation by honoring single-Amp sampling always \n '); 
insert into DBC.ConstantDefs values (2, '13,014', 'EstWithSingleRowOpt', 'I', '1.0000', '?', 'If a table has a single row access via a UPI or USI, this flag determines whether \nor not the optimizer can retrieve this row to derive more accurate estimates. \n  0           - Disable this optimization. \n  1 (default) - Enable this optimization. \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '13,015', 'EnableSessLevelDrvStats', 'I', '1.0000', '?', 'Flag to determine whether or not to allow session level derived statistics for \nglobal and volatile tables. \n  0           - Disallow session level derived statistics. \n  1 (default) - Enable these derived statistics. \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '13,016', 'AssumedPIUniquePct', 'I', '75.0000', '?', 'When no statistics are available on a NUPI, this is the assumed uniqueness. \n  Valid Range: 50 - 100 \n  Default: 75 \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '13,017', 'TableFillFactor', 'I', '0.7500', '?', 'Table block fill factor.  Assumed table block size is this percent \nof maximum table block size \n  Valid Range: 0.01 - 1.00 \n  Default: 0.75 \n '); 
insert into DBC.ConstantDefs values (2, '13,018', 'SpoolFillFactor', 'I', '1.0000', '?', 'Spool block fill factor.  Assumed spool block size is this percent \nof maximum spool block size \n  Valid Range: 0.01 - 1.00 \n  Default: 1.00 \n '); 
insert into DBC.ConstantDefs values (2, '13,019', 'IndexFillFactor', 'I', '0.7500', '?', 'Index block fill factor.  Assumed index block size is this percent \nof maximum index block size \n  Valid Range: 0.01 - 1.00 \n  Default: 0.75 \n '); 
insert into DBC.ConstantDefs values (2, '13,020', 'JoinCardSkewAdj', 'I', '1.0000', '?', 'Enables or disables join cardinality adjustment based on skew. \n  0           - Disable adjustment. \n  1 (default) - Enable adjustment.  \n '); 
insert into DBC.ConstantDefs values (2, '13,021', 'RASHistAbsDeviation', 'I', '10,000.0000', '?', 'Determines the allowable absolute deviation of rows between Random AMP Sample (RAS) \nand statistics histogram.  If the deviation exceeds this value, then statistics \nare assumed to be stale and are overridden by RAS. However, Histgrams are still \nused for selectivity estimations and the estimations gets extrapolated. \n  Valid Range: >= 0 \n  Default: 10,000 rows \nSetting this to 0 causes RAS to bypass the Histogram all the time.  Used only when  \nRevertEstimationLogic == 0 and (ExtrapolateStatistics == 0  or \nExtrapolateStatistics == 2) \n '); 
insert into DBC.ConstantDefs values (2, '13,022', 'AggrEstCapPct', 'I', '75.0000', '?', 'Aggregate estimations cap percentage when no stats are found on the grouping columns. \n  Default is 75%. Valid Range 1 - 100 \n '); 
insert into DBC.ConstantDefs values (2, '13,023', 'CCFIndependentValueRatio', 'I', '1.0000', '?', 'The value mapping ratio used in detecting independent columns. \n  Valid Range: 0 - 1 \n  Default: 0.6 \n  Used only when RevertEstimationLogic == 0 \n '); 
insert into DBC.ConstantDefs values (2, '13,024', 'CCFMulti2SnglValueRatio', 'I', '1.0000', '?', 'The ratio between combined values and the muliplication of individual\ncolumn values used in detecting independent columns. \n  Valid Range: 0 - 1 \n  Default: 0.9 \n '); 
insert into DBC.ConstantDefs values (2, '13,025', 'RevertJoinPlanning', 'I', '0.0000', '?', 'Flag to revert join planning.  == 1 =>  use a fixed 64 table limit for joins \nand TD12 join planning heuristics.\ \n  Valid Range: 0 - 1 \n  Default: 0 \n '); 
insert into DBC.ConstantDefs values (2, '13,026', 'MaxJoinTables', 'I', '128.0000', '?', 'Maximum number of tables that can be joined per query block.  == 0 => use the \nsystem default, whatever it might be.  Any value in 1..16 results in a 16 table \nupper limit.  If this value is >= the DBS Control record MaxJoinTables field, \nthen the DBS Control record value will be used for cost profile activation. \n  Valid Range: 0 - 256 \n  Default: 128 \n '); 
insert into DBC.ConstantDefs values (2, '13,027', 'SorNumMergeBufs', 'I', '0.0000', '?', 'Number of merge buffers that would be used during a sort.  This value influences sort operation\ncost estimation.  Values between 1 and 8 are mapped to 8 and values above 64 are mapped to 64.  \nValue == 0 means use the system default, whatever it might be.  \n  Valid Range: 0 - 64 \n  Default: 0 \n '); 
insert into DBC.ConstantDefs values (2, '13,035', 'UseOldJoinTermSelectionRules', 'I', '0.0000', '?', 'Disable new join condition selection rules, and go back to pre-DR129210 logic. \n  0 (default) - Use new join term selection rules. \n  1           - Fall back to legacy join term selection rules. \n '); 
insert into DBC.ConstantDefs values (2, '13,031', 'NUSIDelCtrlPct', 'I', '0.0000', '?', 'Flag to control the NUSI path used for Delete operation.\ \n  Valid Range: 1 - 100% \n  Default: 0% \n '); 
insert into DBC.ConstantDefs values (2, '13,032', 'DR138006OFF', 'I', '0.0000', '?', 'Enables or disables the DR138006 fix. \n  0 (default) - Enable the DR138006 fix. \n  1           - Disable the DR138006 fix.  \n '); 
insert into DBC.ConstantDefs values (2, '17,001', 'noltstj', 'I', '0.0000', '?', 'indicate whether LTST join should be generated   0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,002', 'ltstj', 'I', '0.0000', '?', 'indicate LTST join should be used if existed    0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,003', 'ou2in', 'I', '0.0000', '?', 'indicate outer to inner join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,004', 'noreleasesub', 'I', '0.0000', '?', 'To disable release subquery optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,005', 'nocse', 'I', '0.0000', '?', 'indiacate No Common Subexpression Elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,006', 'hsjoin', 'I', '0.0000', '?', 'indicate hash star join should be used if existed  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,007', 'hsjfeature', 'I', '0.0000', '?', 'indicate hash star join feature  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,008', 'nosattc', 'I', '0.0000', '?', 'to disable SAT-TC feature  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,009', 'noje', 'I', '0.0000', '?', 'indicate no join elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,010', 'nodt', 'I', '0.0000', '?', 'indicate no derived table optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,011', 'pgboff', 'I', '0.0000', '?', 'to diable PGB feature  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,012', 'nonestedjoin', 'I', '0.0000', '?', 'to diable nested join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,013', 'noinner', 'I', '0.0000', '?', 'indicate no inner join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,014', 'noprodjoin', 'I', '0.0000', '?', 'to disable product join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,015', 'nosre', 'I', '0.0000', '?', 'to disable Selectivity Redund Elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,016', 'nomergejoin', 'I', '0.0000', '?', 'to disable merge join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,017', 'noinlistjoin', 'I', '0.0000', '?', 'to disable inlist join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,018', 'noderivedstats', 'I', '0.0000', '?', 'indicate noderived stats  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,019', 'noanynopt', 'I', '0.0000', '?', 'indicate no Any N OPTimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,020', 'rowkeyjoin', 'I', '0.0000', '?', 'choose row key joins  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,021', 'norowkeyjoin', 'I', '0.0000', '?', 'dont choose row key join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,022', 'nestedjoin', 'I', '0.0000', '?', 'choose nested join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,023', 'yesinlistjoin', 'I', '0.0000', '?', 'favor IN-List join / IN-List access path  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,024', 'nocrosstermest', 'I', '0.0000', '?', 'dont do cross cross term estimation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,025', 'nodisjunctjc', 'I', '0.0000', '?', 'dont do disjuncted term estimation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,026', 'compldisjunctjc', 'I', '0.0000', '?', 'do full blown disjunct JC including terms converted from DNF->CNF  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,027', 'noflyhashjoin', 'I', '0.0000', '?', 'to disable single partition hash join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,028', 'nohashjoin', 'I', '0.0000', '?', 'to disable hash join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,029', 'usecalccard', 'I', '0.0000', '?', 'use CalcCard for RPV estimation, when it"s false (default), use OptRowsPerValue  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,030', 'nocsa', 'I', '0.0000', '?', 'to diable CSA feature  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,031', 'noexpandonamp', 'I', '0.0000', '?', '0 - (default ) to disable this flag\n1 -  to enable this flag '); 
insert into DBC.ConstantDefs values (2, '17,032', 'disablespe', 'I', '0.0000', '?', 'to disable static partition elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,034', 'nooutertoinjoin', 'I', '0.0000', '?', 'to disable outer to inner join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,035', 'nopushpredtospool', 'I', '0.0000', '?', 'to disallow pushing predicates to spool  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,036', 'noviewfold', 'I', '0.0000', '?', 'indicate no view folding  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,037', 'noprojview', 'I', '0.0000', '?', 'indicate no project view  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,038', 'nonewout2in', 'I', '0.0000', '?', 'indicate no new outer to inner join conversion  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,039', 'notexistsel', 'I', '0.0000', '?', 'inicate not exists selectivity  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,040', 'nopushjoin', 'I', '0.0000', '?', 'to diable push join optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,041', 'forcepushjoin', 'I', '0.0000', '?', 'to force push join optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,042', 'axpfallback', 'I', '0.0000', '?', 'indicate Fallback Single Table access path and Single Table Cardinality Estimation to algorithm prior to v2r7  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,043', 'nods4sngltblest', 'I', '0.0000', '?', 'indicate Disable Derived stats for new single table estimations logic  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,046', 'corrmergejoin', 'I', '0.0000', '?', 'Favor the selection of correlated incl or excl merge joins.   0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,047', 'nopartremapjoin', 'I', '0.0000', '?', 'Disable partition-remapping rowkey-based merge joins.  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,049', 'noimprovednestedjoin', 'I', '0.0000', '?', 'Disable improved nested join.  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,050', 'nostatsinheritance', 'I', '0.0000', '?', 'indicate No stats inheritance  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,051', 'nojind4est', 'I', '0.0000', '?', 'indicate don"t use sparse JI for estimations  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,053', 'noconnectedlookahead', 'I', '0.0000', '?', 'No connected lookahead if enabled  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,054', 'complexviewspool', 'I', '0.0000', '?', 'Do not fold views on outer side with outer joins and NSEs in the WHERE  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,055', 'nomindependset', 'I', '0.0000', '?', 'Disable building of minimum dependset  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,056', 'noaggrenh', 'I', '0.0000', '?', 'Feature Aggregation Planning enhancement is turned off DR50796  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,057', 'noskipretaggrenh', 'I', '0.0000', '?', 'Do not parcelize during aggregation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,058', 'noskiplocalaggrenh', 'I', '0.0000', '?', 'Do not skip local cache during aggregation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,059', 'noskipcacheaggrenh', 'I', '0.0000', '?', 'Do not skip local and/or global cache during aggregation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,060', 'nobjaggrplancost', 'I', '0.0000', '?', 'Do not add sum step cost during planning  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,061', 'nodistinctopt', 'I', '0.0000', '?', 'Disable Distinct optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,062', 'oldminusall', 'I', '0.0000', '?', 'new minus-all implementation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,063', 'nopredsimpl', 'I', '0.0000', '?', 'Disable predicate simplification optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,064', 'noqrweqnull', 'I', '0.0000', '?', 'to disable mark_NullEq qrw optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,065', 'nouncondufid', 'I', '0.0000', '?', 'indicate no unconditional unique field ID  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,066', 'nonewje', 'I', '0.0000', '?', 'indicate no new join elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,067', 'nosemipjdpe', 'I', '0.0000', '?', 'to disable inclusion/exclusion product join with DPE  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,068', 'convertdpetopj', 'I', '0.0000', '?', 'to onvert an exclusion product join with DPE to an exclusion product join without DPE  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,069', 'oldajirewrite', 'I', '0.0000', '?', 'indicate old AJI rewrite  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,070', 'noinlistscan', 'I', '0.0000', '?', 'indicate No IN-list scan  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,071', 'nosi', 'I', '0.0000', '?', 'indicate Don"t pick Secondary Index  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,072', 'csecaseoff', 'I', '0.0000', '?', 'to disable CSE for CASE  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,073', 'disablecharpe', 'I', '0.0000', '?', 'to disable CHAR partition elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,074', 'disabledelayedpe', 'I', '0.0000', '?', 'to disable Disable delayed partition elimination  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,075', 'nomdppiopt', 'I', '0.0000', '?', 'to diable move date PPI optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,076', 'nomdjiopt', 'I', '0.0000', '?', 'to disable move date JI optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,077', 'noqrwopt', 'I', '0.0000', '?', 'to disable QRW optimization  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,078', 'notrcje', 'I', '0.0000', '?', 'to Disable TRC JE  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,079', 'nope4est', 'I', '0.0000', '?', 'to disable Partition elimination based cost estimation  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,080', 'no5laforojs', 'I', '0.0000', '?', 'to disable 5 look ahead join planning for outer joins  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n '); 
insert into DBC.ConstantDefs values (2, '17,501', 'PGBControl', 'I', '0.0000', '?', 'The value of "0" enables PGB with costing.\nThe value of "1" enables PGB (partial SUM) without costing.\nThe value of "2" disables PGB.\nThe value of "3" disables PGB for PPI tables.\nThe value of "4" enables PGB (SORT/GROUP) without costing.\nThe default value is 0.\n '); 
insert into DBC.ConstantDefs values (2, '17,502', 'fudgefactor', 'I', '0.0000', '?', 'This flag is used to set the fudge factor\nused in the optimizer. Default is 0. A Value 0 means use\nthe default fudge factor of 75%.0\n '); 
insert into DBC.ConstantDefs values (2, '17,503', 'HTMemAlloc', 'I', '20.0000', '?', 'HTMemAlloc - This field specifies the percentage of memory to be\nallocated to a hash table for a hash join.  A value of 0 turns off\nhash joins. Valid range is 0 to 10.\nThe default value is 10.\n '); 
insert into DBC.ConstantDefs values (2, '17,504', 'HTMemAllocBase', 'I', '20.0000', '?', 'The base in megabytes to which the\nHTMemAlloc percentage is applied. The valid range is\n1-1024, with 20 being the default value '); 
insert into DBC.ConstantDefs values (2, '17,505', 'DisableDPE', 'I', '0.0000', '?', 'DisableDPE  - This flag is used to control dynamic\npartition elimination (DPE). By default, this value is 0.\n0 = Allow all DPE (default).\n1 = Disable product join DPE.\n2 = Disable merge join DPE.\n3 = Disable both product and merge join DPE.\n4 = Disable product join DPE for multilevel PPI tables.\n    Both product and merge join DPE are enabled for single-\n    level PPI tables.\n5 = Disable product join DPE for multilevel PPI tables\n   and disable DPE for merge join. Product join DPE for\n    single-level PPI tables is enabled.\n '); 
insert into DBC.ConstantDefs values (2, '17,506', 'WTValidator', 'I', '0.0000', '?', 'This flag is used to control the\n white tree validation process. By default, this value is 0.0 = Validate White Tree and die if found problem in final plan (Default).\n1 = Validate White Tree and report warning if found problem.\n2 = Validate White Tree and auto correct if found problem.\n3 = Disable White Tree Validation.\n4 = Validate White Tree and die if found problem in intermediate/final plan\n    (Not recommended in customer side).\n '); 
insert into DBC.ConstantDefs values (2, '17,507', 'NoSlidingWindowPPIJoin', 'I', '0.0000', '?', 'This integer determines whether Sliding window\nmerge joins are applicable for PPI tables.\nBy default the value is 0.\n0 = All sliding window joins are enabled.\n1 = Basic sliding window joins are disabled\n2 = All sliding window joins are disabled \n '); 
insert into DBC.ConstantDefs values (2, '17,508', 'NLookAheadControl', 'I', '0.0000', '?', 'Set a threshold for the number\nof connections among the tables to be joined above\nwhich 2 or more lookahead will be disabled. The threshold\nis set as an integer among 0 .. 100 as follows:\n      NLookAheadControl = 100 - a*100/b\nHere, a is the maximal number of connections allowed for 2\nor more lookahead; b is the maxmial number of possible\nconnections, currently b=2016. The default value for\nNLookAheadControl is 0, which means always enable 2 or\nmore lookahead.\n '); 
insert into DBC.ConstantDefs values (2, '17,509', 'disable_optimize_Index_ppi', 'I', '0.0000', '?', 'This field enables or disables\n1) the performance enhancements associated with\n  eliminating rowids at the secondary index level\n  if there is a residual condition on the partitioning\n  column, for a PPI table and\n 2) SingleAMP NUSI access, if NUSI index is on the same\n   column(s) as NUPI.\nA value of 0 enables both the optimization.\nA value of 1 disables the eliminating the rowids at the\n index level optimization.\nA value of 2 disables the single amp NUSI optimization.\n A value of 3 disables both the optimizations.\nThe default is 0.\n '); 
insert into DBC.ConstantDefs values (2, '17,510', 'DisableDeferredPartitionDelete', 'I', '0.0000', '?', 'determines whether or not to disable the optimization\nto delete whole partitions of a PPI table\nwithout transient journalling based on analysis of the WHERE condition\nin the DELETE statement.  The default value is 0.\n '); 
insert into DBC.ConstantDefs values (2, '17,511', 'FoldRetIntoMrg', 'I', '0.0000', '?', 'This field enables/disables some additional\nINSERT-SELECT optimization.  Set it to TRUE to enable.  It is\ndisabled by default. '); 
insert into DBC.ConstantDefs values (2, '17,512', 'LimitInlistCVal', 'I', '2,000.0000', '?', 'indicate the number of combined values in Inlist.\nThe valid range of values is 1 ..  1048576.\nThe default value is 2000. '); 
insert into DBC.ConstantDefs values (2, '17,513', 'DisableInclPJDPE', 'I', '0.0000', '?', 'determines whether dynamic partition elimination is disabled for inclusion\nproduct joins involving PPI tables.\mThe default value of DisableInclPJDPE is 0. '); 
insert into DBC.ConstantDefs values (2, '17,514', 'DPESkewAdjustment', 'I', '25.0000', '?', 'Valid range: 0 - 5000\nDefault value: 25 '); 
insert into DBC.ConstantDefs values (2, '17,515', 'DisableExclPJDPE', 'I', '0.0000', '?', 'determines whether dynamic partition elimination is \ndisabled for exclusion product joins involving PPI tables.\nThe default value of DisableExclPJDPE is 0 '); 
insert into DBC.ConstantDefs values (2, '17,516', 'BinaryRange_NThreshold', 'I', '7.0000', '?', 'Valid range is: 0 - 10000\nDefault value is 7 '); 
insert into DBC.ConstantDefs values (2, '17,517', 'LegacyRange_N', 'I', '0.0000', '?', '0 - (default) disable this feature1 - enable this feature '); 
insert into DBC.ConstantDefs values (2, '13,036', 'ValuetoConvINtoOR', 'I', '10,240.0000', '?', 'Controls the conversion of INList to ORList \ \n  Valid Range: 1 - 10240 \n  Default: 10240 \n '); 
insert into DBC.ConstantDefs values (2, '13,044', 'EnableNEOoputcopyForGroupBy', 'I', '0.0000', '?', 'Controls the use of NEOoputcopy for copying GroupBy \n  Valid Range: 0 - 1 \n  Default: 0 \n '); 
insert into DBC.ConstantDefs values (2, '13,028', 'EPJMinConfidenceLvl', 'I', '0.0000', '?', 'Allow Equality Product Joins (EPJs) only if their confidences are higher than or equal to a threshold (0 to 4). \n0 allows EPJs with any type of confidence (Default) \n1 Allows EPJs with high, low, index confidence \n2 Allows EPJs with high, low  confidence \n3 Allows EPJs with high confidence \n4 Disallow EPJs \n '); 
insert into DBC.ConstantDefs values (2, '13,029', 'EPJCoveringOJ', 'I', '0.0000', '?', 'Decide if OEPJs (Outer Equality Product Join) are affected by EPJMinConfidenceLvl.\n0: EPJ restriction does not include OEPJs (Default) \n1: EPJ restriction includes OEPJs\n '); 
insert into DBC.ConstantDefs values (2, '13,041', 'TempMemPoolThreshold4LTSTJ', 'I', '200.0000', '?', 'Decide when to call jplan with temporary memory pools from ltst join planning. \n '); 
insert into DBC.ConstantDefs values (2, '17,087', 'EnableDR142711', 'I', '0.0000', '?', 'Enable optimization from DR 142711.\n0: DR142711 is disabled (Default) \n1: DR142711 is enabled \n '); 
insert into DBC.ConstantDefs values (2, '13,030', 'UseRASRowSize', 'I', '0.0000', '?', 'Use RAS RowSize, which comes from Random AMP Sampling, as a maximum rowsize in estimating the size of rowsif the row has variable length columns\n0: Do not use RAS rowsize information (Default)\n1: Use the RAS rowsize information\n '); 
insert into DBC.ConstantDefs values (2, '13,033', 'DisableDR136124Flag', 'I', '0.0000', '?', 'Flag to disable the fix for DR136124. Valid Range : 0 - 1 \n '); 
insert into DBC.ConstantDefs values (2, '13,046', 'PartialInListSel', 'I', '100.0000', '?', 'Decide whether to use all values or sampled number  values while estimating qualified rows from IN clause. \n '); 
insert into DBC.ConstantDefs values (2, '13,063', 'EnableCPDiagnostics', 'I', '-1.0000', '?', 'Used to enable some of the more dangerous column-partition related\n  diagnostics\nWhen this value is 0 or not set, a limited set of nondangerous\n CP related diagnostics can be used.\nWhen this value is set to 1, some additional CP related\n diagnostics can be used.\nWhen this value is set to 2, all the CP related diagnostics\n can be used.\nThe default is not to be set (-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,064', 'DisableColumnar', 'I', '-1.0000', '?', 'Used to disable creating a CP table or join index or\n to alter a table that is not a CP table to be a CP table.\nWhen this value is 0 or not set, creating a CP table or\n join index or to alter a table that is not a CP table to\n be a CP table is allowed (i.e., enabled).\nWhen this value is set to 1, creating a CP table or join index\n or to alter a table that is not a CP table to be a CP\n table is disallowed (i.e., disabled).\nThe default is not to be set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,065', 'PartitioningConstraintForm', 'I', '-1.0000', '?', 'Used to specify if the enhanced partitioning constraint\n  form is used in all cases or the old form is used for\n  compatibility \nWhen this value is 0 or not set, the partitioning constraint\n  text for partitioning that does not use partitioning\n  specification features added in Teradata 14.0 conforms\n  to the pre-Teradata 14.0 partitioning constraint text form.\nWhen this value is set to 1, all newly created or altered\n   partitioning constraint text conforms to the constraint\n   form added in Teradata 14.0.\nThe default is not to be set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,066', 'PPICacheThrP', 'I', '-1.0000', '?', 'If it is 0 or not set (-1), the DBSControl performance group\n  field PPICacheThrP value is used.\nThis constant has a float value.  The percentage is\n  PPICacheThrP / 10.  i.e., a value of 1 is equivalent to 0.1%.\nThe default is not to be set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,067', 'NumReadCPContexts', 'I', '-1.0000', '?', 'Used to override the number of available read \n column-partition contexts \nIf it is 0 or not set(-1), the setting of the Cost Profile\n  constant PPICacheThrP is used to determine the number\n of available column-partition contexts for reading \n from a CP object.\nIf it is set to a value between 2 or higher, it is used \n as the number of available column-partition contexts for\n reading from a CP object.\nThe default is not to be set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,068', 'NumWriteCPContexts', 'I', '-1.0000', '?', 'Used to override the number of available write column-partition\n  contexts determined using the PPICacheThrP option in the Cost Profile\nIf it is 0 or not set, the setting of the Cost Profile constant\n PPICacheThrP is used to determine the number of available \n column-partition contexts for writing (appending) to a CP object.\nIf it is set to a value between 1 or higher, this value is used \n as the number of available column-partition contexts for writing\n (appending) to a CP object.\nThe default is not to be set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,069', 'SizeWriteCPBuf', 'I', '-1.0000', '?', 'Overrides the RCS buffer size associated with a column-partition \ncontext. The allowed range is 1 - 16 which represents a multiple of \n64KB. If 0 or not set(-1), 2 (131072 KB) will be used as the default.\n '); 
insert into DBC.ConstantDefs values (2, '13,070', 'CPMergeBlkDelThreshold', 'I', '-1.0000', '?', 'If not set, 1000 is used as the number of data blocks\n  that are read before deleting those data blocks when \n  CPMerge is reading a column partition from the CP merge spool.\nIf set to 0, data blocks that are read are not deleted when \n  CPMerge is reading a column partition from the CP merge spool\n  until completely finishing the read of the column partition.\nIf it is set to a value between 1 or higher, this value is used \n  as the number of data blocks that are read before deleting those\n  data blocks when CPMerge is reading a column partition from the \n  CP merge spool.\nThe default is not to be set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,071', 'AlterBlkDelThreshold', 'I', '-1.0000', '?', 'If not set, 1000 is used as the number of data blocks\n  that are read before deleting those data blocks when \n  ALTER TABLE is reading a column partition in order to write\n  an altered version of the column-partition with an available\n  column partition number.\nIf it is set to 0, data blocks that are read are not deleted \n  when reading a column partition until completely finishing \n  the read of the column partition.\nIf it is set to a value between 1 or higher, this value is used \n  as the number of data blocks that are read before deleting \n  those data blocks when ALTER TABLE is reading a column partition \n  in order to write an altered version of the column-partition with\n  an available column partition number.\nThe default is not to be set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,072', 'CPCFSize', 'I', '-1.0000', '?', 'Used to influence whether a system-determined format\n  for a column partition is COLUMN or ROW\nIt has an integer value.\nThe default is to be not set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,073', 'CPCRACSize', 'I', '-1.0000', '?', 'Used to influence whether a system-determined format\n  for a column partition is COLUMN or ROW\nIt has an integer value.\nThe default is to be not set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,074', 'CPCRACMax', 'I', '-1.0000', '?', 'Used to influence whether a system-determined format\n  for a column partition is COLUMN or ROW\nIt has an integer value. \nThe default is to be not set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,075', 'CPCRNACMax', 'I', '-1.0000', '?', 'Used to influence whether a system-determined format\n  for a column partition is COLUMN or ROW\nIt has an integer value.\nThe default is to be not set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,076', 'CPCRFS', 'I', '-1.0000', '?', 'Used to influence whether a system-determined format\n  for a column partition is COLUMN or ROW\nIt has an integer value.\nThe default is to be not set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,077', 'CPDelMaxCount', 'I', '-1.0000', '?', 'CPDelMaxCount has an integer value.\n  It must be between 0 and 512000.\nIf it is 0 or not set(-1), 32000 is a preliminary suggestion\n  for the value that is used but will be adjusted as needed based\n  on testing; this value would limit the container row size for a \n  delete column partition to about 4KB.\nThe default for this constant is not to be set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,078', 'NoPIRowPartitioning', 'I', '-1.0000', '?', 'Used to disable(0)/enable(1) NoPI row partitioning.\nDefault is not to be set(-1).\n '); 
insert into DBC.ConstantDefs values (2, '13,079', 'AutoCompress', 'I', '3.0000', '?', 'AutoCompress has an integer value.  The value must be between 0 and 2. \nIf it is 3 or not set, autocompression is optimized for both CPU and disk I/O.   \n0 indicates no autocompression.  1 indicates autocompression is optimized only for disk I/O.  \nDefault Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,080', 'AutoCompressUTF8SampleP', 'I', '0.0000', '?', 'AutoCompressUTF8SampleP defines the percentage of column partition values to  \nsample in a container to determine if UTF8 compression is to be used for the container. \nAutoCompressUTF8SampleP has an integer value.  The value must be between 0 and 100.   \nIf it is 0 or not set, 5 (indicating 5%) will be  used. Default Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,081', 'AutoCompressDynamicVLP', 'I', '0.0000', '?', 'AutoCompressDynamicVLP defines the percentage of local value-list dictionary entries  \nused to determine the number of column partition values allowed in the CPValues list \n(dynamic value-list dictionary) when using local value-list compression  \nNote that this is capped by AutoCompressDynamicVLMax.AutoCompressDynamicVLP has an integer value.  \nThe value must be greater than or equal to 0.  If it is 0 or not set, 10 will be used. \nDefault Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,082', 'AutoCompressDynamicVLMax', 'I', '0.0000', '?', 'AutoCompressDynamicVLMax defines the absolute maximum number of column partition values \nallowed in the CPValues list (dynamic value-list dictionary) when using local value-list compression. \nAutoCompressDynamicVLMax has an integer value.  The value must be greater than or equal to 0.   \nIf it is 0 or not set, 100 will be used. Default Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,083', 'AutoCRMin', 'I', '0.0000', '?', 'AutoCRMin defines the minimum compression ratio needed by an autocompression technique  \nfor it to be considered for a container when it is being autocompressed. \nAutoCRMin has an integer value.  The value must be between 0 and 100.   \nIf it is 0 or not set, 25 will be used. Default Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,084', 'AutoCRDelta1', 'I', '0.0000', '?', 'Following are the Compression Techniques Categories: \n1. Direct on AC Bits & CP Values \n2. Direct on AC Bits & Sequential on CP Values \n3. Sequential on AC Bits & Direct on CP Values \n4. Sequential on AC Bits & CP Values. \nAutoCRDelta1 defines the delta for category 1 autocompression techniques over category  \n2, 3, and 4 autocompression techniques.AutoCRDelta1 has an integer value.  The value must be  \nbetween 0 and 100.  If it is 0 or not set, 25 (indicating 25%) will be used. Default Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,085', 'AutoCRDelta2', 'I', '0.0000', '?', 'AutoCRDelta2 defines the delta for category 2 autocompression techniques over the other  \ncategory 3 and 4 autocompression techniques.AutoCRDelta2 has an integer value.  The value must be  \nbetween 0 and 100.  If it is 0 or not set, 10 (indicating 10%) will be used. Default Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,086', 'AutoCRDelta3', 'I', '0.0000', '?', 'AutoCRDelta3 defines the delta for category 3 autocompression techniques over the category 4  \nautocompression techniques.AutoCRDelta3 has an integer value.  The value must be between  \n0 and 100.  If it is 0 or not set, 10 (indicating 10%) will be used. Default Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,087', 'DeleteCPCR', 'I', '0.0000', '?', 'DeleteCPCR defines the minimum compression ratio for a recompressed container of the delete column \npartition over the previous compressed copy of the container; if the recompressed container does \nmeet this minimum, the previous compressed copy of the container is retained.DeleteCPCR has an \ninteger value.  The value must be between 0 and 100.  If it is 0 or not set, 10 (indicating 10%) \nwill be used. Default Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,088', 'DeleteCPIncrP', 'I', '0.0000', '?', 'DeleteCPIncrP defines the percentage increase for a container"s BR compression 4th argument \n(3-byte unsigned integer) y that occurs when the container is recompressed.  When the number of \n1 bits set in a container exceeds the current value of y, the container is recompressed and y is  \nincreased; that is, y is replaced by the maximum of CEILING(y* (1+DeleteCPIncrP/100)) and 2^24-1.  \nThe container is a container in the delete column partition.DeleteCPIncrP has an integer value.  \nThe value must be greater than or equal to zero.  If it is 0 or not set, 25 (indicating 25%)  \nwill be used. Default Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,096', 'SkipRewrite4JI', 'I', '0.0000', '?', 'To skip qrw rewrite for JI  \n  0 : (Default) do not skip QRW for JI.\n  1 : skip qrw for a specific JI phase.\n  2 : skip qrw for all JI phases .\n '); 
insert into DBC.ConstantDefs values (2, '13,097', 'EnableNoPITemporal', 'I', '0.0000', '?', 'To Enable Temporal Feature with NoPI and Column Partitioned Tables\n 0 : ( Default) Disable Temporal with NoPI and Column Partitioned Tables.\n 1 : Enable Temporal with NoPI and Column Partitioned Tables.\n '); 
insert into DBC.ConstantDefs values (2, '13,100', 'AllowOHJ4DupInnerBaseRel', 'I', '0.0000', '?', 'Allow Outer (Equality) Hash Join for the case the inner base relation is duped. \n 0 : ( Default) Disable OHJ at all the time.\n 1 : Allow OHJ - OHJ will be picked based on the costing.\n '); 
insert into DBC.ConstantDefs values (2, '13,047', 'DisableOJHashJoin', 'I', '0.0000', '?', 'To disable hash join for outer join queries.  \n  0 : (Default) Hash join plan is enabled for outer join queries. \n  1 : Disable hash join plan for outer join queries.\n '); 
insert into DBC.ConstantDefs values (2, '13,048', 'DisableIncJoinHashJoin', 'I', '0.0000', '?', 'To disable inclusion hash join plan.  \n  0 : (Default) Inclusion hash join plan is enabled. \n  1 : Disable inclusion hash join plan.\n '); 
insert into DBC.ConstantDefs values (2, '13,049', 'DisableExcJoinHashJoin', 'I', '0.0000', '?', 'To disable exclusion hash join plan.  \n  0 : (Default) exclusion hash join plan is enabled. \n  1 : Disable exclusion hash join plan.\n '); 
insert into DBC.ConstantDefs values (2, '13,050', 'DisableIncJoinHashJoinDPE', 'I', '0.0000', '?', 'To disable inclusion hash join plan with DPE.  \n  0 : (Default) inclusion hash join plan with DPE is enabled. \n  1 : Disable inclusion hash join plan with DPE.\n '); 
insert into DBC.ConstantDefs values (2, '13,051', 'DisableExcJoinHashJoinDPE', 'I', '0.0000', '?', 'To disable exclusion hash join plan with DPE.  \n  0 : (Default) exclusion hash join plan with DPE is enabled. \n  1 : Disable exclusion hash join plan with DPE.\n '); 
insert into DBC.ConstantDefs values (2, '13,052', 'DisableHashJoinDPE', 'I', '0.0000', '?', 'To disable hash join plan with DPE.  \n  0 : (Default) hash join plan with DPE is enabled. \n  1 : Disable hash join plan with DPE.\n '); 
insert into DBC.ConstantDefs values (2, '13,053', 'DisableCrossTermHashJoin', 'I', '0.0000', '?', 'To disable hash join plan with cross term.  \n  0 : (Default) hash join plan with cross term is enabled. \n  1 : Disable hash join plan with cross term.\n '); 
insert into DBC.ConstantDefs values (2, '13,054', 'DisableHashJoinEnh', 'I', '0.0000', '?', 'To disable hash join enhancements for TD14.0.  \n  0 : (Default) hash join enhancements for TD14.0 are enabled. \n  1 : Disable hash join enhancements for TD14.0.\nThe enhancements include hash join plan for outer joins, semi-joins  \nhash join on fly with DPE and hash join with cross term \n '); 
insert into DBC.ConstantDefs values (2, '13,055', 'DisableAllHashJoinEnh', 'I', '0.0000', '?', 'To disable all hash join enhancements for TD14.0.  \n  0 : (Default) all hash join enhancements for TD14.0 are enabled. \n  1 : Disable all hash join enhancements for TD14.0.\nThe enhancements include hash join plan for outer joins, semi-joins  \nhash join on fly with DPE, hash join with cross term and \nnew hash table system.\n '); 
insert into DBC.ConstantDefs values (2, '17,088', 'DeleteCPInitThr', 'I', '0.0000', '?', 'DeleteCPInitThr defines the initial value for a container"s BR compression 4th argument  \n(3-byte unsigned integer) y.  When the number of 1 bits set in a container exceeds the current \nthreshold value of y, the container is recompressed and y is increased.DeleteCPInitThr has an  \ninteger value.  The value must be greater than or equal to zero.  If it is 0 or not set, 100 \nwill be used. Default Not set. \n '); 
insert into DBC.ConstantDefs values (2, '13,034', 'DR107798OFF', 'I', '0.0000', '?', 'Enables or disables the DR107798 fix. \n  0 (default) - Not disable the DR107798 fix. \n  1           - Disable the DR107798 fix.  \n '); 
insert into DBC.ConstantDefs values (2, '13,040', 'ByPassMaxParseTreeSegs', 'I', '0.0000', '?', 'Enables or disables the ByPassMaxParseTreeSegs. \n  0 (default) - Disable ByPassMaxParseTreeSegs. \n  1           - Enable ByPassMaxParseTreeSegs.  \n '); 
insert into DBC.ConstantDefs values (2, '13,045', 'UseDupElimThreshold', 'I', '0.0000', '?', 'Use DupElimThreshold to control duplicate elimination process\n0: Do not use the threshold (Default)\n1: Use the threshold to stop checking duplicate values after a certain number of values\n '); 
insert into DBC.ConstantDefs values (2, '13,037', 'MinAMPRows4HashPartWithConf', 'I', '10.0000', '?', 'The upper bound of amp rows when Hash Partitioning will be considered with confidence. '); 
insert into DBC.ConstantDefs values (2, '13,038', 'MinAMPRows4HashPartWithoutConf', 'I', '10.0000', '?', 'The upper bound of per amp rows when Hash Partitioning will be considered with no confidence. '); 
insert into DBC.ConstantDefs values (2, '13,039', 'MinPerAMPGroupCnt', 'I', '5.0000', '?', 'The fudge factor when considering Hash Partitioning by considering number of group by values. '); 
insert into DBC.ConstantDefs values (2, '13,062', 'AllowNoConfNJ', 'I', '0.0000', '?', 'Flag to allow nested-rowid join when source is of no confidence.\n0:Disallow nested-rowid join when source is of no confidence.(Default)\n1:Allow nested-rowid join when source is of no confidence.\n '); 
insert into DBC.ConstantDefs values (2, '13,061', 'AllowColAmbiguity', 'I', '0.0000', '?', 'Allow queries which has ambiguty column fields in derived table \n1            -  Allow ambiguity columns \n0(default)   -  Do not allow ambiguity columns  \n '); 
insert into DBC.ConstantDefs values (2, '13,056', 'UseRowkeyOverSlidingWindow', 'I', '0.0000', '?', 'Use UseRowkeyOverSlidingWindow to always choose rowkey joins over sliding window joins\n0: Allow sliding window join over rowkey join (Default)\n1: Force to always choose rowkey join over sliding window join\n '); 
insert into DBC.ConstantDefs values (2, '13,099', 'DisableSelectiveDistinctAndGBRewrites', 'I', '1.0000', '?', 'This flag controls whether to apply Distinct2GB and GB2Distinct on Subqueries.\n0: default, do not disable Distinct2GB and the GB2Distinct for subquery in opt.\n1: disable all.\n2: disable Distinct2GB for outermost select of INS-SEL.\n4: disable GB2Distinct for subquery.\n6: disable Distinct2GB for INS-SEL and GB2Distinct for subquery.\n '); 
insert into DBC.ConstantDefs values (2, '13,089', 'TermConfCheck', 'I', '0.0000', '?', 'This flag controls what applicable terms are used for Constraint Scan NUSI access path.0: All applicable terms are used (Default)\n1: Only applicable terms with at least low-confidence are used\n '); 
insert into DBC.ConstantDefs values (2, '13,091', 'MinStatsTrendStability', 'I', '95.0000', '?', 'The upper bound of Statistics Trend Stability to be considered with confidence. '); 
insert into DBC.ConstantDefs values (2, '13,092', 'MinStatsTrendReliability', 'I', '70.0000', '?', 'The upper bound of Statistics Trend Reliability to be considered with confidence. '); 
insert into DBC.ConstantDefs values (2, '13,093', 'AutoThresholdPercentForStats', 'I', '0.0000', '?', 'Controls the use of THRESHOLD PERCENT option of collect statistics. '); 
insert into DBC.ConstantDefs values (2, '13,094', 'AutoThresholdDaysForStats', 'I', '0.0000', '?', 'Controls the use of THRESHOLD DAYS option of collect statistics. '); 
insert into DBC.ConstantDefs values (2, '13,095', 'AutoSampleStats', 'I', '0.0000', '?', 'Controls the use of SYSTEM SAMPLE option of collect statistics. '); 
insert into DBC.ConstantDefs values (2, '14,000', 'InitTacticalResp1', 'I', '1.0000', '?', 'The value of per-AMP run-time CPU cost in seconds that determines a tactical query. '); 
insert into DBC.ConstantDefs values (2, '14,001', 'InitTacticalResp2', 'I', '2.0000', '?', 'The value of per-AMP run-time CPU cost in seconds that determines a tactical query when it is submitted as HiPriority request. '); 
insert into DBC.ConstantDefs values (2, '14,002', 'InitHighParsingPTThreshold', 'I', '0.1000', '?', 'Threshold percentage of parsing and run-time CPU cost to determine if it is a request which has high parsing cost. '); 
insert into DBC.ConstantDefs values (2, '14,003', 'InitHighParsingRTThreshold', 'I', '1.1000', '?', 'Threshold multiplication factor for the determination of run time benefits for a query that has high parsing cost. '); 
insert into DBC.ConstantDefs values (2, '14,004', 'InitLowParsingRTThreshold', 'I', '1.0000', '?', 'Threshold multiplication factor for the determination of run time benefits for a query that has low parsing cost. '); 
insert into DBC.ConstantDefs values (2, '14,005', 'UseHiPriority', 'I', '1.0000', '?', 'A flag that enables/disables the HiPriority based decisions in the caching algorithm. '); 
insert into DBC.ConstantDefs values (2, '14,006', 'ElapsedTimeThreshold', 'I', '1.0000', '?', 'Threshold multiplication factor by which specific plan should better compared to generic plan execution. '); 
insert into DBC.ConstantDefs values (2, '14,007', 'EstimateCostFilter', 'I', '10.0000', '?', 'Threshold factor by which the estimated cost of a specific plan should be better than the estimated cost of a generic plan. '); 
insert into DBC.ConstantDefs values (2, '14,008', 'CompareEstimates', 'I', '0.0000', '?', 'A flag that enables/disables the estimate based comparisons for deciding between generic and specific plan execution. '); 
insert into DBC.ConstantDefs values (2, '15,001', 'InitInsertNUSICf', 'I', '0', '?', 'Unscaled value of InsertNUSICf '); 
insert into DBC.ConstantDefs values (2, '15,002', 'InitInsertNUSIOv', 'I', '0', '?', 'Unscaled value of InsertNUSIOv '); 
insert into DBC.ConstantDefs values (2, '15,003', 'InitInsertUSICf', 'I', '0', '?', 'Unscaled value of InsertUSICf '); 
insert into DBC.ConstantDefs values (2, '15,004', 'InitInsertUSIOv', 'I', '0', '?', 'Unscaled value of InsertUSIOv '); 
insert into DBC.ConstantDefs values (2, '15,005', 'InitInsert1RowCf', 'I', '0', '?', 'Unscaled value of Insert1RowCf '); 
insert into DBC.ConstantDefs values (2, '15,006', 'InitInsert1RowOv', 'I', '0', '?', 'Unscaled value of Insert1RowOv '); 
insert into DBC.ConstantDefs values (2, '15,007', 'InitInsertIntCf', 'I', '0', '?', 'Unscaled value of InsertIntCf '); 
insert into DBC.ConstantDefs values (2, '15,008', 'InitInsertIntOv', 'I', '0', '?', 'Unscaled value of InsertIntOv '); 
insert into DBC.ConstantDefs values (2, '15,009', 'InitInsertFloatCf', 'I', '0', '?', 'Unscaled value of InsertFloatCf '); 
insert into DBC.ConstantDefs values (2, '15,010', 'InitInsertFloatOv', 'I', '0', '?', 'Unscaled value of InsertFloatOv '); 
insert into DBC.ConstantDefs values (2, '15,011', 'InitInsertByteCf', 'I', '0', '?', 'Unscaled value of InsertByteCf '); 
insert into DBC.ConstantDefs values (2, '15,012', 'InitInsertByteOv', 'I', '0', '?', 'Unscaled value of InsertByteOv '); 
insert into DBC.ConstantDefs values (2, '15,013', 'InitInsertCharCf', 'I', '0', '?', 'Unscaled value of InsertCharCf '); 
insert into DBC.ConstantDefs values (2, '15,014', 'InitInsertCharOv', 'I', '0', '?', 'Unscaled value of InsertCharOv '); 
insert into DBC.ConstantDefs values (2, '15,015', 'InitInsertCharLenCf', 'I', '0', '?', 'Unscaled value of InsertCharLenCf '); 
insert into DBC.ConstantDefs values (2, '15,016', 'InitInsertCharLenOv', 'I', '0', '?', 'Unscaled value of InsertCharLenOv '); 
insert into DBC.ConstantDefs values (2, '15,025', 'InitDeleteUSICf', 'I', '0', '?', 'Unscaled value of DeleteUSICf '); 
insert into DBC.ConstantDefs values (2, '15,026', 'InitDeleteUSIOv', 'I', '0', '?', 'Unscaled value of DeleteUSIOv '); 
insert into DBC.ConstantDefs values (2, '15,027', 'InitDeleteNUSICf', 'I', '0', '?', 'Unscaled value of DeleteNUSICf '); 
insert into DBC.ConstantDefs values (2, '15,028', 'InitDeleteNUSIOv', 'I', '0', '?', 'Unscaled value of DeleteNUSIOv '); 
insert into DBC.ConstantDefs values (2, '15,029', 'InitDeleteRowCf', 'I', '0', '?', 'Unscaled value of DeleteRowCf '); 
insert into DBC.ConstantDefs values (2, '15,030', 'InitDeleteRowOv', 'I', '0', '?', 'Unscaled value of DeleteRowOv '); 
insert into DBC.ConstantDefs values (2, '15,031', 'InitDeleteFBCf', 'I', '0', '?', 'Unscaled value of DeleteFBCf '); 
insert into DBC.ConstantDefs values (2, '15,032', 'InitDeleteFBOv', 'I', '0', '?', 'Unscaled value of DeleteFBOv '); 
insert into DBC.ConstantDefs values (2, '15,050', 'InitMICIUpdateOv', 'I', '0', '?', 'Unscaled value of MICIUpdateOv '); 
insert into DBC.ConstantDefs values (2, '15,051', 'InitUpdt200LowCf', 'I', '0', '?', 'Unscaled value of Updt200LowCf '); 
insert into DBC.ConstantDefs values (2, '15,052', 'InitUpdt200LowOv', 'I', '0', '?', 'Unscaled value of Updt200LowOv '); 
insert into DBC.ConstantDefs values (2, '15,053', 'InitUpdt200HighCf', 'I', '0', '?', 'Unscaled value of Updt200HighCf '); 
insert into DBC.ConstantDefs values (2, '15,054', 'InitUpdt200HighOv', 'I', '0', '?', 'Unscaled value of Updt200HighOv '); 
insert into DBC.ConstantDefs values (2, '15,055', 'InitUpdt1000LowCf', 'I', '0', '?', 'Unscaled value of Updt1000LowCf '); 
insert into DBC.ConstantDefs values (2, '15,056', 'InitUpdt1000LowOv', 'I', '0', '?', 'Unscaled value of Updt1000LowOv '); 
insert into DBC.ConstantDefs values (2, '15,057', 'InitUpdt1000HighCf', 'I', '0', '?', 'Unscaled value of Updt1000HighCf '); 
insert into DBC.ConstantDefs values (2, '15,058', 'InitUpdt1000HighOv', 'I', '0', '?', 'Unscaled value of Updt1000HighOv '); 
insert into DBC.ConstantDefs values (2, '15,059', 'InitUpdateNUSICf', 'I', '0', '?', 'Unscaled value of UpdateNUSICf '); 
insert into DBC.ConstantDefs values (2, '15,060', 'InitUpdateNUSIOv', 'I', '0', '?', 'Unscaled value of UpdateNUSIOv '); 
insert into DBC.ConstantDefs values (2, '15,061', 'InitUpdateUSICf', 'I', '0', '?', 'Unscaled value of UpdateUSICf '); 
insert into DBC.ConstantDefs values (2, '15,062', 'InitUpdateUSIOv', 'I', '0', '?', 'Unscaled value of UpdateUSIOv '); 
insert into DBC.ConstantDefs values (2, '15,063', 'InitUpdt200MaxCf', 'I', '0', '?', 'Unscaled value of Updt200MaxCf '); 
insert into DBC.ConstantDefs values (2, '15,064', 'InitUpdt200MaxOv', 'I', '0', '?', 'Unscaled value of Updt200MaxOv '); 
insert into DBC.ConstantDefs values (2, '15,065', 'InitUpdt1000MaxCf', 'I', '0', '?', 'Unscaled value of Updt1000MaxCf '); 
insert into DBC.ConstantDefs values (2, '15,066', 'InitUpdt1000MaxOv', 'I', '0', '?', 'Unscaled value of Updt1000MaxOv '); 
insert into DBC.ConstantDefs values (2, '15,067', 'InitUpdHighCutPoint', 'I', '0', '?', 'Unscaled value of UpdHighCutPoint '); 
insert into DBC.ConstantDefs values (2, '15,068', 'InitUpdSampleMaxRows', 'I', '0', '?', 'Unscaled value of UpdSampleMaxRows '); 
insert into DBC.ConstantDefs values (2, '15,075', 'InitMergeUSICf', 'I', '0', '?', 'Unscaled value of MergeUSICf '); 
insert into DBC.ConstantDefs values (2, '15,076', 'InitMergeUSIOv', 'I', '0', '?', 'Unscaled value of MergeUSIOv '); 
insert into DBC.ConstantDefs values (2, '15,077', 'InitMerget100Cf', 'I', '0', '?', 'Unscaled value of Merget100Cf '); 
insert into DBC.ConstantDefs values (2, '15,078', 'InitMerget100Ov', 'I', '0', '?', 'Unscaled value of Merget100Ov '); 
insert into DBC.ConstantDefs values (2, '15,079', 'InitMerget200Cf', 'I', '0', '?', 'Unscaled value of Merget200Cf '); 
insert into DBC.ConstantDefs values (2, '15,080', 'InitMerget200Ov', 'I', '0', '?', 'Unscaled value of Merget200Ov '); 
insert into DBC.ConstantDefs values (2, '15,081', 'InitMerget400Cf', 'I', '0', '?', 'Unscaled value of Merget400Cf '); 
insert into DBC.ConstantDefs values (2, '15,082', 'InitMerget400Ov', 'I', '0', '?', 'Unscaled value of Merget400Ov '); 
insert into DBC.ConstantDefs values (2, '15,083', 'InitMerget1000Cf', 'I', '0', '?', 'Unscaled value of Merget1000Cf '); 
insert into DBC.ConstantDefs values (2, '15,084', 'InitMerget1000Ov', 'I', '0', '?', 'Unscaled value of Merget1000Ov '); 
insert into DBC.ConstantDefs values (2, '15,085', 'InitMerget100FBCf', 'I', '0', '?', 'Unscaled value of Merget100FBCf '); 
insert into DBC.ConstantDefs values (2, '15,086', 'InitMerget100FBOv', 'I', '0', '?', 'Unscaled value of Merget100FBOv '); 
insert into DBC.ConstantDefs values (2, '15,087', 'InitMerget200FBCf', 'I', '0', '?', 'Unscaled value of Merget200FBCf '); 
insert into DBC.ConstantDefs values (2, '15,088', 'InitMerget200FBOv', 'I', '0', '?', 'Unscaled value of Merget200FBOv '); 
insert into DBC.ConstantDefs values (2, '15,089', 'InitMerget400FBCf', 'I', '0', '?', 'Unscaled value of Merget400FBCf '); 
insert into DBC.ConstantDefs values (2, '15,090', 'InitMerget400FBOv', 'I', '0', '?', 'Unscaled value of Merget400FBOv '); 
insert into DBC.ConstantDefs values (2, '15,091', 'InitMerget1000FBCf', 'I', '0', '?', 'Unscaled value of Merget1000FBCf '); 
insert into DBC.ConstantDefs values (2, '15,092', 'InitMerget1000FBOv', 'I', '0', '?', 'Unscaled value of Merget1000FBOv '); 
insert into DBC.ConstantDefs values (2, '15,093', 'InitMerge1NUSICf', 'I', '0', '?', 'Unscaled value of Merge1NUSICf '); 
insert into DBC.ConstantDefs values (2, '15,094', 'InitMerge1NUSIOv', 'I', '0', '?', 'Unscaled value of Merge1NUSIOv '); 
insert into DBC.ConstantDefs values (2, '15,101', 'InitMergeUt100Cf', 'I', '0', '?', 'Unscaled value of MergeUt100Cf '); 
insert into DBC.ConstantDefs values (2, '15,102', 'InitMergeUt100Ov', 'I', '0', '?', 'Unscaled value of MergeUt100Ov '); 
insert into DBC.ConstantDefs values (2, '15,103', 'InitMergeUt200Cf', 'I', '0', '?', 'Unscaled value of MergeUt200Cf '); 
insert into DBC.ConstantDefs values (2, '15,104', 'InitMergeUt200Ov', 'I', '0', '?', 'Unscaled value of MergeUt200Ov '); 
insert into DBC.ConstantDefs values (2, '15,105', 'InitMergeUt400Cf', 'I', '0', '?', 'Unscaled value of MergeUt400Cf '); 
insert into DBC.ConstantDefs values (2, '15,106', 'InitMergeUt400Ov', 'I', '0', '?', 'Unscaled value of MergeUt400Ov '); 
insert into DBC.ConstantDefs values (2, '15,107', 'InitMergeUt1000Cf', 'I', '0', '?', 'Unscaled value of MergeUt1000Cf '); 
insert into DBC.ConstantDefs values (2, '15,108', 'InitMergeUt1000Ov', 'I', '0', '?', 'Unscaled value of MergeUt1000Ov '); 
insert into DBC.ConstantDefs values (2, '15,109', 'InitMergeUt100FBCf', 'I', '0', '?', 'Unscaled value of MergeUt100FBCf '); 
insert into DBC.ConstantDefs values (2, '15,110', 'InitMergeUt100FBOv', 'I', '0', '?', 'Unscaled value of MergeUt100FBOv '); 
insert into DBC.ConstantDefs values (2, '15,111', 'InitMergeUt200FBCf', 'I', '0', '?', 'Unscaled value of MergeUt200FBCf '); 
insert into DBC.ConstantDefs values (2, '15,112', 'InitMergeUt200FBOv', 'I', '0', '?', 'Unscaled value of MergeUt200FBOv '); 
insert into DBC.ConstantDefs values (2, '15,113', 'InitMergeUt400FBCf', 'I', '0', '?', 'Unscaled value of MergeUt400FBCf '); 
insert into DBC.ConstantDefs values (2, '15,114', 'InitMergeUt400FBOv', 'I', '0', '?', 'Unscaled value of MergeUt400FBOv '); 
insert into DBC.ConstantDefs values (2, '15,115', 'InitMergeUt1000FBCf', 'I', '0', '?', 'Unscaled value of MergeUt1000FBCf '); 
insert into DBC.ConstantDefs values (2, '15,116', 'InitMergeUt1000FBOv', 'I', '0', '?', 'Unscaled value of MergeUt1000FBOv '); 
insert into DBC.ConstantDefs values (2, '15,117', 'InitMergeU1NUSICf', 'I', '0', '?', 'Unscaled value of MergeU1NUSICf '); 
insert into DBC.ConstantDefs values (2, '15,118', 'InitMergeU1NUSIOv', 'I', '0', '?', 'Unscaled value of MergeU1NUSIOv '); 
insert into DBC.ConstantDefs values (2, '15,125', 'InitMergeDt100Cf', 'I', '0', '?', 'Unscaled value of MergeDt100Cf '); 
insert into DBC.ConstantDefs values (2, '15,126', 'InitMergeDt100Ov', 'I', '0', '?', 'Unscaled value of MergeDt100Ov '); 
insert into DBC.ConstantDefs values (2, '15,127', 'InitMergeDt200Cf', 'I', '0', '?', 'Unscaled value of MergeDt200Cf '); 
insert into DBC.ConstantDefs values (2, '15,128', 'InitMergeDt200Ov', 'I', '0', '?', 'Unscaled value of MergeDt200Ov '); 
insert into DBC.ConstantDefs values (2, '15,129', 'InitMergeDt400Cf', 'I', '0', '?', 'Unscaled value of MergeDt400Cf '); 
insert into DBC.ConstantDefs values (2, '15,130', 'InitMergeDt400Ov', 'I', '0', '?', 'Unscaled value of MergeDt400Ov '); 
insert into DBC.ConstantDefs values (2, '15,131', 'InitMergeDt1000Cf', 'I', '0', '?', 'Unscaled value of MergeDt1000Cf '); 
insert into DBC.ConstantDefs values (2, '15,132', 'InitMergeDt1000Ov', 'I', '0', '?', 'Unscaled value of MergeDt1000Ov '); 
insert into DBC.ConstantDefs values (2, '15,133', 'InitMergeDt100FBCf', 'I', '0', '?', 'Unscaled value of MergeDt100FBCf '); 
insert into DBC.ConstantDefs values (2, '15,134', 'InitMergeDt100FBOv', 'I', '0', '?', 'Unscaled value of MergeDt100FBOv '); 
insert into DBC.ConstantDefs values (2, '15,135', 'InitMergeDt200FBCf', 'I', '0', '?', 'Unscaled value of MergeDt200FBCf '); 
insert into DBC.ConstantDefs values (2, '15,136', 'InitMergeDt200FBOv', 'I', '0', '?', 'Unscaled value of MergeDt200FBOv '); 
insert into DBC.ConstantDefs values (2, '15,137', 'InitMergeDt400FBCf', 'I', '0', '?', 'Unscaled value of MergeDt400FBCf '); 
insert into DBC.ConstantDefs values (2, '15,138', 'InitMergeDt400FBOv', 'I', '0', '?', 'Unscaled value of MergeDt400FBOv '); 
insert into DBC.ConstantDefs values (2, '15,139', 'InitMergeDt1000FBCf', 'I', '0', '?', 'Unscaled value of MergeDt1000FBCf '); 
insert into DBC.ConstantDefs values (2, '15,140', 'InitMergeDt1000FBOv', 'I', '0', '?', 'Unscaled value of MergeDt1000FBOv '); 
insert into DBC.ConstantDefs values (2, '15,141', 'InitMergeD1NUSICf', 'I', '0', '?', 'Unscaled value of MergeD1NUSICf '); 
insert into DBC.ConstantDefs values (2, '15,142', 'InitMergeD1NUSIOv', 'I', '0', '?', 'Unscaled value of MergeD1NUSIOv '); 
insert into DBC.ConstantDefs values (2, '15,150', 'InitCheckRIOv', 'I', '0', '?', 'Unscaled value of CheckRIOv '); 
insert into DBC.ConstantDefs values (2, '15,151', 'InitCheckRICf', 'I', '0', '?', 'Unscaled value of CheckRICf '); 
insert into DBC.ConstantDefs values (2, '15,152', 'InitUpd1RIOv', 'I', '0', '?', 'Unscaled value of Upd1RIOv '); 
insert into DBC.ConstantDefs values (2, '15,153', 'InitUpd1RICf', 'I', '0', '?', 'Unscaled value of Upd1RICf '); 
insert into DBC.ConstantDefs values (2, '15,154', 'InitLocalSortThreshold', 'I', '0', '?', 'Threshold for doing local sort in the global aggregation '); 
insert into DBC.ConstantDefs values (2, '16,001', 'InsertNUSICf', 'C', '0', '?', 'Coefficient of linear term in the NUSI insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,002', 'InsertNUSIOv', 'C', '0', '?', 'Overhead for the inserting NUSI formula '); 
insert into DBC.ConstantDefs values (2, '16,003', 'InsertUSICf', 'C', '0', '?', 'Coefficient of linear term in the USI insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,004', 'InsertUSIOv', 'C', '0', '?', 'Overhead for the inserting USI formula '); 
insert into DBC.ConstantDefs values (2, '16,005', 'Insert1RowCf', 'C', '0', '?', 'Coefficient of linear term in the 1 row insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,006', 'Insert1RowOv', 'C', '0', '?', 'Overhead for the 1 row inserting formula '); 
insert into DBC.ConstantDefs values (2, '16,007', 'InsertIntCf', 'C', '0', '?', 'Coefficient of linear term in the integer insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,008', 'InsertIntOv', 'C', '0', '?', 'Overhead term in the integer insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,009', 'InsertFloatCf', 'C', '0', '?', 'Coefficient of linear term in the float insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,010', 'InsertFloatOv', 'C', '0', '?', 'Overhead term in the float insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,011', 'InsertByteCf', 'C', '0', '?', 'Coefficient of linear term in the byte insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,012', 'InsertByteOv', 'C', '0', '?', 'Overhead term in the byte insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,013', 'InsertCharCf', 'C', '0', '?', 'Coefficient of linear term in the char insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,014', 'InsertCharOv', 'C', '0', '?', 'Overhead term in the char insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,015', 'InsertCharLenCf', 'C', '0', '?', 'Coefficient of linear term in the charlen insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,016', 'InsertCharLenOv', 'C', '0', '?', 'Overhead term in the charlen insert cost formula '); 
insert into DBC.ConstantDefs values (2, '16,025', 'DeleteUSICf', 'C', '0', '?', 'Coefficient of linear term in the USI delete cost formula '); 
insert into DBC.ConstantDefs values (2, '16,026', 'DeleteUSIOv', 'C', '0', '?', 'Overhead cost for deleting a USI row '); 
insert into DBC.ConstantDefs values (2, '16,027', 'DeleteNUSICf', 'C', '0', '?', 'Coefficient of linear term in the NUSI delete cost formula '); 
insert into DBC.ConstantDefs values (2, '16,028', 'DeleteNUSIOv', 'C', '0', '?', 'Overhead cost for deleting a NUSI row '); 
insert into DBC.ConstantDefs values (2, '16,029', 'DeleteRowCf', 'C', '0', '?', 'Coefficient of linear term in the delete cost formula '); 
insert into DBC.ConstantDefs values (2, '16,030', 'DeleteRowOv', 'C', '0', '?', 'Overhead for the row deleting formula '); 
insert into DBC.ConstantDefs values (2, '16,031', 'DeleteFBCf', 'C', '0', '?', 'Coefficient of linear term in the delete cost formula '); 
insert into DBC.ConstantDefs values (2, '16,032', 'DeleteFBOv', 'C', '0', '?', 'Overhead for the row deleting formula '); 
insert into DBC.ConstantDefs values (2, '16,050', 'MICIUpdateOv', 'C', '0', '?', 'CPU cost to update MI & CIs '); 
insert into DBC.ConstantDefs values (2, '16,051', 'Updt200LowCf', 'C', '0', '?', 'Coefficient of linear term in the updating formula for 1Kx200bytes '); 
insert into DBC.ConstantDefs values (2, '16,052', 'Updt200LowOv', 'C', '0', '?', 'Overhead for the updating formula for 1Kx200bytes '); 
insert into DBC.ConstantDefs values (2, '16,053', 'Updt200HighCf', 'C', '0', '?', 'Coefficient of linear term in the updating formula for HighCutPointx200bytes '); 
insert into DBC.ConstantDefs values (2, '16,054', 'Updt200HighOv', 'C', '0', '?', 'Overhead for the updating formula for HighCutPointx200bytes '); 
insert into DBC.ConstantDefs values (2, '16,055', 'Updt1000LowCf', 'C', '0', '?', 'Coefficient of linear term in the updating formula for 1Kx1000bytes '); 
insert into DBC.ConstantDefs values (2, '16,056', 'Updt1000LowOv', 'C', '0', '?', 'Overhead for the updating formula for 1Kx1000bytes '); 
insert into DBC.ConstantDefs values (2, '16,057', 'Updt1000HighCf', 'C', '0', '?', 'Coefficient of linear term in the updating formula for HighCutPointx1000bytes '); 
insert into DBC.ConstantDefs values (2, '16,058', 'Updt1000HighOv', 'C', '0', '?', 'Overhead for the updating formula for HighCutPointx1000bytes '); 
insert into DBC.ConstantDefs values (2, '16,059', 'UpdateNUSICf', 'C', '0', '?', 'Coefficient of linear term in the NUSI update cost formula '); 
insert into DBC.ConstantDefs values (2, '16,060', 'UpdateNUSIOv', 'C', '0', '?', 'Overhead for the updating NUSI formula '); 
insert into DBC.ConstantDefs values (2, '16,061', 'UpdateUSICf', 'C', '0', '?', 'Coefficient of linear term in the USI update cost formula '); 
insert into DBC.ConstantDefs values (2, '16,062', 'UpdateUSIOv', 'C', '0', '?', 'Overhead for the updating USI formula '); 
insert into DBC.ConstantDefs values (2, '16,063', 'Updt200MaxCf', 'C', '0', '?', 'Coefficient of linear term in the updating formula for SampleMaxRowsx200bytes '); 
insert into DBC.ConstantDefs values (2, '16,064', 'Updt200MaxOv', 'C', '0', '?', 'Overhead for the updating formula for SampleMaxRowsx200bytes '); 
insert into DBC.ConstantDefs values (2, '16,065', 'Updt1000MaxCf', 'C', '0', '?', 'Coefficient of linear term in the updating formula for SampleMaxRowsx1000bytes '); 
insert into DBC.ConstantDefs values (2, '16,066', 'Updt1000MaxOv', 'C', '0', '?', 'Overhead for the updating formula for SampleMaxRowsx1000bytes '); 
insert into DBC.ConstantDefs values (2, '16,067', 'UpdHighCutPoint', 'C', '0', '?', 'Update High Cut Point '); 
insert into DBC.ConstantDefs values (2, '16,068', 'UpdSampleMaxRows', 'C', '0', '?', 'Sample Max Rows '); 
insert into DBC.ConstantDefs values (2, '16,075', 'MergeUSICf', 'C', '0', '?', 'Coefficient of linear term for the USI merging formula '); 
insert into DBC.ConstantDefs values (2, '16,076', 'MergeUSIOv', 'C', '0', '?', 'Overhead for the USI merging formula '); 
insert into DBC.ConstantDefs values (2, '16,077', 'Merget100Cf', 'C', '0', '?', 'Coefficient of linear term for the merging 100 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,078', 'Merget100Ov', 'C', '0', '?', 'Overhead for the merging 100 byte rowsize  formula '); 
insert into DBC.ConstantDefs values (2, '16,079', 'Merget200Cf', 'C', '0', '?', 'Coefficient of linear term for the merging 200 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,080', 'Merget200Ov', 'C', '0', '?', 'Overhead for the merging 200 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,081', 'Merget400Cf', 'C', '0', '?', 'Coefficient of linear term for the merging 400 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,082', 'Merget400Ov', 'C', '0', '?', 'Overhead for the merging 400 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,083', 'Merget1000Cf', 'C', '0', '?', 'Coefficient of linear term for the merging 1000 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,084', 'Merget1000Ov', 'C', '0', '?', 'Overhead for the merging 1000 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,085', 'Merget100FBCf', 'C', '0', '?', 'Coefficient of linear term for the merging 100 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,086', 'Merget100FBOv', 'C', '0', '?', 'Overhead for the merging 100 byte rowsize  formula '); 
insert into DBC.ConstantDefs values (2, '16,087', 'Merget200FBCf', 'C', '0', '?', 'Coefficient of linear term for the merging 200 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,088', 'Merget200FBOv', 'C', '0', '?', 'Overhead for the merging 200 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,089', 'Merget400FBCf', 'C', '0', '?', 'Coefficient of linear term for the merging 400 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,090', 'Merget400FBOv', 'C', '0', '?', 'Overhead for the merging 400 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,091', 'Merget1000FBCf', 'C', '0', '?', 'Coefficient of linear term for the merging 1000 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,092', 'Merget1000FBOv', 'C', '0', '?', 'Overhead for the merging 1000 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,093', 'Merge1NUSICf', 'C', '0', '?', 'Coefficient of linear term for the 1NUSI merging formula '); 
insert into DBC.ConstantDefs values (2, '16,094', 'Merge1NUSIOv', 'C', '0', '?', 'Overhead for the 1NUSI merging formula '); 
insert into DBC.ConstantDefs values (2, '16,101', 'MergeUt100Cf', 'C', '0', '?', 'Coefficient of linear term for the merge-updating 100 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,102', 'MergeUt100Ov', 'C', '0', '?', 'Overhead for the merge updating 100 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,103', 'MergeUt200Cf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 200 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,104', 'MergeUt200Ov', 'C', '0', '?', 'Overhead for the merge updating 200 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,105', 'MergeUt400Cf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 400 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,106', 'MergeUt400Ov', 'C', '0', '?', 'Overhead for the merge updating 400 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,107', 'MergeUt1000Cf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 1000 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,108', 'MergeUt1000Ov', 'C', '0', '?', 'Overhead for the merge updating 1000 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,109', 'MergeUt100FBCf', 'C', '0', '?', 'Coefficient of linear term for the merge-updating 100 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,110', 'MergeUt100FBOv', 'C', '0', '?', 'Overhead for the merge updating 100 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,111', 'MergeUt200FBCf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 200 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,112', 'MergeUt200FBOv', 'C', '0', '?', 'Overhead for the merge updating 200 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,113', 'MergeUt400FBCf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 400 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,114', 'MergeUt400FBOv', 'C', '0', '?', 'Overhead for the merge updating 400 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,115', 'MergeUt1000FBCf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 1000 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,116', 'MergeUt1000FBOv', 'C', '0', '?', 'Overhead for the merge updating 1000 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,117', 'MergeU1NUSICf', 'C', '0', '?', 'Coefficient of linear term for the 1NUSI merge updating formula '); 
insert into DBC.ConstantDefs values (2, '16,118', 'MergeU1NUSIOv', 'C', '0', '?', 'Overhead for the 1NUSI merge updating formula '); 
insert into DBC.ConstantDefs values (2, '16,125', 'MergeDt100Cf', 'C', '0', '?', 'Coefficient of linear term for the merge-updating 100 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,126', 'MergeDt100Ov', 'C', '0', '?', 'Overhead for the merge updating 100 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,127', 'MergeDt200Cf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 200 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,128', 'MergeDt200Ov', 'C', '0', '?', 'Overhead for the merge updating 200 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,129', 'MergeDt400Cf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 400 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,130', 'MergeDt400Ov', 'C', '0', '?', 'Overhead for the merge updating 400 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,131', 'MergeDt1000Cf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 1000 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,132', 'MergeDt1000Ov', 'C', '0', '?', 'Overhead for the merge updating 1000 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,133', 'MergeDt100FBCf', 'C', '0', '?', 'Coefficient of linear term for the merge-updating 100 byte rowsize formula '); 
insert into DBC.ConstantDefs values (2, '16,134', 'MergeDt100FBOv', 'C', '0', '?', 'Overhead for the merge updating 100 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,135', 'MergeDt200FBCf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 200 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,136', 'MergeDt200FBOv', 'C', '0', '?', 'Overhead for the merge updating 200 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,137', 'MergeDt400FBCf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 400 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,138', 'MergeDt400FBOv', 'C', '0', '?', 'Overhead for the merge updating 400 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,139', 'MergeDt1000FBCf', 'C', '0', '?', 'Coefficient of linear term for the merge updating 1000 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,140', 'MergeDt1000FBOv', 'C', '0', '?', 'Overhead for the merge updating 1000 byte rowsize formula - FB '); 
insert into DBC.ConstantDefs values (2, '16,141', 'MergeD1NUSICf', 'C', '0', '?', 'Coefficient of linear term for the 1NUSI merge updating formula '); 
insert into DBC.ConstantDefs values (2, '16,142', 'MergeD1NUSIOv', 'C', '0', '?', 'Overhead for the 1NUSI merge updating formula '); 
insert into DBC.ConstantDefs values (2, '16,150', 'CheckRIOv', 'C', '0', '?', 'Overhead for the RI checking formula '); 
insert into DBC.ConstantDefs values (2, '16,151', 'CheckRICf', 'C', '0', '?', 'Coefficient of linear term for the RI checking formula '); 
insert into DBC.ConstantDefs values (2, '16,152', 'Upd1RIOv', 'C', '0', '?', 'Overhead for the updating with 1 RI checking formula '); 
insert into DBC.ConstantDefs values (2, '16,153', 'Upd1RICf', 'C', '0', '?', 'Coefficient of linear term for the updating with 1 RI checking formula '); 
insert into DBC.ConstantDefs values (2, '16,154', 'LocalSortThreshold', 'C', '0', '?', 'Coefficient for skipping the local sort in SUM step '); 
