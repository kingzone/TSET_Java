"ProfileTypeId","ConstId","ConstName","ConstCat","ConstVal","ConstString","ConstDesc"
"1","1","OptBitInst                                                      ","I","33","","Defines the path length to check (or set) bit map given a row ID. Value in instructions/operation."
"1","2","OptBMAndRowInst                                                 ","I","98500","","Defines the path length to AND two bit maps, each the size of a single bitmap row. Current size of bitmap row is 16KB. Value in instructions/operation."
"1","3","OptCharFieldInst                                                ","I","261","","Defines the path length to build a one character field. Value in instructions/field."
"1","4","OptIndexBlockSize                                               ","I","49152","","Assumed block size for index subtable IOs. Value is in bytes."
"1","5","OptMaxBldKeySize                                                ","I","1000","","Defines the maximum size of a key that can be built for a nested join. Value is in bytes."
"1","6","OptMaxRowIdSIndex                                               ","I","8030","","Defines the average number of row ids in a secondary index row."
"1","7","OptNumFieldInst                                                 ","I","37","","Defines the path length to build one numeric field. Value in instructions/field."
"1","8","OptOutputRowInst                                                ","I","1641","","Defines the path length of the overhead to build an output row. Value in instructions/row."
"1","9","OptOvhdOfRowCompInst                                            ","I","242","","Defines the path length of the row comparison overhead during sorting. Value in instructions/operation."
"1","10","OptRedistributeInst                                             ","I","73389","","Defines the path length for redistributing a row. Value in instructions/row."
"1","11","OptRowAccessInst                                                ","I","409","","Defines the path length for accessing a row in memory. Value in instructions/row."
"1","12","OptRowIdInst                                                    ","I","27139","","Defines the path length for accessing a row thru a RowID list. Value in instructions/row."
"1","13","OptRowidSize                                                    ","I","12","","Defines the size of each entry in a RowID list. Value is in bytes"
"1","14","OptSpoolBlockSize                                               ","I","131072","","Assumed block size for spool file IOs. Value is in bytes."
"1","15","OptSynonymInst                                                  ","I","27139","","Defines the path length for accessing a row by using an index. Value in instructions/synonym/row."
"1","16","OptTableBlockSize                                               ","I","49152","","Assumed block size for table IOs. Value is in bytes."
"1","17","ArrayRead4k                                                     ","I","1120","","Disk array access rate, number of 4k (bytes) block reads per second."
"1","18","ArrayRead8k                                                     ","I","1020","","Disk array access rate, number of 8k (bytes) block reads per second."
"1","19","ArrayRead16k                                                    ","I","920","","Disk array access rate, number of 16k (bytes) block reads per second."
"1","20","ArrayRead32k                                                    ","I","775","","Disk array access rate, number of 32k (bytes) block reads per second."
"1","21","ArrayRead64k                                                    ","I","540","","Disk array access rate, number of 64k (bytes) block reads per second."
"1","22","ArrayRead128k                                                   ","I","325","","Disk array access rate, number of 128k (bytes) block reads per second."
"1","23","ArrayWrite4k                                                    ","I","740","","Disk array access rate, number of 4k (bytes) block writes per second."
"1","24","ArrayWrite8k                                                    ","I","650","","Disk array access rate, number of 8k (bytes) block writes per second."
"1","25","ArrayWrite16k                                                   ","I","560","","Disk array access rate, number of 16k (bytes) block writes per second."
"1","26","ArrayWrite32k                                                   ","I","445","","Disk array access rate, number of 32k (bytes) block writes per second."
"1","27","ArrayWrite64k                                                   ","I","290","","Disk array access rate, number of 64k (bytes) block writes per second."
"1","28","ArrayWrite128k                                                  ","I","170","","Disk array access rate, number of 128k (bytes) block writes per second."
"1","29","Mono0Bytes                                                      ","I","100000","","Network access rate, number of 0 byte messages to a single node per second."
"1","30","Mono100Bytes                                                    ","I","91220","","Network access rate, number of 100 byte messages to a single node per second."
"1","31","Mono400Bytes                                                    ","I","72201","","Network access rate, number of 400 byte messages to a single node per second."
"1","32","Mono1600Bytes                                                   ","I","39369","","Network access rate, number of 1600 byte messages to a single node per second."
"1","33","Mono6400Bytes                                                   ","I","13966","","Network access rate, number of 6400 byte messages to a single node per second."
"1","34","Mono25600Bytes                                                  ","I","3900","","Network access rate, number of 25600 byte messages to a single node per second."
"1","35","Multi0Bytes                                                     ","I","100000","","Network access rate, number of 0 byte messages to multiple nodes (broadcast) per second."
"1","36","Multi100Bytes                                                   ","I","91220","","Network access rate, number of 100 byte messages to multiple nodes (broadcast) per second."
"1","37","Multi400Bytes                                                   ","I","72201","","Network access rate, number of 400 byte messages to multiple nodes (broadcast) per second."
"1","38","Multi1600Bytes                                                  ","I","39369","","Network access rate, number of 1600 byte messages to multiple nodes (broadcast) per second."
"1","39","Multi6400Bytes                                                  ","I","13966","","Network access rate, number of 6400 byte messages to multiple nodes (broadcast) per second."
"1","40","Multi25600Bytes                                                 ","I","3900","","Network access rate, number of 25600 byte messages to multiple nodes (broadcast) per second."
"1","41","OptRowAccessCost                                                ","C","","","The CPU cost of accessing a row in memory. Estimated number of milliseconds."
"1","42","OptOutputRowCost                                                ","C","","","The CPU overhead cost for building an output row. Estimated number of milliseconds."
"1","43","OptRedistributeCost                                             ","C","","","The CPU cost of redistributing a row. Estimated number of milliseconds."
"1","44","OptSynonymCost                                                  ","C","","","The CPU cost of accessing a row by using an index. Estimated number of milliseconds."
"1","45","OptRowIDCost                                                    ","C","","","The CPU cost of accessing a row thru a RowID list. Estimated number of milliseconds."
"1","46","OptBMAndRowCost                                                 ","C","","","The CPU cost to AND two bit map rows of 16KB each. The bitmap consists of multiple bitmap rows. Estimated number of milliseconds."
"1","47","OptBitCost                                                      ","C","","","The CPU cost to check or set bit map given a row ID. Estimated number of milliseconds."
"1","48","OptCharFieldCost                                                ","C","","","The CPU cost of building a one character field. Estimated number of milliseconds."
"1","49","OptNumFieldCost                                                 ","C","","","The CPU cost of building a single numeric field. Estimated number of milliseconds."
"1","50","OptOvhdOfRowCompCost                                            ","C","","","The CPU cost of a sort row comparison. Estimated number of milliseconds."
"1","51","OptBMWriteRowCost                                               ","C","","","The IO cost to write and then read a bit map row of 16KB to the spool. Estimated number of milliseconds."
"1","52","OptTableReadRate                                                ","C","","","Disk array read access rate for a table. Number of table block reads per second at assumed block size."
"1","53","OptSpoolReadRate                                                ","C","","","Disk array read access rate for a spool. Number of spool block reads per second at assumed block size."
"1","54","OptIndexReadRate                                                ","C","","","Disk array read access rate for an index. Number of index block reads per second at assumed block size."
"1","55","OptTableWriteRate                                               ","C","","","Disk array write access rate for a table. Number of table block writes per second at assumed block size."
"1","56","OptSpoolWriteRate                                               ","C","","","Disk array write access rate for a spool. Number of spool block writes per second at assumed block size."
"1","57","OptIndexWriteRate                                               ","C","","","Disk array write access rate for an index. Number of index block writes per second at assumed block size."
"1","58","OptByNetRedOvhd                                                 ","C","","","Defines the network row redistribution overhead cost, point-to-point message. Estimated number of milliseconds."
"1","59","OptByNetRedCost                                                 ","C","","","Defines the network row redistribution cost per byte, point-to-point message. Estimated number of milliseconds."
"1","60","OptByNetDupOvhd                                                 ","C","","","Defines the network row duplication overhead cost,  broadcast message. Estimated number of milliseconds."
"1","61","OptByNetDupCost                                                 ","C","","","Defines the network row duplication cost per byte,  broadcast message. Estimated number of milliseconds."
"1","62","OptCPUWeight                                                    ","I","1","","CPU cost weighting factor, 1.0 is normal. Larger values increase this factor's weight relative to others at 1.0."
"1","63","OptIOWeight                                                     ","I","1","","IO cost weighting factor, 1.0 is normal. Larger values increase this factor's weight relative to others at 1.0."
"1","64","OptNetWeight                                                    ","I","1","","Network cost weighting factor, 1.0 is normal. Larger values increase this factor's weight relative to others at 1.0."
"1","65","ApplySpoolLimit                                                 ","I","0","","Apply spool space limit heuristics? 0=No, 1=Yes"
"1","66","UseActualBlockSize                                              ","I","0","","Use actual block size for IO cost? 0=No, 1=Yes"
"1","67","NumMipsPerCpu                                                   ","I","14","","CPU MIPS (million Cost instructions per second) rating"
"1","68","NumCpusPerNode                                                  ","I","4","","Number of CPUs per node"
"1","69","NumAmpsPerNode                                                  ","I","15","","Number of AMPs per node"
"1","70","NumNodesPerClique                                               ","I","2","","Number of nodes per clique"
"1","71","NumArrayPerClique                                               ","I","1","","Number of disk arrays per clique "
"1","72","NumNodesTotal                                                   ","I","2","","Number of nodes in the (TPA) system"
"1","73","SpoolLimitPercent                                               ","I","100","","Percent of User Allocated Spool Space that is excessive. In units of 1%."
"1","74","NumNodesPerDiskArray                                            ","C","","","Number of nodes per disk array"
"1","75","CPUScale                                                        ","C","","","Conversion factor from path length to path time in milliseconds"
"1","76","DAScale                                                         ","C","","","Conversion factor from array throughput to per-node array throughput"
"1","77","NumAmpsPerCPU                                                   ","C","","","Number of AMPs per CPU"
"1","3002","GroupAMPPISampling                                              ","I","0","","Determines the number of AMPs to be sampled for getting row estimates of a table. \n  0 (default) - Single AMP sampling \n  2 .. 4      - Two AMP sampling \n  5           - Five AMP sampling \n  6           - Node level sampling \n  7           - All AMP sampling \n  Used only when RevertEstimationLogic == 0 \n"
"1","3003","LegacyJoinCardDefault                                           ","I","1","","Enable legacy join cardinality default when no demographics on join columns \nare available. \n  0           - Use new cardinality formulas. \n  1 (default) - Fall back to legacy formulas. \n"
"1","3004","LIKEEstPartialIntRatio                                          ","I","0.5","","The default ratio for calculating the rows selected  in a partially covered \ninterval by LIKE predicates of ""abc%""- pattern. \n  Valid Range: 0 - 1 \n  Default: 0.5 \n"
"1","3005","RASHistDeviationPct                                             ","I","10","","Determines the allowable percentage deviation between Random AMP Sample (RAS) \nand statistics histogram.  If the deviation exceeds this value, then statistics \nare assumed to be stale and are overridden by RAS. However, Histgrams are still \nused for selectivity estimations and the estimations gets extrapolated. \n  Valid Range: >= 0 \n  Default: 10 \nSetting this to 0 causes RAS to bypass the Histogram all the time.  Used only when \nRevertEstimationLogic == 0 and (ExtrapolateStatistics == 0 or  \nExtrapolateStatistics == 2). \n"
"1","3006","RevertEstimationLogic                                           ","I","1","","Flag to revert to pre-12.0 cardinality/selectivity estimation logic \n  0           - Use new cardinality/selectivity estimation logic \n  1 (default) - Use pre-12.0 cardinality/selectivity estimation logic \n"
"1","3008","ConstrScanAxPath                                                ","I","1","","Controls enabling/disabling the new constraint scan access path. \n  0           - Enable for aggregation only \n  1 (default) - Disable. \n  2           - Enable for aggregation and retrieval (not available yet) \n  Used only when RevertEstimationLogic == 0 \n"
"1","3009","ocsDebug                                                        ","I","1","","Determines the action to be taken if optimizer sanity checks of demographic or costing \ninformation fails: \n  0           - Quiet mode.  Fall back to default demographic or cost value. \n  1           - Parser crash with snapshot dump. \n  2 (default) - Log occurance in the event log and fall back to default value. \n  3           - First 2 occurances, generate a snapshot dump and log all occurance \n                in the event log and fall back to default value. \n"
"1","3010","SoftUniquePct                                                   ","I","95","","If the uniqueness of a column is more that this percent, it is assumed to be \na rolling column and gets qualified for distinct values or rows extrapolation if \nthe statistics are determined to be stale. \n  Valid Range: 0 - 100 \n  Default: 95 \nSetting this to 0 disables extrapolations.  Used only when RevertEstimationLogic == 0 \nand (ExtrapolateStatistics == 0 or ExtrapolateStatistics == 2). \n"
"1","3012","MaxStatsInterval                                                ","I","100","","Maximum number of statistics intervals that are allowed. \n  Valid Range: 1 - 240 \n  Default: 100 \n"
"1","3013","ExtrapolateStatistics                                           ","I","1","","Flag to enable/disable extrapolating demographics such as unique values or \nrows when stale statistics are detected. \n  0           - Enable extrapolation \n  1 (default) - Disable extrapolation \n  2           - Enable extrapolation by honoring single-Amp sampling all the time. \n  10          - Enable unconditional extrapolation \n"
"1","3014","EstWithSingleRowOpt                                             ","I","0","","If a table has a single row access via a UPI or USI, this flag determines whether \nor not the optimizer can retrieve this row to derive more accurate estimates. \n  0  (default) - Disable this optimization. \n  1            - Enable this optimization. \n  Used only when RevertEstimationLogic == 0 \n"
"1","3015","EnableSessLevelDrvStats                                         ","I","0","","Flag to determine whether or not to allow session level derived statistics for \nglobal and volatile tables. \n  0  (default) - Disallow session level derived statistics. \n  1            - Enable these derived statistics. \n  Used only when RevertEstimationLogic == 0 \n"
"1","3016","AssumedPIUniquePct                                              ","I","75","","When no statistics are available on a NUPI, this is the assumed uniqueness. \n  Valid Range: 50 - 100 \n  Default: 75 \n  Used only when RevertEstimationLogic == 0 \n"
"1","3020","JoinCardSkewAdj                                                 ","I","0","","Enables or disables join cardinality adjustment based on skew. \n  0 (default) - Disable adjustment. \n  1           - Enable adjustment.  \n"
"1","3021","RASHistAbsDeviation                                             ","I","10000","","Determines the allowable absolute deviation of rows between Random AMP Sample (RAS) \nand statistics histogram.  If the deviation exceeds this value, then statistics \nare assumed to be stale and are overridden by RAS. However, Histgrams are still \nused for selectivity estimations and the estimations gets extrapolated. \n  Valid Range: >= 0 \n  Default: 10,000 rows \nSetting this to 0 causes disables this check.  Used only when  \nRevertEstimationLogic == 0 and (ExtrapolateStatistics == 0 or \nExtrapolateStatistics == 2). \n"
"1","3022","AggrEstCapPct                                                   ","I","75","","Aggregate estimations cap percentage when no stats are found on the grouping columns. \n  Default is 75%. Valid Range 1 - 100 \n"
"1","4012","nonestedjoin                                                    ","I","0","","to disable nested join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n"
"1","3061","AllowColAmbiguity                                               ","I","0","","Allow queries which has ambiguty column fields in derived table \n1            -  Allow ambiguity columns \n0(default)   -  Do not allow ambiguity columns  \n"
"1","3041","TempMemPoolThreshold4LTSTJ                                      ","I","200","","Decide when to call jplan with temporary memory pools from ltst join planning. \n"
"1","4008","nosattc                                                         ","I","0","","to disable SAT-TC feature  0 (default)- Disable this optimization. \n  1          - Enable this optimization. \n"
"1","4013","noinner                                                         ","I","0","","indicate no inner join  0 (default)- Disable this optimization. \n  1          - Enable this optimization. \n"
"1","4063","nopredsimpl                                                     ","I","0","","to disable PREDICATE SIMPLIFICATION feature  0 (default)- Disable this optimization. \n  1          - Enable this optimization. \n"
"1","3120","DisableWhiteningWhileErrChk                                     ","I","0","","to disable whitening of code while ErrChkRewrite rule  0 (default)- Disable this optimization. \n  1          - Enable this optimization. \n"
"1","3031","NUSIDelCtrlPct                                                  ","I","0","","Flag to control the NUSI path used for Delete operation.\ \n  Valid Range: 1 - 100% \n  Default: 0% \n"
"1","3034","DR107798OFF                                                     ","I","0","","Enables or disables the DR107798 fix. \n  0 (default) - Not disable the DR107798 fix. \n  1           - Disable the DR107798 fix.  \n"
"1","3046","PartialInListSel                                                ","I","0","","Decide whether to use all values or one value while estimating qualified rows from IN clause. \n"
"1","3062","AllowNoConfNJ                                                   ","I","0","","Flag to allow nested-rowid join when source is of no confidence.\n0:Disallow nested-rowid join when source is of no confidence.(Default)\n1:Allow nested-rowid join when source is of no confidence.\n"
"1","3090","DisableSelectiveDistinctAndGBRewrites                           ","I","1","","This flag controls whether to apply Distinct2GB and GB2Distinct on Subqueries.\n0: default, do not disable Distinct2GB and the GB2Distinct for subquery in opt.\n1: disable all.\n2: disable Distinct2GB for outermost select of INS-SEL.\n4: disable GB2Distinct for subquery.\n6: disable Distinct2GB for INS-SEL and GB2Distinct for subquery.\n"
"2","13096","SkipRewrite4JI                                                  ","I","0","","To skip qrw rewrite for JI  \n  0 : (Default) do not skip QRW for JI.\n  1 : skip qrw for a specific JI phase.\n  2 : skip qrw for all JI phases .\n"
"2","10001","OptProperties                                                   ","I","","","ConstString field contains properties definition string."
"2","10002","OptIndexBlockSize                                               ","I","49152","","Assumed block size for index subtable IOs. Value is in bytes."
"2","10003","OptMaxBldKeySize                                                ","I","1000","","Defines the maximum size of a key that can be built for a nested join. Value is in bytes."
"2","10004","OptMaxRowIdSIndex                                               ","I","8030","","Defines the average number of row ids in a secondary index row."
"2","10005","OptRowidSize                                                    ","I","12","","Defines the size of each entry in a RowID list. Value is in bytes"
"2","10006","OptSpoolBlockSize                                               ","I","131072","","Assumed block size for spool file IOs. Value is in bytes."
"2","10007","OptTableBlockSize                                               ","I","49152","","Assumed block size for table IOs. Value is in bytes."
"2","10008","ArrayRead4k                                                     ","I","1120","","Disk array access rate, number of 4k (bytes) block reads per second."
"2","10009","ArrayRead8k                                                     ","I","1020","","Disk array access rate, number of 8k (bytes) block reads per second."
"2","10010","ArrayRead16k                                                    ","I","920","","Disk array access rate, number of 16k (bytes) block reads per second."
"2","10011","ArrayRead32k                                                    ","I","775","","Disk array access rate, number of 32k (bytes) block reads per second."
"2","10012","ArrayRead64k                                                    ","I","540","","Disk array access rate, number of 64k (bytes) block reads per second."
"2","10013","ArrayRead128k                                                   ","I","325","","Disk array access rate, number of 128k (bytes) block reads per second."
"2","10014","ArrayWrite4k                                                    ","I","740","","Disk array access rate, number of 4k (bytes) block writes per second."
"2","10015","ArrayWrite8k                                                    ","I","650","","Disk array access rate, number of 8k (bytes) block writes per second."
"2","10016","ArrayWrite16k                                                   ","I","560","","Disk array access rate, number of 16k (bytes) block writes per second."
"2","10017","ArrayWrite32k                                                   ","I","445","","Disk array access rate, number of 32k (bytes) block writes per second."
"2","10018","ArrayWrite64k                                                   ","I","290","","Disk array access rate, number of 64k (bytes) block writes per second."
"2","10019","ArrayWrite128k                                                  ","I","170","","Disk array access rate, number of 128k (bytes) block writes per second."
"2","10020","Mono0Bytes                                                      ","I","100000","","Network access rate, number of 0 byte messages to a single node per second."
"2","10021","Mono100Bytes                                                    ","I","91220","","Network access rate, number of 100 byte messages to a single node per second."
"2","10022","Mono400Bytes                                                    ","I","72201","","Network access rate, number of 400 byte messages to a single node per second."
"2","10023","Mono1600Bytes                                                   ","I","39369","","Network access rate, number of 1600 byte messages to a single node per second."
"2","10024","Mono6400Bytes                                                   ","I","13966","","Network access rate, number of 6400 byte messages to a single node per second."
"2","10025","Mono25600Bytes                                                  ","I","3900","","Network access rate, number of 25600 byte messages to a single node per second."
"2","10026","Multi0Bytes                                                     ","I","100000","","Network access rate, number of 0 byte messages to multiple nodes (broadcast) per second."
"2","10027","Multi100Bytes                                                   ","I","91220","","Network access rate, number of 100 byte messages to multiple nodes (broadcast) per second."
"2","10028","Multi400Bytes                                                   ","I","72201","","Network access rate, number of 400 byte messages to multiple nodes (broadcast) per second."
"2","10029","Multi1600Bytes                                                  ","I","39369","","Network access rate, number of 1600 byte messages to multiple nodes (broadcast) per second."
"2","10030","Multi6400Bytes                                                  ","I","13966","","Network access rate, number of 6400 byte messages to multiple nodes (broadcast) per second."
"2","10031","Multi25600Bytes                                                 ","I","3900","","Network access rate, number of 25600 byte messages to multiple nodes (broadcast) per second."
"2","10032","OptCPUWeight                                                    ","I","1","","CPU cost weighting factor, 1.0 is normal. Larger values increase this factor's weight relative to others at 1.0."
"2","10033","OptIOWeight                                                     ","I","1","","IO cost weighting factor, 1.0 is normal. Larger values increase this factor's weight relative to others at 1.0."
"2","10034","OptNetWeight                                                    ","I","1","","Network cost weighting factor, 1.0 is normal. Larger values increase this factor's weight relative to others at 1.0."
"2","10035","ApplySpoolLimit                                                 ","I","0","","Apply spool space limit heuristics? 0=No, 1=Yes"
"2","10036","UseActualBlockSize                                              ","I","1","","Use actual block size for IO cost? 0=No, 1=Yes"
"2","10037","NumMipsPerCpu                                                   ","I","14","","CPU MIPS (million Cost instructions per second) rating"
"2","10038","NumCpusPerNode                                                  ","I","4","","Number of CPUs per node"
"2","10039","NumAmpsPerNode                                                  ","I","15","","Number of AMPs per node"
"2","10040","NumNodesPerClique                                               ","I","2","","Number of nodes per clique"
"2","10041","NumArrayPerClique                                               ","I","1","","Number of disk arrays per clique "
"2","10042","NumNodesTotal                                                   ","I","2","","Number of nodes in the (TPA) system"
"2","10043","SpoolLimitPercent                                               ","I","100","","Percent of User Allocated Spool Space that is excessive. In units of 1%."
"2","10060","OptBitInst                                                      ","I","33","","Defines the path length to check (or set) bit map given a row ID. Value in instructions/operation."
"2","10061","OptBMAndRowInst                                                 ","I","98500","","Defines the path length to AND two bit maps, each the size of a single bitmap row. Current size of bitmap row is 16KB. Value in instructions/operation."
"2","10062","OptCharFieldInst                                                ","I","261","","Defines the path length to build a one character field. Value in instructions/field."
"2","10063","OptNumFieldInst                                                 ","I","37","","Defines the path length to build one numeric field. Value in instructions/field."
"2","10064","OptOutputRowInst                                                ","I","1641","","Defines the path length of the overhead to build an output row. Value in instructions/row."
"2","10065","OptOvhdOfRowCompInst                                            ","I","242","","Defines the path length of the row comparison overhead during sorting. Value in instructions/operation."
"2","10066","OptRedistributeInst                                             ","I","73389","","Defines the path length for redistributing a row. Value in instructions/row."
"2","10067","OptRowAccessInst                                                ","I","409","","Defines the path length for accessing a row in memory. Value in instructions/row."
"2","10068","OptRowIdInst                                                    ","I","27139","","Defines the path length for accessing a row thru a RowID list. Value in instructions/row."
"2","10069","OptSynonymInst                                                  ","I","27139","","Defines the path length for accessing a row by using an index. Value in instructions/synonym/row."
"2","10100","InitBlockProcessOv                                              ","I","","","Unscaled value of BlockProcessOv"
"2","10101","InitBlockProcessCf                                              ","I","","","Unscaled value of BlockProcessCf"
"2","10102","InitAccessRowOv1                                                ","I","","","Unscaled value of AccessRowOv1"
"2","10103","InitAccessRowCf1                                                ","I","","","Unscaled value of AccessRowCf1"
"2","10104","InitAccessRowBd1                                                ","I","","","Unscaled value of AccessRowBd1"
"2","10105","InitAccessRowOv2                                                ","I","","","Unscaled value of AccessRowOv2"
"2","10106","InitAccessRowCf2                                                ","I","","","Unscaled value of AccessRowCf2"
"2","10107","InitRowDupOv1                                                   ","I","","","Unscaled value of RowDupOv1"
"2","10108","InitRowDupCf1                                                   ","I","","","Unscaled value of RowDupCf1"
"2","10109","InitRowDupBd1                                                   ","I","","","Unscaled value of RowDupBd1"
"2","10110","InitRowDupOv2                                                   ","I","","","Unscaled value of RowDupOv2"
"2","10111","InitRowDupCf2                                                   ","I","","","Unscaled value of RowDupCf2"
"2","10112","InitRowRedistOv                                                 ","I","","","Unscaled value of RowRedistOv"
"2","10113","InitRowRedistCf                                                 ","I","","","Unscaled value of RowRedistCf"
"2","10114","InitSortBufSize                                                 ","I","","","Unscaled value of SortBufSize"
"2","10115","InitMergeSortOv                                                 ","I","","","Unscaled value of MergeSortOv"
"2","10116","InitMergeSortCf                                                 ","I","","","Unscaled value of MergeSortCf"
"2","10117","InitAggrCacheHitOv                                              ","I","","","Unscaled value of AggrCacheHitOv"
"2","10118","InitAggrCacheHitCf                                              ","I","","","Unscaled value of AggrCacheHitCf"
"2","10119","InitAggrCacheMissOv                                             ","I","","","Unscaled value of AggrCacheMissOv"
"2","10120","InitAggrCacheMissCf                                             ","I","","","Unscaled value of AggrCacheMissCf"
"2","10121","InitPIRowAccessCo                                               ","I","","","Unscaled value of PIRowAccessCo"
"2","10122","InitPIOvhdCo                                                    ","I","","","Unscaled value of NUPIOvhdC0"
"2","10123","InitUSIOvhdCo                                                   ","I","","","Unscaled value of USIOvhdCo"
"2","10124","InitNUSIOvhdOv                                                  ","I","","","Unscaled value of NUSIOvhdOv"
"2","10125","InitNUSIOvhdCf                                                  ","I","","","Unscaled value of NUSIOvhdCf"
"2","10126","InitBitMapBuildOvhdOv                                           ","I","","","Unscaled value of BitMapBuildOvhdOv"
"2","10127","InitBitMapBuildOvhdCf                                           ","I","","","Unscaled value of BitMapBuildOvhdCf"
"2","10128","InitBitMapBuildCf                                               ","I","","","Unscaled value of BitMapBuildCf"
"2","10129","InitBitMapCheckOv                                               ","I","","","Unscaled value of BitMapCheckOv"
"2","10130","InitBitMapCheckCf                                               ","I","","","Unscaled value of BitMapCheckCf"
"2","10131","InitBitMapWriteReadOv                                           ","I","","","Unscaled value of BitMapWriteReadOv"
"2","10132","InitBitMapWriteReadCf                                           ","I","","","Unscaled value of BitMapWriteReadCf"
"2","10133","InitRowID2BitMapOvhdOv                                          ","I","","","Unscaled value of RowID2BitMapOvhdOv"
"2","10134","InitRowID2BitMapOvhdCf                                          ","I","","","Unscaled value of RowID2BitMapOvhdCf"
"2","10135","InitRowID2BitMapCf                                              ","I","","","Unscaled value of RowID2BitMapCf"
"2","10136","InitSpoolWriteI4Co                                              ","I","","","Unscaled value of SpoolWriteI4Co"
"2","10137","InitSpoolWriteFloatCo                                           ","I","","","Unscaled value of SpoolWriteFloatCo"
"2","10138","InitSpoolWriteRowOv                                             ","I","","","Unscaled value of SpoolWriteRowOv"
"2","10139","InitSpoolWriteByteOv                                            ","I","","","Unscaled value of SpoolWriteByteOv"
"2","10140","InitSpoolWriteByteCf                                            ","I","","","Unscaled value of SpoolWriteByteCf"
"2","10141","CIBlockSize                                                     ","I","","","Cylinder index block size in bytes"
"2","10142","CylinderSize                                                    ","I","","","Cylinder size in bytes"
"2","10143","CylinderFillFactor                                              ","I","","","Cylinder fill factor (0.75 implies 3/4 full)"
"2","10144","InitCPUScale                                                    ","I","","","Calibration platform CPUScale cost parameter value"
"2","10145","InitAddDateCo                                                   ","I","","","Unscaled value of AddDateCo"
"2","10146","InitAddTimeCo                                                   ","I","","","Unscaled value of AddTimeCo"
"2","10147","InitAddTimeStampCo                                              ","I","","","Unscaled value of AddTimeStampCo"
"2","10148","InitAddDecimalCo                                                ","I","","","Unscaled value of AddDecimalCo"
"2","10149","InitAddRealCo                                                   ","I","","","Unscaled value of AddRealCo"
"2","10150","InitAddIntegerCo                                                ","I","","","Unscaled value of AddIntegerCo"
"2","10151","InitAddIntervalCo                                               ","I","","","Unscaled value of AddIntervalCo"
"2","10152","InitAddInteger64Co                                              ","I","","","Unscaled value of AddInteger64Co"
"2","10153","InitSubstIntervalCo                                             ","I","","","Unscaled value of SubstIntervalCo"
"2","10154","InitMultDecimalCo                                               ","I","","","Unscaled value of MultDecimalCo"
"2","10155","InitMultRealCo                                                  ","I","","","Unscaled value of MultRealCo"
"2","10156","InitMultIntegerCo                                               ","I","","","Unscaled value of MultIntegerCo"
"2","10157","InitMultIntervalCo                                              ","I","","","Unscaled value of MultIntervalCo"
"2","10158","InitDivDecimalCo                                                ","I","","","Unscaled value of DivDecimalCo"
"2","10159","InitDivRealCo                                                   ","I","","","Unscaled value of DivRealCo"
"2","10160","InitDivIntegerCo                                                ","I","","","Unscaled value of DivIntegerCo"
"2","10161","InitDivIntervalCo                                               ","I","","","Unscaled value of DivIntervalCo"
"2","10162","InitModDecimalCo                                                ","I","","","Unscaled value of ModDecimalCo"
"2","10163","InitModRealCo                                                   ","I","","","Unscaled value of ModRealCo"
"2","10164","InitModIntegerCo                                                ","I","","","Unscaled value of ModIntegerCo"
"2","10165","InitExponentCo                                                  ","I","","","Unscaled value of ExponentCo"
"2","10166","InitNegDecimalCo                                                ","I","","","Unscaled value of NegDecimalCo"
"2","10167","InitNegRealCo                                                   ","I","","","Unscaled value of NegRealCo"
"2","10168","InitNegIntegerCo                                                ","I","","","Unscaled value of NegIntegerCo"
"2","10169","InitAbsDecimalCo                                                ","I","","","Unscaled value of AbsDecimalCo"
"2","10170","InitAbsRealCo                                                   ","I","","","Unscaled value of AbsRealCo"
"2","10171","InitAbsIntegerCo                                                ","I","","","Unscaled value of AbsIntegerCo"
"2","10172","InitLog10Co                                                     ","I","","","Unscaled value of Log10Co"
"2","10173","InitLogECo                                                      ","I","","","Unscaled value of LogECo"
"2","10174","InitSqrtCo                                                      ","I","","","Unscaled value of SqrtCo"
"2","10175","InitTrigonometricCo                                             ","I","","","Unscaled value of TrigonometricCo"
"2","10176","InitHyperbolicSinCosCo                                          ","I","","","Unscaled value of HyperbolicSinCosCo"
"2","10177","InitHyperbolicOtherCo                                           ","I","","","Unscaled value of HyperbolicOtherCo"
"2","10178","InitAtan2FcnCo                                                  ","I","","","Unscaled value of Atan2FcnCo"
"2","10179","InitInitDate2DaysCo                                             ","I","","","Unscaled value of Date2DaysCo"
"2","10180","InitDays2DateCo                                                 ","I","","","Unscaled value of Days2DateCo"
"2","10181","InitExtractFromDateCo                                           ","I","","","Unscaled value of ExtractFromDateCo"
"2","10182","InitExtractFromTimeCo                                           ","I","","","Unscaled value of ExtractFromTimeCo"
"2","10183","InitExtractDateFromTimeStampCo                                  ","I","","","Unscaled value of ExtractDateFromTimeStampCo"
"2","10184","InitExtractTimeFromTimeStampCo                                  ","I","","","Unscaled value of ExtractTimeFromTimeStampCo"
"2","10185","InitAddMonthDateCo                                              ","I","","","Unscaled value of AddMonthDateCo"
"2","10186","InitAddMonthTimeStampCo                                         ","I","","","Unscaled value of AddMonthTimeStampCo"
"2","10187","InitAddMonthIntervalCo                                          ","I","","","Unscaled value of AddMonthIntervalCo"
"2","10188","InitDTDateDiffCo                                                ","I","","","Unscaled value of DTDateDiffCo"
"2","10189","InitDTTSDiffCo                                                  ","I","","","Unscaled value of DTTSDiffCo"
"2","10190","InitDTTimeDiffCo                                                ","I","","","Unscaled value of DTTimeDiffCo"
"2","10191","InitTS2DateCo                                                   ","I","","","Unscaled value of TS2DateCo"
"2","10192","InitTS2TimeCo                                                   ","I","","","Unscaled value of TS2TimeCo"
"2","10193","InitDate2TsTzCo                                                 ","I","","","Unscaled value of Date2TsTzCo"
"2","10194","InitDec18toIntervalCo                                           ","I","","","Unscaled value of Dec18toIntervalCo"
"2","10195","InitDecBigtoIntervalCo                                          ","I","","","Unscaled value of DecBigtoIntervalCo"
"2","10196","InitExportDTICo                                                 ","I","","","Unscaled value of ExportDTICo"
"2","10197","InitImportDTICo                                                 ","I","","","Unscaled value of ImportDTICo"
"2","10198","InitBytesFcnCo                                                  ","I","","","Unscaled value of BytesFcnCo"
"2","10199","InitCharsFcnCo                                                  ","I","","","Unscaled value of CharsFcnCo"
"2","10200","InitUDTCastOpCo                                                 ","I","","","Unscaled value of UDTCastOpCo"
"2","10201","InitUDFProctectedCo                                             ","I","","","Unscaled value of UDFProctectedCo"
"2","10202","InitUDFNotProctectedCo                                          ","I","","","Unscaled value of UDFNotProctectedCo"
"2","10203","InitUDMProctectedCo                                             ","I","","","Unscaled value of UDMProctectedCo"
"2","10204","InitUDMNotProctectedCo                                          ","I","","","Unscaled value of Minimum cost to execute to a UDM in non protected mode"
"2","10205","InitEditCo                                                      ","I","","","Unscaled value of EditCo"
"2","10206","InitDEditCo                                                     ","I","","","Unscaled value of DEditCo"
"2","10207","InitHashBucketCo                                                ","I","","","Unscaled value of HashBucketCo"
"2","10208","InitHashBakAmpCo                                                ","I","","","Unscaled value of HashBakAmpCo"
"2","10209","InitHashAmpCo                                                   ","I","","","Unscaled value of HashAmpCo"
"2","10210","InitRelationCo                                                  ","I","","","Unscaled value of RelationCo"
"2","10211","InitCompareRealCo                                               ","I","","","Unscaled value of CompareRealCo"
"2","10212","InitCompareIntegerCo                                            ","I","","","Unscaled value of CompareIntegerCo"
"2","10213","InitCompareIntervalCo                                           ","I","","","Unscaled value of CompareIntervalCo"
"2","10214","InitTrimTrailCf                                                 ","I","","","Unscaled value of TrimTrailCf"
"2","10215","InitTrimTrailOv                                                 ","I","","","Unscaled value of TrimTrailOv"
"2","10216","InitTrimBothCf                                                  ","I","","","Unscaled value of TrimBothCf"
"2","10217","InitTrimBothOv                                                  ","I","","","Unscaled value of TrimBothOv"
"2","10218","InitSubStrCf                                                    ","I","","","Unscaled value of SubStrCf"
"2","10219","InitSubStrOv                                                    ","I","","","Unscaled value of SubStrOv"
"2","10220","InitLikeCompareCf                                               ","I","","","Unscaled value of LikeCompareCf"
"2","10221","InitLikeCompareOv                                               ","I","","","Unscaled value of LikeCompareOv"
"2","10222","InitConcatCf                                                    ","I","","","Unscaled value of ConcatCf"
"2","10223","InitConcatOv                                                    ","I","","","Unscaled value of ConcatOv"
"2","10224","InitLowerCf                                                     ","I","","","Unscaled value of LowerCf"
"2","10225","InitLowerOv                                                     ","I","","","Unscaled value of LowerOv"
"2","10226","InitUpperCf                                                     ","I","","","Unscaled value of UpperCf"
"2","10227","InitUpperOv                                                     ","I","","","Unscaled value of UpperOv"
"2","10228","InitChar2HexIntCf                                               ","I","","","Unscaled value of Char2HexIntCf"
"2","10229","InitChar2HexIntOv                                               ","I","","","Unscaled value of Char2HexIntOv"
"2","10230","InitTranslateCf                                                 ","I","","","Unscaled value of TranslateCf"
"2","10231","InitTranslateOv                                                 ","I","","","Unscaled value of TranslateOv"
"2","10232","InitUnused1                                                     ","I","","","Unscaled value of Unused1"
"2","10233","InitUnused2                                                     ","I","","","Unscaled value of Unused2"
"2","10234","InitNoAggressiveRowKeyJCost                                     ","I","","","Unscaled value of NoAggressiveRowKeyJCost"
"2","10235","InitDisableCIReadCost                                           ","I","","","Unscaled value of DisableCIReadCost"
"2","10236","InitDirHJProbeOvCo                                              ","I","","","Unscaled value of DirHJProbeOvCo"
"2","10237","InitCompareRowidCo                                              ","I","","","Unscaled value of CompareRowidCo"
"2","10238","InitHTBuildCf                                                   ","I","","","Unscaled value of HTBuildCf"
"2","10239","InitHTBuildOv                                                   ","I","","","Unscaled value of HTBuildOv"
"2","10240","InitDirHTBuildCf                                                ","I","","","Unscaled value of DirHTBuildCf"
"2","10241","InitDirHTBuildOv                                                ","I","","","Unscaled value of DirHTBuildOv"
"2","10242","InitHTProbeCf                                                   ","I","","","Unscaled value of HTProbeCf"
"2","10243","InitHTProbeOv                                                   ","I","","","Unscaled value of HTProbeOv"
"2","10244","HashProbeSameDBCo                                               ","I","","","Unscaled value of HashProbeSameDBCo"
"2","10245","InitHashProbeMaxCo                                              ","I","","","Unscaled value of HashProbeMaxCo"
"2","10246","InitHashProbeLogCf1                                             ","I","","","Unscaled value of HashProbeLogCf1"
"2","10247","InitHashProbeLogCf2                                             ","I","","","Unscaled value of HashProbeLogCf2"
"2","10248","InitHashProbePowCf1                                             ","I","","","Unscaled value of HashProbePowCf1"
"2","10249","InitHashProbePowCf2                                             ","I","","","Unscaled value of HashProbePowCf2"
"2","10250","InitPJCacheBuildCf                                              ","I","","","Unscaled value of PJCacheBuildCf"
"2","10251","InitPJCacheBuildOv                                              ","I","","","Unscaled value of PJCacheBuildOv"
"2","10252","InitPJRowAccessCo                                               ","I","","","Unscaled value of PJRowAccessCo"
"2","10253","InitMJRowAccessCf                                               ","I","","","Unscaled value of MJRowAccessCf"
"2","10254","InitMJRowAccessOv                                               ","I","","","Unscaled value of MJRowAccessOv"
"2","10255","InitHashRowCo                                                   ","I","","","Unscaled value of HashRowCo"
"2","10256","InitStringCompareCf                                             ","I","","","Unscaled value of StringCompareCf"
"2","10257","InitStringCompareOv                                             ","I","","","Unscaled value of StringCompareOv"
"2","10258","InitCaseExprOv                                                  ","I","","","Unscaled value of CaseExprOv"
"2","10259","InitPPILoadCf                                                   ","I","","","Unscaled value of PPILoadCf"
"2","10260","InitPPILoadOv                                                   ","I","","","Unscaled value of PPILoadOv"
"2","10261","InitLowSkewAllowance                                            ","I","","","Unscaled value of LowSkewAllowance"
"2","10262","InitPPIRowAccessCf                                              ","I","","","Unscaled value of PPIRowAccessCf"
"2","10263","InitPPIRowAccessOv                                              ","I","","","Unscaled value of PPIRowAccessOv"
"2","10264","InitHTProbeNoMatchCo                                            ","I","","","Unscaled value of HTProbeNoMatchCo"
"2","10265","InitHeapSortOv                                                  ","I","","","Unscaled value of HeapSortOv"
"2","10266","InitHeapSortCf                                                  ","I","","","Unscaled value of HeapSortCf"
"2","10267","InitHTProbeCf1                                                  ","I","","","Unscaled value of HTProbeCf1"
"2","10268","InitHTProbeOv1                                                  ","I","","","Unscaled value of HTProbeOv1"
"2","10269","InitHTProbeBd1                                                  ","I","","","Unscaled value of HTProbeBd1"
"2","10270","InitHTProbeCf2                                                  ","I","","","Unscaled value of HTProbeCf2"
"2","10271","InitHTProbeOv2                                                  ","I","","","Unscaled value of HTProbeOv2"
"2","10512","OptTableReadRate                                                ","C","","","Disk array read access rate for a table. Number of table block reads per second at assumed block size."
"2","10513","OptSpoolReadRate                                                ","C","","","Disk array read access rate for a spool. Number of spool block reads per second at assumed block size."
"2","10514","OptIndexReadRate                                                ","C","","","Disk array read access rate for an index. Number of index block reads per second at assumed block size."
"2","10515","OptTableWriteRate                                               ","C","","","Disk array write access rate for a table. Number of table block writes per second at assumed block size."
"2","10516","OptSpoolWriteRate                                               ","C","","","Disk array write access rate for a spool. Number of spool block writes per second at assumed block size."
"2","10517","OptIndexWriteRate                                               ","C","","","Disk array write access rate for an index. Number of index block writes per second at assumed block size."
"2","10600","OptByNetRedOvhd                                                 ","C","","","Defines the network row redistribution overhead cost, point-to-point message. Estimated number of milliseconds."
"2","10601","OptByNetRedCost                                                 ","C","","","Defines the network row redistribution cost per byte, point-to-point message. Estimated number of milliseconds."
"2","10602","OptByNetDupOvhd                                                 ","C","","","Defines the network row duplication overhead cost,  broadcast message. Estimated number of milliseconds."
"2","10603","OptByNetDupCost                                                 ","C","","","Defines the network row duplication cost per byte,  broadcast message. Estimated number of milliseconds."
"2","10620","OptRowAccessCost                                                ","C","","","The CPU cost of accessing a row in memory. Estimated number of milliseconds."
"2","10621","OptOutputRowCost                                                ","C","","","The CPU overhead cost for building an output row. Estimated number of milliseconds."
"2","10622","OptRedistributeCost                                             ","C","","","The CPU cost of redistributing a row. Estimated number of milliseconds."
"2","10623","OptSynonymCost                                                  ","C","","","The CPU cost of accessing a row by using an index. Estimated number of milliseconds."
"2","10624","OptRowIDCost                                                    ","C","","","The CPU cost of accessing a row thru a RowID list. Estimated number of milliseconds."
"2","10625","OptBMAndRowCost                                                 ","C","","","The CPU cost to AND two bit map rows of 16KB each. The bitmap consists of multiple bitmap rows. Estimated number of milliseconds."
"2","10626","OptBitCost                                                      ","C","","","The CPU cost to check or set bit map given a row ID. Estimated number of milliseconds."
"2","10627","OptCharFieldCost                                                ","C","","","The CPU cost of building a one character field. Estimated number of milliseconds."
"2","10628","OptNumFieldCost                                                 ","C","","","The CPU cost of building a single numeric field. Estimated number of milliseconds."
"2","10629","OptOvhdOfRowCompCost                                            ","C","","","The CPU cost of a sort row comparison. Estimated number of milliseconds."
"2","10630","OptBMWriteRowCost                                               ","C","","","The IO cost to write and then read a bit map row of 16KB to the spool. Estimated number of milliseconds."
"2","10650","BlockProcessOv                                                  ","C","","","Overhead term of the BPIO formula"
"2","10651","BlockProcessCf                                                  ","C","","","Coefficient of linear term in the BPIO formula"
"2","10654","AccessRowOv1                                                    ","C","","","Overhead term of the 1-st scan row access cost formula segment"
"2","10655","AccessRowCf1                                                    ","C","","","Coefficient of linear term in the 1-st scan row access cost formula segment"
"2","10656","AccessRowBd1                                                    ","C","","","Boundary value of the 1-st scan row access cost formula segment"
"2","10657","AccessRowOv2                                                    ","C","","","Overhead term of the 2-nd scan row access cost formula segment"
"2","10658","AccessRowCf2                                                    ","C","","","Coefficient of linear term in the 2-nd scan row access cost formula segment"
"2","10661","RowDupOv1                                                       ","C","","","Overhead term of the 1-st row duplication cost formula segment"
"2","10662","RowDupCf1                                                       ","C","","","Coefficient of linear term in the 1-st row duplication cost formula segment"
"2","10663","RowDupBd1                                                       ","C","","","Boundary value of the 1-st row duplication cost formula segment"
"2","10664","RowDupOv2                                                       ","C","","","Overhead term of the 2-nd row duplication cost formula segment"
"2","10665","RowDupCf2                                                       ","C","","","Coefficient of linear term in the 2-nd row duplication cost formula segment"
"2","10666","RowRedistOv                                                     ","C","","","Overhead term of the row redistribution cost formula"
"2","10667","RowRedistCf                                                     ","C","","","Coefficient of linear term in the row redistribution cost formula"
"2","10671","SortBufSize                                                     ","C","","","Sort buffer size in bytes for sort cost formula"
"2","10672","MergeSortOv                                                     ","C","","","Overhead cost per merge level for merge-sorting a row"
"2","10673","MergeSortCf                                                     ","C","","","Per byte cost per merge level for merge-sorting a row"
"2","10676","AggrCacheHitOv                                                  ","C","","","Overhead term of cache hit row access cost expression in aggregation cost formula"
"2","10677","AggrCacheHitCf                                                  ","C","","","Coefficient of linear term of cache hit row access cost expression in aggregation cost formula"
"2","10678","AggrCacheMissOv                                                 ","C","","","Overhead term of cache miss row access cost expression in aggregation cost formula"
"2","10679","AggrCacheMissCf                                                 ","C","","","Coefficient of linear term of cache miss row access cost expression in aggregation cost formula"
"2","10681","PIRowAccessCo                                                   ","C","","","Cost of positioning into a row in the PI access cost formula"
"2","10682","PIOvhdCo                                                        ","C","","","Overhead in the PI access cost formula"
"2","10683","USIOvhdCo                                                       ","C","","","Overhead in the USI access cost formula"
"2","10684","NUSIOvhdOv                                                      ","C","","","Overhead in the NUSI access cost formula"
"2","10685","NUSIOvhdCf                                                      ","C","","","Linear coefficient in the NUSI access cost formula"
"2","10686","BitMapBuildOvhdOv                                               ","C","","","Overhead term in the bit map build overhead cost formula"
"2","10687","BitMapBuildOvhdCf                                               ","C","","","Linear coefficient in the bit map build overhead cost formula"
"2","10688","BitMapBuildCf                                                   ","C","","","Coefficient of linear term in the bit map build cost formula"
"2","10689","BitMapCheckOv                                                   ","C","","","Overhead term in the bit map check cost formula"
"2","10690","BitMapCheckCf                                                   ","C","","","Coefficient of linear term in the bit map check cost formula"
"2","10691","BitMapWriteReadOv                                               ","C","","","Overhead term in the bit map write and read cost formula"
"2","10692","BitMapWriteReadCf                                               ","C","","","Coefficient of linear term in the bit map write and read cost formula"
"2","10693","RowID2BitMapOvhdOv                                              ","C","","","Overhead term in the rowid to bit map overhead cost formula"
"2","10694","RowID2BitMapOvhdCf                                              ","C","","","Linear coefficient in the rowid to bit map overhead cost formula"
"2","10695","RowID2BitMapCf                                                  ","C","","","Coefficient of linear term in the rowid to bitmap cost formula"
"2","10696","SpoolWriteI4Co                                                  ","C","","","CPU cost increment for integral numeric field"
"2","10697","SpoolWriteFloatCo                                               ","C","","","CPU cost increment for floating point numeric field"
"2","10698","SpoolWriteRowOv                                                 ","C","","","Overhead of building a spool output row"
"2","10699","SpoolWriteByteOv                                                ","C","","","Overhead cost for a string field"
"2","10700","SpoolWriteByteCf                                                ","C","","","Per-byte cost of a string field"
"2","10701","AddDateCo                                                       ","C","","","Cost for date type addition"
"2","10702","AddTimeCo                                                       ","C","","","Cost for time type addition"
"2","10703","AddTimeStampCo                                                  ","C","","","Cost for time stamp type addition"
"2","10704","AddDecimalCo                                                    ","C","","","Cost for decimal type addition"
"2","10705","AddRealCo                                                       ","C","","","Cost for real type addition"
"2","10706","AddIntegerCo                                                    ","C","","","Cost for integer type addition"
"2","10707","AddIntervalCo                                                   ","C","","","Cost for interval type addition"
"2","10708","AddInteger64Co                                                  ","C","","","Cost for 64 bits integer type addition"
"2","10709","SubstIntervalCo                                                 ","C","","","Cost for interval type substraction"
"2","10710","MultDecimalCo                                                   ","C","","","Cost for decimal  type multiplication"
"2","10711","MultRealCo                                                      ","C","","","Cost for real type multiplication"
"2","10712","MultIntegerCo                                                   ","C","","","Cost for integer type multiplication"
"2","10713","MultIntervalCo                                                  ","C","","","Cost for interval type multiplication"
"2","10714","DivDecimalCo                                                    ","C","","","Cost for decimal type division"
"2","10715","DivRealCo                                                       ","C","","","Cost for real type division"
"2","10716","DivIntegerCo                                                    ","C","","","Cost for integer type division"
"2","10717","DivIntervalCo                                                   ","C","","","Cost for interval type division"
"2","10718","ModDecimalCo                                                    ","C","","","Cost for decimal type modulo"
"2","10719","ModRealCo                                                       ","C","","","Cost for real type modulo"
"2","10720","ModIntegerCo                                                    ","C","","","Cost for integer type modulo"
"2","10721","ExponentCo                                                      ","C","","","Cost for exponent operation"
"2","10722","NegDecimalCo                                                    ","C","","","Cost for decimal type negation"
"2","10723","NegRealCo                                                       ","C","","","Cost for real type negation"
"2","10724","NegIntegerCo                                                    ","C","","","Cost for integer type negation"
"2","10725","AbsDecimalCo                                                    ","C","","","Cost for decimal type absolution"
"2","10726","AbsRealCo                                                       ","C","","","Cost for real type absolution"
"2","10727","AbsIntegerCo                                                    ","C","","","Cost for integer type absolution"
"2","10728","Log10Co                                                         ","C","","","Cost for log base 10 operation"
"2","10729","LogECo                                                          ","C","","","Cost for natural log operation"
"2","10730","SqrtCo                                                          ","C","","","Cost for square root operation"
"2","10731","TrigonometricCo                                                 ","C","","","Cost for a Trigonometrical function"
"2","10732","HyperbolicSinCosCo                                              ","C","","","Cost for Hyperbolic sin or cos function"
"2","10733","HyperbolicOtherCo                                               ","C","","","Cost for Hyperbolic function other than sin and cos"
"2","10734","Atan2FcnCo                                                      ","C","","","Cost for executing the Atan2Fcn function"
"2","10735","Date2DaysCo                                                     ","C","","","Cost for executing the Date2DaysCo operation"
"2","10736","Days2DateCo                                                     ","C","","","Cost for executing the Days2DateCo operation"
"2","10737","ExtractFromDateCo                                               ","C","","","Cost for extracting from a date type expression"
"2","10738","ExtractFromTimeCo                                               ","C","","","Cost for extracting from a time type expression"
"2","10739","ExtractDateFromTimeStampCo                                      ","C","","","Cost for extracting date from a timestamp type expression"
"2","10740","ExtractTimeFromTimeStampCo                                      ","C","","","Cost for extracting time from a timestamp type expression"
"2","10741","AddMonthDateCo                                                  ","C","","","Cost for adding month to a date type expression"
"2","10742","AddMonthTimeStampCo                                             ","C","","","Cost for adding month to a timestamp type expression"
"2","10743","AddMonthIntervalCo                                              ","C","","","Cost for adding month to an interval type expression"
"2","10744","DTDateDiffCo                                                    ","C","","","Cost for takeing the difference between two date expressions"
"2","10745","DTTSDiffCo                                                      ","C","","","Cost for takeing the difference between two timestamp expressions"
"2","10746","DTTimeDiffCo                                                    ","C","","","Cost for takeing the difference between two time expressions"
"2","10747","TS2DateCo                                                       ","C","","","Cost to convert time stamp to date expression"
"2","10748","TS2TimeCo                                                       ","C","","","Cost to convert time stamp to time expression"
"2","10749","Date2TsTzCo                                                     ","C","","","Cost to convert date to time stamp with time zone expression"
"2","10750","Dec18toIntervalCo                                               ","C","","","Cost to convert 18 digits type expression to interval expression"
"2","10751","DecBigtoIntervalCo                                              ","C","","","Cost to convert > 19 digits type expression to interval expression"
"2","10752","ExportDTICo                                                     ","C","","","Cost to convert date time expression to character type"
"2","10753","ImportDTICo                                                     ","C","","","Cost to convert character expression to date time type"
"2","10754","BytesFcnCo                                                      ","C","","","Cost to count number of bytes in byte expression"
"2","10755","CharsFcnCo                                                      ","C","","","Cost to count number of character in character expression"
"2","10756","UDTCastOpCo                                                     ","C","","","Cost to convert to a UDT type"
"2","10757","UDFProctectedCo                                                 ","C","","","Minimum cost to execute to a UDF in protected mode"
"2","10758","UDFNotProctectedCo                                              ","C","","","Minimum cost to execute to a UDF in non protected mode"
"2","10759","UDMProctectedCo                                                 ","C","","","Minimum cost to execute to a UDM in protected mode"
"2","10760","UDMNotProctectedCo                                              ","C","","","Minimum cost to execute to a UDM in non protected mode"
"2","10761","EditCo                                                          ","C","","","Cost to convert numeric to character type"
"2","10762","DEditCo                                                         ","C","","","Cost to convert character to numeric type"
"2","10763","HashBucketCo                                                    ","C","","","Cost to execute a HashBucket operation"
"2","10764","HashBakAmpCo                                                    ","C","","","Cost to execute a HashBakAmp operation"
"2","10765","HashAmpCo                                                       ","C","","","Cost to execute a HashAmp operation"
"2","10766","RelationCo                                                      ","C","","","Cost to do relation like ands and ors operation"
"2","10767","CompareRealCo                                                   ","C","","","Cost to execute real comparision like eq, ls gt .. operation"
"2","10768","CompareIntegerCo                                                ","C","","","Cost to execute interval comparision like eq, ls gt .. operation"
"2","10769","CompareIntervalCo                                               ","C","","","Cost to execute integer comparision like eq, ls gt .. operation"
"2","10770","TrimTrailCf                                                     ","C","","","Per-byte cost to trim trailing character operation"
"2","10771","TrimTrailOv                                                     ","C","","","Overhead cost to trim trailing character operation"
"2","10772","TrimBothCf                                                      ","C","","","Per-byte cost to trim leading and trailing character operation"
"2","10773","TrimBothOv                                                      ","C","","","Overhead cost to trim leading and trailing character operation"
"2","10774","SubStrCf                                                        ","C","","","Per-byte cost to extract substring from character expression"
"2","10775","SubStrOv                                                        ","C","","","Overhead cost to extract substring from character expression"
"2","10776","LikeCompareCf                                                   ","C","","","Per-byte cost to execute like comparsion operation"
"2","10777","LikeCompareOv                                                   ","C","","","Overhead cost to execute like comparsion operation"
"2","10778","ConcatCf                                                        ","C","","","Per-byte cost to concatenate two strings"
"2","10779","ConcatOv                                                        ","C","","","Overhead cost to concatenate two strings"
"2","10780","LowerCf                                                         ","C","","","Per-byte cost to convert string to lower case"
"2","10781","LowerOv                                                         ","C","","","Overhead ost to convert string to lower case"
"2","10782","UpperCf                                                         ","C","","","Per-byte cost to convert string to upper case"
"2","10783","UpperOv                                                         ","C","","","Overhead cost to convert string to upper case"
"2","10784","Char2HexIntCf                                                   ","C","","","Per-byte cost to convert character expression to hex integer"
"2","10785","Char2HexIntOv                                                   ","C","","","Overhead cost to convert character expression to hex integer"
"2","10786","TranslateCf                                                     ","C","","","Per-byte cost to translate a character expression"
"2","10787","TranslateOv                                                     ","C","","","Overhead cost to translate a character expression"
"2","10788","Unused1                                                         ","C","","","Currently not used"
"2","10789","Unused2                                                         ","C","","","Currently not used"
"2","10790","NoAggressiveRowKeyJCost                                         ","C","","","Disables aggressive rowkey joins"
"2","10791","DisableCIReadCost                                               ","C","","","Disables the costing of CI reads"
"2","10792","DirHJProbeOvCo                                                  ","C","","","Overhead of probing hash table in direct Hash Joins"
"2","10793","CompareRowidCo                                                  ","C","","","Cost to execute a Rowid Comparison"
"2","10794","HTBuildCf                                                       ","C","","","Per-byte cost of building a hash table row"
"2","10795","HTBuildOv                                                       ","C","","","Overhead of building a hash table row"
"2","10796","DirHTBuildCf                                                    ","C","","","Per-byte cost of building a hash table row in direct hash joins"
"2","10797","DirHTBuildOv                                                    ","C","","","Overhead of building a hash table row in direct hash joins"
"2","10798","HTProbeCf                                                       ","C","","","Cost per row of probing the linked list of a hash table bucket"
"2","10799","HTProbeOv                                                       ","C","","","Overhead of probing the linked list of a hash table bucket"
"2","10800","HashProbeSameDBCo                                               ","C","","","Cost of locating a hash within the same data block"
"2","10801","HashProbeMaxCo                                                  ","C","","","Cost of doing a full hash search"
"2","10802","HashProbeLogCf1                                                 ","C","","","Coefficient used in the log function model of hash probe"
"2","10803","HashProbeLogCf2                                                 ","C","","","Coefficient used in the log function model of hash probe"
"2","10804","HashProbePowCf1                                                 ","C","","","Coefficient used in the power series model of hash probe"
"2","10805","HashProbePowCf2                                                 ","C","","","Coefficient used in the power series model of hash probe"
"2","10806","PJCacheBuildCf                                                  ","C","","","Per-byte cost of building a row in the product join cache"
"2","10807","PJCacheBuildOv                                                  ","C","","","Overhead of building a row in the product join cache"
"2","10808","PJRowAccessCo                                                   ","C","","","Cost of accessing a row in the product join cache"
"2","10809","MJRowAccessCf                                                   ","C","","","Per-Byte Cost of accessing a row in the probed table in merge joins"
"2","10810","MJRowAccessOv                                                   ","C","","","Overhead Cost of accessing a row in the probed table in merge joins"
"2","10811","HashRowCo                                                       ","C","","","Cost to execute a HashRow operation"
"2","10812","StringCompareCf                                                 ","C","","","Per byte cost to compare a string expression"
"2","10813","StringCompareOv                                                 ","C","","","Overhead Cost of a string comparison"
"2","10814","CaseExprOv                                                      ","C","","","Overhead Cost to execute a case expression"
"2","10815","PPILoadCf                                                       ","C","","","Per partition cost in loading a PPI table"
"2","10816","PPILoadOv                                                       ","C","","","Overhead Cost for loading PPI table in partitions"
"2","10817","LowSkewAllowance                                                ","C","","","decides when skew is high enough to warrant reducing the hash table size"
"2","10818","PPIRowAccessCf                                                  ","C","","","Per Row Cost of accessing a row in a partition"
"2","10819","PPIRowAccessOv                                                  ","C","","","Overhead Cost of accessing a row in a partition"
"2","10820","HTProbeNoMatchCo                                                ","C","","","Per row cost of probing the hash table with an unmatched value"
"2","10821","HeapSortOv                                                      ","C","","","Overhead cost per row for heap-sorting a row"
"2","10822","HeapSortCf                                                      ","C","","","per byte cost per row for heap-sorting a row"
"2","10823","HTProbeCf1                                                      ","C","","","1st coefficient of probing a linked list in a Hash Table"
"2","10824","HTProbeOv1                                                      ","C","","","1st overhead of probing a linked list in a Hash Table"
"2","10825","HTProbeBd1                                                      ","C","","","Boundary of 1st and 2nd coefficients"
"2","10826","HTProbeCf2                                                      ","C","","","2nd coefficient of probing a linked list in a Hash Table"
"2","10827","HTProbeOv2                                                      ","C","","","2nd overhead of probing a linked list in a Hash Table"
"2","10950","NumNodesPerDiskArray                                            ","C","","","Number of nodes per disk array"
"2","10951","CPUScale                                                        ","C","","","Conversion factor from path length to path time in milliseconds"
"2","10952","DAScale                                                         ","C","","","Conversion factor from array throughput to per-node array throughput"
"2","10953","NumAmpsPerCPU                                                   ","C","","","Number of AMPs per CPU"
"2","10954","AmpsInSystem                                                    ","C","","","Total number of amps in the system"
"2","13000","CacheableBlocks                                                 ","I","10","","Maximum number of blocks that can be assumed to be in cache when the \nsame set of blocks is reread during a join.\n  Value Range: >= 0 \n  Default: 10 \n"
"2","13001","ConditionCosting                                                ","I","1","","Condition costing control levels. Values are IN (1, 2, 3) where: \n   1 (default) - New condition costing and ordering  \n  2           - New condition costing but ordering disabled  \n  3           - Disable new condition costing and ordering \n  "
"2","13002","GroupAMPPISampling                                              ","I","0","","Determines the number of AMPs to be sampled for getting row estimates of a table. \n  0 (default) - Single AMP sampling \n  2 .. 4      - Two AMP sampling \n  5           - Five AMP sampling \n  6           - Node level sampling \n  7           - All AMP sampling \n  Used only when RevertEstimationLogic == 0 \n"
"2","13003","LegacyJoinCardDefault                                           ","I","0","","Enable legacy join cardinality default when no demographics on join columns \nare available. \n  0 (default) - Use new cardinality formulas. \n  1           - Fall back to legacy formulas. \n"
"2","13004","LIKEEstPartialIntRatio                                          ","I","0.125","","The default ratio for calculating the rows selected  in a partially covered \ninterval by LIKE predicates of ""abc%""- pattern. \n  Valid Range: 0 - 1 \n  Default: 0.125 \n"
"2","13005","RASHistDeviationPct                                             ","I","10","","Determines the allowable percentage deviation between Random AMP Sample (RAS) \nand statistics histogram.  If the deviation exceeds this value, then statistics \nare assumed to be stale and are overridden by RAS. However, Histgrams are still \nused for selectivity estimations and the estimations gets extrapolated. \n  Valid Range: >= 0 \n  Default: 10 \nSetting this to 0 causes RAS to bypass the Histogram all the time.  Used only when \nRevertEstimationLogic == 0 and (ExtrapolateStatistics == 0 or \nExtrapolateStatistics == 2). \n"
"2","13006","RevertEstimationLogic                                           ","I","0","","Flag to revert to pre-12.0 cardinality/selectivity estimation logic \n  0 (default) - Use new cardinality/selectivity estimation logic \n  1           - Use pre-12.0 cardinality/selectivity estimation logic \n"
"2","13007","RevertSkewAdjust                                                ","I","0","","Revert to prior release skew-based cardinality adjustments \nCurrently unused; subsumed by RevertEstimationLogic. \n"
"2","13008","ConstrScanAxPath                                                ","I","0","","Controls enabling/disabling the new constraint scan access path. \n  0 (default) - Enable for aggregation only \n  1           - Disable. \n  2           - Enable for aggregation and retrieval (not available yet) \n  Used only when RevertEstimationLogic == 0 \n"
"2","13009","ocsDebug                                                        ","I","2","","Determines the action to be taken if optimizer sanity checks of demographic or costing \ninformation fails: \n  0           - Quiet mode.  Fall back to default demographic or cost value. \n  1           - Parser crash with snapshot dump. \n  2 (default) - Log occurance in the event log and fall back to default value. \n  3           - First 2 occurances, generate a snapshot dump and log all occurance \n                in the event log and fall back to default value. \n"
"2","13010","SoftUniquePct                                                   ","I","95","","If the uniqueness of a column is more that this percent, it is assumed to be \na rolling column and gets qualified for distinct values or rows extrapolation if \nthe statistics are determined to be stale. \n  Valid Range: 0 - 100 \n  Default: 95 \nSetting this to 0 disables extrapolations.  Used only when RevertEstimationLogic == 0 \nand (ExtrapolateStatistics == 0 or ExtrapolateStatistics == 2). \n"
"2","13011","PreJCost                                                        ","I","1","","Enables/Disables Type 2 pre-join costing logic.  When enabled, cost estimates \nare made for any additional steps required on the input relations prior to the \njoin, for example, sort/duplicate elimination, aggregation, and so on. \n  0           - Disable completely \n  1 (default) - Enable for both uniq-id and non-uniq-id join planning paths. \n  2           - Enable only for the uniq-id path. \n"
"2","13012","MaxStatsInterval                                                ","I","200","","Maximum number of statistics intervals that are allowed. \n  Valid Range: 1 - 240 \n  Default: 200 \n"
"2","13013","ExtrapolateStatistics                                           ","I","0","","Flag to enable/disable extrapolating demographics such as unique values or \nrows when stale statistics are detected. \n  0 (default) - Enable extrapolation \n  1           - Disable extrapolation \n  2           - Enable extrapolation by honoring single-Amp sampling always \n"
"2","13014","EstWithSingleRowOpt                                             ","I","1","","If a table has a single row access via a UPI or USI, this flag determines whether \nor not the optimizer can retrieve this row to derive more accurate estimates. \n  0           - Disable this optimization. \n  1 (default) - Enable this optimization. \n  Used only when RevertEstimationLogic == 0 \n"
"2","13015","EnableSessLevelDrvStats                                         ","I","1","","Flag to determine whether or not to allow session level derived statistics for \nglobal and volatile tables. \n  0           - Disallow session level derived statistics. \n  1 (default) - Enable these derived statistics. \n  Used only when RevertEstimationLogic == 0 \n"
"2","13016","AssumedPIUniquePct                                              ","I","75","","When no statistics are available on a NUPI, this is the assumed uniqueness. \n  Valid Range: 50 - 100 \n  Default: 75 \n  Used only when RevertEstimationLogic == 0 \n"
"2","13017","TableFillFactor                                                 ","I","0.75","","Table block fill factor.  Assumed table block size is this percent \nof maximum table block size \n  Valid Range: 0.01 - 1.00 \n  Default: 0.75 \n"
"2","13018","SpoolFillFactor                                                 ","I","1","","Spool block fill factor.  Assumed spool block size is this percent \nof maximum spool block size \n  Valid Range: 0.01 - 1.00 \n  Default: 1.00 \n"
"2","13019","IndexFillFactor                                                 ","I","0.75","","Index block fill factor.  Assumed index block size is this percent \nof maximum index block size \n  Valid Range: 0.01 - 1.00 \n  Default: 0.75 \n"
"2","13020","JoinCardSkewAdj                                                 ","I","1","","Enables or disables join cardinality adjustment based on skew. \n  0           - Disable adjustment. \n  1 (default) - Enable adjustment.  \n"
"2","13021","RASHistAbsDeviation                                             ","I","10000","","Determines the allowable absolute deviation of rows between Random AMP Sample (RAS) \nand statistics histogram.  If the deviation exceeds this value, then statistics \nare assumed to be stale and are overridden by RAS. However, Histgrams are still \nused for selectivity estimations and the estimations gets extrapolated. \n  Valid Range: >= 0 \n  Default: 10,000 rows \nSetting this to 0 causes RAS to bypass the Histogram all the time.  Used only when  \nRevertEstimationLogic == 0 and (ExtrapolateStatistics == 0  or \nExtrapolateStatistics == 2) \n"
"2","13022","AggrEstCapPct                                                   ","I","75","","Aggregate estimations cap percentage when no stats are found on the grouping columns. \n  Default is 75%. Valid Range 1 - 100 \n"
"2","17012","nonestedjoin                                                    ","I","0","","to diable nested join  0 (default)- Disable this optimization. \n  1           - Enable this optimization. \n"
"2","13023","CCFIndependentValueRatio                                        ","I","1","","The value mapping ratio used in detecting independent columns. \n  Valid Range: 0 - 1 \n  Default: 0.6 \n  Used only when RevertEstimationLogic == 0 \n"
"2","13024","CCFMulti2SnglValueRatio                                         ","I","1","","The ratio between combined values and the muliplication of individual\ncolumn values used in detecting independent columns. \n  Valid Range: 0 - 1 \n  Default: 0.9 \n"
"2","13025","RevertJoinPlanning                                              ","I","0","","Flag to revert join planning.  == 1 =>  use a fixed 64 table limit for joins \nand TD12 join planning heuristics.\ \n  Valid Range: 0 - 1 \n  Default: 0 \n"
"2","13026","MaxJoinTables                                                   ","I","128","","Maximum number of tables that can be joined per query block.  == 0 => use the \nsystem default, whatever it might be.  Any value in 1..16 results in a 16 table \nupper limit.  If this value is >= the DBS Control record MaxJoinTables field, \nthen the DBS Control record value will be used for cost profile activation. \n  Valid Range: 0 - 256 \n  Default: 128 \n"
"2","13027","SorNumMergeBufs                                                 ","I","0","","Number of merge buffers that would be used during a sort.  This value influences sort operation\ncost estimation.  Values between 1 and 8 are mapped to 8 and values above 64 are mapped to 64.  \nValue == 0 means use the system default, whatever it might be.  \n  Valid Range: 0 - 64 \n  Default: 0 \n"
"2","13035","UseOldJoinTermSelectionRules                                    ","I","0","","Disable new join condition selection rules, and go back to pre-DR129210 logic. \n  0 (default) - Use new join term selection rules. \n  1           - Fall back to legacy join term selection rules. \n"
"2","13031","NUSIDelCtrlPct                                                  ","I","0","","Flag to control the NUSI path used for Delete operation.\ \n  Valid Range: 1 - 100% \n  Default: 0% \n"
"2","13032","DR138006OFF                                                     ","I","0","","Enables or disables the DR138006 fix. \n  0 (default) - Enable the DR138006 fix. \n  1           - Disable the DR138006 fix.  \n"
"2","13036","ValuetoConvINtoOR                                               ","I","10240","","Controls the conversion of INList to ORList \ \n  Valid Range: 1 - 10240 \n  Default: 10240 \n"
"2","13044","EnableNEOoputcopyForGroupBy                                     ","I","0","","Controls the use of NEOoputcopy for copying GroupBy \n  Valid Range: 0 - 1 \n  Default: 0 \n"
"2","13028","EPJMinConfidenceLvl                                             ","I","0","","Allow Equality Product Joins (EPJs) only if their confidences are higher than or equal to a threshold (0 to 4). \n0 allows EPJs with any type of confidence (Default) \n1 Allows EPJs with high, low, index confidence \n2 Allows EPJs with high, low  confidence \n3 Allows EPJs with high confidence \n4 Disallow EPJs \n"
"2","13029","EPJCoveringOJ                                                   ","I","0","","Decide if OEPJs (Outer Equality Product Join) are affected by EPJMinConfidenceLvl.\n0: EPJ restriction does not include OEPJs (Default) \n1: EPJ restriction includes OEPJs\n"
"2","13041","TempMemPoolThreshold4LTSTJ                                      ","I","200","","Decide when to call jplan with temporary memory pools from ltst join planning. \n"
"2","13030","UseRASRowSize                                                   ","I","0","","Use RAS RowSize, which comes from Random AMP Sampling, as a maximum rowsize in estimating the size of rowsif the row has variable length columns\n0: Do not use RAS rowsize information (Default)\n1: Use the RAS rowsize information\n"
"2","13033","DisableDR136124Flag                                             ","I","0","","Flag to disable the fix for DR136124. Valid Range : 0 - 1 \n"
"2","13034","DR107798OFF                                                     ","I","0","","Enables or disables the DR107798 fix. \n  0 (default) - Not disable the DR107798 fix. \n  1           - Disable the DR107798 fix.  \n"
"2","13045","UseDupElimThreshold                                             ","I","0","","Use DupElimThreshold to control duplicate elimination process\n0: Do not use the threshold (Default)\n1: Use the threshold to stop checking duplicate values after a certain number of values\n"
"2","13046","PartialInListSel                                                ","I","0","","Decide whether to use all values or one value while estimating qualified rows from IN clause. \n"
"2","13037","MinAMPRows4HashPartWithConf                                     ","I","10","","The upper bound of amp rows when Hash Partitioning will be considered with confidence."
"2","13038","MinAMPRows4HashPartWithoutConf                                  ","I","10","","The upper bound of per amp rows when Hash Partitioning will be considered with no confidence."
"2","13039","MinPerAMPGroupCnt                                               ","I","5","","The fudge factor when considering Hash Partitioning by considering number of group by values."
"2","13062","AllowNoConfNJ                                                   ","I","0","","Flag to allow nested-rowid join when source is of no confidence.\n0:Disallow nested-rowid join when source is of no confidence.(Default)\n1:Allow nested-rowid join when source is of no confidence.\n"
"2","13061","AllowColAmbiguity                                               ","I","0","","Allow queries which has ambiguty column fields in derived table \n1            -  Allow ambiguity columns \n0(default)   -  Do not allow ambiguity columns  \n"
"2","13056","UseRowkeyOverSlidingWindow                                      ","I","0","","Use UseRowkeyOverSlidingWindow to always choose rowkey joins over sliding window joins\n0: Allow sliding window join over rowkey join (Default)\n1: Force to always choose rowkey join over sliding window join\n"
"2","13089","TermConfCheck                                                   ","I","0","","This flag controls what applicable terms are used for Constraint Scan NUSI access path.0: All applicable terms are used (Default)\n1: Only applicable terms with at least low-confidence are used\n"
"2","13090","DisableSelectiveDistinctAndGBRewrites                           ","I","1","","This flag controls whether to apply Distinct2GB and GB2Distinct on Subqueries.\n0: default, do not disable Distinct2GB and the GB2Distinct for subquery in opt.\n1: disable all.\n2: disable Distinct2GB for outermost select of INS-SEL.\n4: disable GB2Distinct for subquery.\n6: disable Distinct2GB for INS-SEL and GB2Distinct for subquery.\n"
"2","17008","nosattc                                                         ","I","0","","to disable SAT-TC feature  0 (default)- Disable this optimization. \n  1          - Enable this optimization. \n"
"2","17013","noinner                                                         ","I","0","","indicate no inner join  0 (default)- Disable this optimization. \n  1          - Enable this optimization. \n"
"2","17063","nopredsimpl                                                     ","I","0","","to disable PREDICATE SIMPLIFICATION feature  0 (default)- Disable this optimization. \n  1          - Enable this optimization. \n"
"2","13120","DisableWhiteningWhileErrChk                                     ","I","0","","to disable whitening of code while ErrChkRewrite rule  0 (default)- Disable this optimization. \n  1          - Enable this optimization. \n"
"2","14000","InitTacticalResp1                                               ","I","1","","The value of per-AMP run-time CPU cost in seconds that determines a tactical query."
"2","14001","InitTacticalResp2                                               ","I","2","","The value of per-AMP run-time CPU cost in seconds that determines a tactical query when it is submitted as HiPriority request."
"2","14002","InitHighParsingPTThreshold                                      ","I","0.1000000000000000055511151231257827021181583404541015625","","Threshold percentage of parsing and run-time CPU cost to determine if it is a request which has high parsing cost."
"2","14003","InitHighParsingRTThreshold                                      ","I","1.100000000000000088817841970012523233890533447265625","","Threshold multiplication factor for the determination of run time benefits for a query that has high parsing cost."
"2","14004","InitLowParsingRTThreshold                                       ","I","1","","Threshold multiplication factor for the determination of run time benefits for a query that has low parsing cost."
"2","14005","UseHiPriority                                                   ","I","1","","A flag that enables/disables the HiPriority based decisions in the caching algorithm."
"2","14006","ElapsedTimeThreshold                                            ","I","1","","Threshold multiplication factor by which specific plan should better compared to generic plan execution."
"2","14007","EstimateCostFilter                                              ","I","10","","Threshold factor by which the estimated cost of a specific plan should be better than the estimated cost of a generic plan."
"2","14008","CompareEstimates                                                ","I","0","","A flag that enables/disables the estimate based comparisons for deciding between generic and specific plan execution."
"2","15001","InitInsertNUSICf                                                ","I","","","Unscaled value of InsertNUSICf"
"2","15002","InitInsertNUSIOv                                                ","I","","","Unscaled value of InsertNUSIOv"
"2","15003","InitInsertUSICf                                                 ","I","","","Unscaled value of InsertUSICf"
"2","15004","InitInsertUSIOv                                                 ","I","","","Unscaled value of InsertUSIOv"
"2","15005","InitInsert1RowCf                                                ","I","","","Unscaled value of Insert1RowCf"
"2","15006","InitInsert1RowOv                                                ","I","","","Unscaled value of Insert1RowOv"
"2","15007","InitInsertIntCf                                                 ","I","","","Unscaled value of InsertIntCf"
"2","15008","InitInsertIntOv                                                 ","I","","","Unscaled value of InsertIntOv"
"2","15009","InitInsertFloatCf                                               ","I","","","Unscaled value of InsertFloatCf"
"2","15010","InitInsertFloatOv                                               ","I","","","Unscaled value of InsertFloatOv"
"2","15011","InitInsertByteCf                                                ","I","","","Unscaled value of InsertByteCf"
"2","15012","InitInsertByteOv                                                ","I","","","Unscaled value of InsertByteOv"
"2","15013","InitInsertCharCf                                                ","I","","","Unscaled value of InsertCharCf"
"2","15014","InitInsertCharOv                                                ","I","","","Unscaled value of InsertCharOv"
"2","15015","InitInsertCharLenCf                                             ","I","","","Unscaled value of InsertCharLenCf"
"2","15016","InitInsertCharLenOv                                             ","I","","","Unscaled value of InsertCharLenOv"
"2","15025","InitDeleteUSICf                                                 ","I","","","Unscaled value of DeleteUSICf"
"2","15026","InitDeleteUSIOv                                                 ","I","","","Unscaled value of DeleteUSIOv"
"2","15027","InitDeleteNUSICf                                                ","I","","","Unscaled value of DeleteNUSICf"
"2","15028","InitDeleteNUSIOv                                                ","I","","","Unscaled value of DeleteNUSIOv"
"2","15029","InitDeleteRowCf                                                 ","I","","","Unscaled value of DeleteRowCf"
"2","15030","InitDeleteRowOv                                                 ","I","","","Unscaled value of DeleteRowOv"
"2","15031","InitDeleteFBCf                                                  ","I","","","Unscaled value of DeleteFBCf"
"2","15032","InitDeleteFBOv                                                  ","I","","","Unscaled value of DeleteFBOv"
"2","15050","InitMICIUpdateOv                                                ","I","","","Unscaled value of MICIUpdateOv"
"2","15051","InitUpdt200LowCf                                                ","I","","","Unscaled value of Updt200LowCf"
"2","15052","InitUpdt200LowOv                                                ","I","","","Unscaled value of Updt200LowOv"
"2","15053","InitUpdt200HighCf                                               ","I","","","Unscaled value of Updt200HighCf"
"2","15054","InitUpdt200HighOv                                               ","I","","","Unscaled value of Updt200HighOv"
"2","15055","InitUpdt1000LowCf                                               ","I","","","Unscaled value of Updt1000LowCf"
"2","15056","InitUpdt1000LowOv                                               ","I","","","Unscaled value of Updt1000LowOv"
"2","15057","InitUpdt1000HighCf                                              ","I","","","Unscaled value of Updt1000HighCf"
"2","15058","InitUpdt1000HighOv                                              ","I","","","Unscaled value of Updt1000HighOv"
"2","15059","InitUpdateNUSICf                                                ","I","","","Unscaled value of UpdateNUSICf"
"2","15060","InitUpdateNUSIOv                                                ","I","","","Unscaled value of UpdateNUSIOv"
"2","15061","InitUpdateUSICf                                                 ","I","","","Unscaled value of UpdateUSICf"
"2","15062","InitUpdateUSIOv                                                 ","I","","","Unscaled value of UpdateUSIOv"
"2","15063","InitUpdt200MaxCf                                                ","I","","","Unscaled value of Updt200MaxCf"
"2","15064","InitUpdt200MaxOv                                                ","I","","","Unscaled value of Updt200MaxOv"
"2","15065","InitUpdt1000MaxCf                                               ","I","","","Unscaled value of Updt1000MaxCf"
"2","15066","InitUpdt1000MaxOv                                               ","I","","","Unscaled value of Updt1000MaxOv"
"2","15067","InitUpdHighCutPoint                                             ","I","","","Unscaled value of UpdHighCutPoint"
"2","15068","InitUpdSampleMaxRows                                            ","I","","","Unscaled value of UpdSampleMaxRows"
"2","15075","InitMergeUSICf                                                  ","I","","","Unscaled value of MergeUSICf"
"2","15076","InitMergeUSIOv                                                  ","I","","","Unscaled value of MergeUSIOv"
"2","15077","InitMerget100Cf                                                 ","I","","","Unscaled value of Merget100Cf"
"2","15078","InitMerget100Ov                                                 ","I","","","Unscaled value of Merget100Ov"
"2","15079","InitMerget200Cf                                                 ","I","","","Unscaled value of Merget200Cf"
"2","15080","InitMerget200Ov                                                 ","I","","","Unscaled value of Merget200Ov"
"2","15081","InitMerget400Cf                                                 ","I","","","Unscaled value of Merget400Cf"
"2","15082","InitMerget400Ov                                                 ","I","","","Unscaled value of Merget400Ov"
"2","15083","InitMerget1000Cf                                                ","I","","","Unscaled value of Merget1000Cf"
"2","15084","InitMerget1000Ov                                                ","I","","","Unscaled value of Merget1000Ov"
"2","15085","InitMerget100FBCf                                               ","I","","","Unscaled value of Merget100FBCf"
"2","15086","InitMerget100FBOv                                               ","I","","","Unscaled value of Merget100FBOv"
"2","15087","InitMerget200FBCf                                               ","I","","","Unscaled value of Merget200FBCf"
"2","15088","InitMerget200FBOv                                               ","I","","","Unscaled value of Merget200FBOv"
"2","15089","InitMerget400FBCf                                               ","I","","","Unscaled value of Merget400FBCf"
"2","15090","InitMerget400FBOv                                               ","I","","","Unscaled value of Merget400FBOv"
"2","15091","InitMerget1000FBCf                                              ","I","","","Unscaled value of Merget1000FBCf"
"2","15092","InitMerget1000FBOv                                              ","I","","","Unscaled value of Merget1000FBOv"
"2","15093","InitMerge1NUSICf                                                ","I","","","Unscaled value of Merge1NUSICf"
"2","15094","InitMerge1NUSIOv                                                ","I","","","Unscaled value of Merge1NUSIOv"
"2","15101","InitMergeUt100Cf                                                ","I","","","Unscaled value of MergeUt100Cf"
"2","15102","InitMergeUt100Ov                                                ","I","","","Unscaled value of MergeUt100Ov"
"2","15103","InitMergeUt200Cf                                                ","I","","","Unscaled value of MergeUt200Cf"
"2","15104","InitMergeUt200Ov                                                ","I","","","Unscaled value of MergeUt200Ov"
"2","15105","InitMergeUt400Cf                                                ","I","","","Unscaled value of MergeUt400Cf"
"2","15106","InitMergeUt400Ov                                                ","I","","","Unscaled value of MergeUt400Ov"
"2","15107","InitMergeUt1000Cf                                               ","I","","","Unscaled value of MergeUt1000Cf"
"2","15108","InitMergeUt1000Ov                                               ","I","","","Unscaled value of MergeUt1000Ov"
"2","15109","InitMergeUt100FBCf                                              ","I","","","Unscaled value of MergeUt100FBCf"
"2","15110","InitMergeUt100FBOv                                              ","I","","","Unscaled value of MergeUt100FBOv"
"2","15111","InitMergeUt200FBCf                                              ","I","","","Unscaled value of MergeUt200FBCf"
"2","15112","InitMergeUt200FBOv                                              ","I","","","Unscaled value of MergeUt200FBOv"
"2","15113","InitMergeUt400FBCf                                              ","I","","","Unscaled value of MergeUt400FBCf"
"2","15114","InitMergeUt400FBOv                                              ","I","","","Unscaled value of MergeUt400FBOv"
"2","15115","InitMergeUt1000FBCf                                             ","I","","","Unscaled value of MergeUt1000FBCf"
"2","15116","InitMergeUt1000FBOv                                             ","I","","","Unscaled value of MergeUt1000FBOv"
"2","15117","InitMergeU1NUSICf                                               ","I","","","Unscaled value of MergeU1NUSICf"
"2","15118","InitMergeU1NUSIOv                                               ","I","","","Unscaled value of MergeU1NUSIOv"
"2","15125","InitMergeDt100Cf                                                ","I","","","Unscaled value of MergeDt100Cf"
"2","15126","InitMergeDt100Ov                                                ","I","","","Unscaled value of MergeDt100Ov"
"2","15127","InitMergeDt200Cf                                                ","I","","","Unscaled value of MergeDt200Cf"
"2","15128","InitMergeDt200Ov                                                ","I","","","Unscaled value of MergeDt200Ov"
"2","15129","InitMergeDt400Cf                                                ","I","","","Unscaled value of MergeDt400Cf"
"2","15130","InitMergeDt400Ov                                                ","I","","","Unscaled value of MergeDt400Ov"
"2","15131","InitMergeDt1000Cf                                               ","I","","","Unscaled value of MergeDt1000Cf"
"2","15132","InitMergeDt1000Ov                                               ","I","","","Unscaled value of MergeDt1000Ov"
"2","15133","InitMergeDt100FBCf                                              ","I","","","Unscaled value of MergeDt100FBCf"
"2","15134","InitMergeDt100FBOv                                              ","I","","","Unscaled value of MergeDt100FBOv"
"2","15135","InitMergeDt200FBCf                                              ","I","","","Unscaled value of MergeDt200FBCf"
"2","15136","InitMergeDt200FBOv                                              ","I","","","Unscaled value of MergeDt200FBOv"
"2","15137","InitMergeDt400FBCf                                              ","I","","","Unscaled value of MergeDt400FBCf"
"2","15138","InitMergeDt400FBOv                                              ","I","","","Unscaled value of MergeDt400FBOv"
"2","15139","InitMergeDt1000FBCf                                             ","I","","","Unscaled value of MergeDt1000FBCf"
"2","15140","InitMergeDt1000FBOv                                             ","I","","","Unscaled value of MergeDt1000FBOv"
"2","15141","InitMergeD1NUSICf                                               ","I","","","Unscaled value of MergeD1NUSICf"
"2","15142","InitMergeD1NUSIOv                                               ","I","","","Unscaled value of MergeD1NUSIOv"
"2","15150","InitCheckRIOv                                                   ","I","","","Unscaled value of CheckRIOv"
"2","15151","InitCheckRICf                                                   ","I","","","Unscaled value of CheckRICf"
"2","15152","InitUpd1RIOv                                                    ","I","","","Unscaled value of Upd1RIOv"
"2","15153","InitUpd1RICf                                                    ","I","","","Unscaled value of Upd1RICf"
"2","15154","InitLocalSortThreshold                                          ","I","","","Threshold for doing local sort in the global aggregation"
"2","16001","InsertNUSICf                                                    ","C","","","Coefficient of linear term in the NUSI insert cost formula"
"2","16002","InsertNUSIOv                                                    ","C","","","Overhead for the inserting NUSI formula"
"2","16003","InsertUSICf                                                     ","C","","","Coefficient of linear term in the USI insert cost formula"
"2","16004","InsertUSIOv                                                     ","C","","","Overhead for the inserting USI formula"
"2","16005","Insert1RowCf                                                    ","C","","","Coefficient of linear term in the 1 row insert cost formula"
"2","16006","Insert1RowOv                                                    ","C","","","Overhead for the 1 row inserting formula"
"2","16007","InsertIntCf                                                     ","C","","","Coefficient of linear term in the integer insert cost formula"
"2","16008","InsertIntOv                                                     ","C","","","Overhead term in the integer insert cost formula"
"2","16009","InsertFloatCf                                                   ","C","","","Coefficient of linear term in the float insert cost formula"
"2","16010","InsertFloatOv                                                   ","C","","","Overhead term in the float insert cost formula"
"2","16011","InsertByteCf                                                    ","C","","","Coefficient of linear term in the byte insert cost formula"
"2","16012","InsertByteOv                                                    ","C","","","Overhead term in the byte insert cost formula"
"2","16013","InsertCharCf                                                    ","C","","","Coefficient of linear term in the char insert cost formula"
"2","16014","InsertCharOv                                                    ","C","","","Overhead term in the char insert cost formula"
"2","16015","InsertCharLenCf                                                 ","C","","","Coefficient of linear term in the charlen insert cost formula"
"2","16016","InsertCharLenOv                                                 ","C","","","Overhead term in the charlen insert cost formula"
"2","16025","DeleteUSICf                                                     ","C","","","Coefficient of linear term in the USI delete cost formula"
"2","16026","DeleteUSIOv                                                     ","C","","","Overhead cost for deleting a USI row"
"2","16027","DeleteNUSICf                                                    ","C","","","Coefficient of linear term in the NUSI delete cost formula"
"2","16028","DeleteNUSIOv                                                    ","C","","","Overhead cost for deleting a NUSI row"
"2","16029","DeleteRowCf                                                     ","C","","","Coefficient of linear term in the delete cost formula"
"2","16030","DeleteRowOv                                                     ","C","","","Overhead for the row deleting formula"
"2","16031","DeleteFBCf                                                      ","C","","","Coefficient of linear term in the delete cost formula"
"2","16032","DeleteFBOv                                                      ","C","","","Overhead for the row deleting formula"
"2","16050","MICIUpdateOv                                                    ","C","","","CPU cost to update MI & CIs"
"2","16051","Updt200LowCf                                                    ","C","","","Coefficient of linear term in the updating formula for 1Kx200bytes"
"2","16052","Updt200LowOv                                                    ","C","","","Overhead for the updating formula for 1Kx200bytes"
"2","16053","Updt200HighCf                                                   ","C","","","Coefficient of linear term in the updating formula for HighCutPointx200bytes"
"2","16054","Updt200HighOv                                                   ","C","","","Overhead for the updating formula for HighCutPointx200bytes"
"2","16055","Updt1000LowCf                                                   ","C","","","Coefficient of linear term in the updating formula for 1Kx1000bytes"
"2","16056","Updt1000LowOv                                                   ","C","","","Overhead for the updating formula for 1Kx1000bytes"
"2","16057","Updt1000HighCf                                                  ","C","","","Coefficient of linear term in the updating formula for HighCutPointx1000bytes"
"2","16058","Updt1000HighOv                                                  ","C","","","Overhead for the updating formula for HighCutPointx1000bytes"
"2","16059","UpdateNUSICf                                                    ","C","","","Coefficient of linear term in the NUSI update cost formula"
"2","16060","UpdateNUSIOv                                                    ","C","","","Overhead for the updating NUSI formula"
"2","16061","UpdateUSICf                                                     ","C","","","Coefficient of linear term in the USI update cost formula"
"2","16062","UpdateUSIOv                                                     ","C","","","Overhead for the updating USI formula"
"2","16063","Updt200MaxCf                                                    ","C","","","Coefficient of linear term in the updating formula for SampleMaxRowsx200bytes"
"2","16064","Updt200MaxOv                                                    ","C","","","Overhead for the updating formula for SampleMaxRowsx200bytes"
"2","16065","Updt1000MaxCf                                                   ","C","","","Coefficient of linear term in the updating formula for SampleMaxRowsx1000bytes"
"2","16066","Updt1000MaxOv                                                   ","C","","","Overhead for the updating formula for SampleMaxRowsx1000bytes"
"2","16067","UpdHighCutPoint                                                 ","C","","","Update High Cut Point"
"2","16068","UpdSampleMaxRows                                                ","C","","","Sample Max Rows"
"2","16075","MergeUSICf                                                      ","C","","","Coefficient of linear term for the USI merging formula"
"2","16076","MergeUSIOv                                                      ","C","","","Overhead for the USI merging formula"
"2","16077","Merget100Cf                                                     ","C","","","Coefficient of linear term for the merging 100 byte rowsize formula"
"2","16078","Merget100Ov                                                     ","C","","","Overhead for the merging 100 byte rowsize  formula"
"2","16079","Merget200Cf                                                     ","C","","","Coefficient of linear term for the merging 200 byte rowsize formula"
"2","16080","Merget200Ov                                                     ","C","","","Overhead for the merging 200 byte rowsize formula"
"2","16081","Merget400Cf                                                     ","C","","","Coefficient of linear term for the merging 400 byte rowsize formula"
"2","16082","Merget400Ov                                                     ","C","","","Overhead for the merging 400 byte rowsize formula"
"2","16083","Merget1000Cf                                                    ","C","","","Coefficient of linear term for the merging 1000 byte rowsize formula"
"2","16084","Merget1000Ov                                                    ","C","","","Overhead for the merging 1000 byte rowsize formula"
"2","16085","Merget100FBCf                                                   ","C","","","Coefficient of linear term for the merging 100 byte rowsize formula"
"2","16086","Merget100FBOv                                                   ","C","","","Overhead for the merging 100 byte rowsize  formula"
"2","16087","Merget200FBCf                                                   ","C","","","Coefficient of linear term for the merging 200 byte rowsize formula"
"2","16088","Merget200FBOv                                                   ","C","","","Overhead for the merging 200 byte rowsize formula"
"2","16089","Merget400FBCf                                                   ","C","","","Coefficient of linear term for the merging 400 byte rowsize formula"
"2","16090","Merget400FBOv                                                   ","C","","","Overhead for the merging 400 byte rowsize formula"
"2","16091","Merget1000FBCf                                                  ","C","","","Coefficient of linear term for the merging 1000 byte rowsize formula"
"2","16092","Merget1000FBOv                                                  ","C","","","Overhead for the merging 1000 byte rowsize formula"
"2","16093","Merge1NUSICf                                                    ","C","","","Coefficient of linear term for the 1NUSI merging formula"
"2","16094","Merge1NUSIOv                                                    ","C","","","Overhead for the 1NUSI merging formula"
"2","16101","MergeUt100Cf                                                    ","C","","","Coefficient of linear term for the merge-updating 100 byte rowsize formula"
"2","16102","MergeUt100Ov                                                    ","C","","","Overhead for the merge updating 100 byte rowsize formula"
"2","16103","MergeUt200Cf                                                    ","C","","","Coefficient of linear term for the merge updating 200 byte rowsize formula"
"2","16104","MergeUt200Ov                                                    ","C","","","Overhead for the merge updating 200 byte rowsize formula"
"2","16105","MergeUt400Cf                                                    ","C","","","Coefficient of linear term for the merge updating 400 byte rowsize formula"
"2","16106","MergeUt400Ov                                                    ","C","","","Overhead for the merge updating 400 byte rowsize formula"
"2","16107","MergeUt1000Cf                                                   ","C","","","Coefficient of linear term for the merge updating 1000 byte rowsize formula"
"2","16108","MergeUt1000Ov                                                   ","C","","","Overhead for the merge updating 1000 byte rowsize formula"
"2","16109","MergeUt100FBCf                                                  ","C","","","Coefficient of linear term for the merge-updating 100 byte rowsize formula"
"2","16110","MergeUt100FBOv                                                  ","C","","","Overhead for the merge updating 100 byte rowsize formula - FB"
"2","16111","MergeUt200FBCf                                                  ","C","","","Coefficient of linear term for the merge updating 200 byte rowsize formula - FB"
"2","16112","MergeUt200FBOv                                                  ","C","","","Overhead for the merge updating 200 byte rowsize formula - FB "
"2","16113","MergeUt400FBCf                                                  ","C","","","Coefficient of linear term for the merge updating 400 byte rowsize formula - FB"
"2","16114","MergeUt400FBOv                                                  ","C","","","Overhead for the merge updating 400 byte rowsize formula - FB"
"2","16115","MergeUt1000FBCf                                                 ","C","","","Coefficient of linear term for the merge updating 1000 byte rowsize formula - FB"
"2","16116","MergeUt1000FBOv                                                 ","C","","","Overhead for the merge updating 1000 byte rowsize formula - FB"
"2","16117","MergeU1NUSICf                                                   ","C","","","Coefficient of linear term for the 1NUSI merge updating formula"
"2","16118","MergeU1NUSIOv                                                   ","C","","","Overhead for the 1NUSI merge updating formula"
"2","16125","MergeDt100Cf                                                    ","C","","","Coefficient of linear term for the merge-updating 100 byte rowsize formula"
"2","16126","MergeDt100Ov                                                    ","C","","","Overhead for the merge updating 100 byte rowsize formula"
"2","16127","MergeDt200Cf                                                    ","C","","","Coefficient of linear term for the merge updating 200 byte rowsize formula"
"2","16128","MergeDt200Ov                                                    ","C","","","Overhead for the merge updating 200 byte rowsize formula"
"2","16129","MergeDt400Cf                                                    ","C","","","Coefficient of linear term for the merge updating 400 byte rowsize formula"
"2","16130","MergeDt400Ov                                                    ","C","","","Overhead for the merge updating 400 byte rowsize formula"
"2","16131","MergeDt1000Cf                                                   ","C","","","Coefficient of linear term for the merge updating 1000 byte rowsize formula"
"2","16132","MergeDt1000Ov                                                   ","C","","","Overhead for the merge updating 1000 byte rowsize formula"
"2","16133","MergeDt100FBCf                                                  ","C","","","Coefficient of linear term for the merge-updating 100 byte rowsize formula"
"2","16134","MergeDt100FBOv                                                  ","C","","","Overhead for the merge updating 100 byte rowsize formula - FB"
"2","16135","MergeDt200FBCf                                                  ","C","","","Coefficient of linear term for the merge updating 200 byte rowsize formula - FB"
"2","16136","MergeDt200FBOv                                                  ","C","","","Overhead for the merge updating 200 byte rowsize formula - FB "
"2","16137","MergeDt400FBCf                                                  ","C","","","Coefficient of linear term for the merge updating 400 byte rowsize formula - FB"
"2","16138","MergeDt400FBOv                                                  ","C","","","Overhead for the merge updating 400 byte rowsize formula - FB"
"2","16139","MergeDt1000FBCf                                                 ","C","","","Coefficient of linear term for the merge updating 1000 byte rowsize formula - FB"
"2","16140","MergeDt1000FBOv                                                 ","C","","","Overhead for the merge updating 1000 byte rowsize formula - FB"
"2","16141","MergeD1NUSICf                                                   ","C","","","Coefficient of linear term for the 1NUSI merge updating formula"
"2","16142","MergeD1NUSIOv                                                   ","C","","","Overhead for the 1NUSI merge updating formula"
"2","16150","CheckRIOv                                                       ","C","","","Overhead for the RI checking formula"
"2","16151","CheckRICf                                                       ","C","","","Coefficient of linear term for the RI checking formula"
"2","16152","Upd1RIOv                                                        ","C","","","Overhead for the updating with 1 RI checking formula"
"2","16153","Upd1RICf                                                        ","C","","","Coefficient of linear term for the updating with 1 RI checking formula"
"2","16154","LocalSortThreshold                                              ","C","","","Coefficient for skipping the local sort in SUM step"
